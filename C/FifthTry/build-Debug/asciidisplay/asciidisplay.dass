
..\build-Debug\bin\asciidisplay.exe:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define SIMULATOR 1
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	@ (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 fadb 	bl	200005be <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			@ (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <configure_dataport>:

#define PORT_OUTPUT_WRITE 1
#define PORT_INPUT_READ 0
// MUST FIRST BE USED IF READING FROM DISPLAY, although method chains might do so automatically...
void configure_dataport(unsigned char in_write_mode)
{
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
20000016:	0002      	movs	r2, r0
20000018:	1dfb      	adds	r3, r7, #7
2000001a:	701a      	strb	r2, [r3, #0]
	displayPortE->MODER = in_write_mode ? 0x5555 : 0x0055;
2000001c:	1dfb      	adds	r3, r7, #7
2000001e:	781b      	ldrb	r3, [r3, #0]
20000020:	2b00      	cmp	r3, #0
20000022:	d001      	beq.n	20000028 <configure_dataport+0x18>
20000024:	4a04      	ldr	r2, [pc, #16]	@ (20000038 <configure_dataport+0x28>)
20000026:	e000      	b.n	2000002a <configure_dataport+0x1a>
20000028:	2255      	movs	r2, #85	@ 0x55
2000002a:	4b04      	ldr	r3, [pc, #16]	@ (2000003c <configure_dataport+0x2c>)
2000002c:	681b      	ldr	r3, [r3, #0]
2000002e:	601a      	str	r2, [r3, #0]
}
20000030:	46c0      	nop			@ (mov r8, r8)
20000032:	46bd      	mov	sp, r7
20000034:	b002      	add	sp, #8
20000036:	bd80      	pop	{r7, pc}
20000038:	00005555 	andeq	r5, r0, r5, asr r5
2000003c:	2000075c 	andcs	r0, r0, ip, asr r7

20000040 <delay_nano>:
//-------------------------------

//---Delay methods---
void delay_nano(unsigned int ns)
{
20000040:	b590      	push	{r4, r7, lr}
20000042:	b083      	sub	sp, #12
20000044:	af00      	add	r7, sp, #0
20000046:	6078      	str	r0, [r7, #4]
	sysTick->CTRL = 0;
20000048:	4b14      	ldr	r3, [pc, #80]	@ (2000009c <delay_nano+0x5c>)
2000004a:	681b      	ldr	r3, [r3, #0]
2000004c:	2200      	movs	r2, #0
2000004e:	601a      	str	r2, [r3, #0]
	sysTick->LOAD = ns / 6;
20000050:	4b12      	ldr	r3, [pc, #72]	@ (2000009c <delay_nano+0x5c>)
20000052:	681c      	ldr	r4, [r3, #0]
20000054:	687b      	ldr	r3, [r7, #4]
20000056:	2106      	movs	r1, #6
20000058:	0018      	movs	r0, r3
2000005a:	f000 faf3 	bl	20000644 <__udivsi3>
2000005e:	0003      	movs	r3, r0
20000060:	6063      	str	r3, [r4, #4]
	sysTick->CLKSOURCE = 1;
20000062:	4b0e      	ldr	r3, [pc, #56]	@ (2000009c <delay_nano+0x5c>)
20000064:	681b      	ldr	r3, [r3, #0]
20000066:	781a      	ldrb	r2, [r3, #0]
20000068:	2104      	movs	r1, #4
2000006a:	430a      	orrs	r2, r1
2000006c:	701a      	strb	r2, [r3, #0]
	sysTick->ENABLE = 1;
2000006e:	4b0b      	ldr	r3, [pc, #44]	@ (2000009c <delay_nano+0x5c>)
20000070:	681b      	ldr	r3, [r3, #0]
20000072:	781a      	ldrb	r2, [r3, #0]
20000074:	2101      	movs	r1, #1
20000076:	430a      	orrs	r2, r1
20000078:	701a      	strb	r2, [r3, #0]
	while (sysTick->COUNTFLAG == 0) {}
2000007a:	46c0      	nop			@ (mov r8, r8)
2000007c:	4b07      	ldr	r3, [pc, #28]	@ (2000009c <delay_nano+0x5c>)
2000007e:	681b      	ldr	r3, [r3, #0]
20000080:	681b      	ldr	r3, [r3, #0]
20000082:	03db      	lsls	r3, r3, #15
20000084:	0fdb      	lsrs	r3, r3, #31
20000086:	b2db      	uxtb	r3, r3
20000088:	2b00      	cmp	r3, #0
2000008a:	d0f7      	beq.n	2000007c <delay_nano+0x3c>
	sysTick->CTRL = 0;
2000008c:	4b03      	ldr	r3, [pc, #12]	@ (2000009c <delay_nano+0x5c>)
2000008e:	681b      	ldr	r3, [r3, #0]
20000090:	2200      	movs	r2, #0
20000092:	601a      	str	r2, [r3, #0]
}
20000094:	46c0      	nop			@ (mov r8, r8)
20000096:	46bd      	mov	sp, r7
20000098:	b003      	add	sp, #12
2000009a:	bd90      	pop	{r4, r7, pc}
2000009c:	20000760 	andcs	r0, r0, r0, ror #14

200000a0 <delay_250ns>:

void delay_250ns()
{
200000a0:	b580      	push	{r7, lr}
200000a2:	af00      	add	r7, sp, #0
	sysTick->CTRL = 0;
200000a4:	4b11      	ldr	r3, [pc, #68]	@ (200000ec <delay_250ns+0x4c>)
200000a6:	681b      	ldr	r3, [r3, #0]
200000a8:	2200      	movs	r2, #0
200000aa:	601a      	str	r2, [r3, #0]
	sysTick->LOAD = 42;
200000ac:	4b0f      	ldr	r3, [pc, #60]	@ (200000ec <delay_250ns+0x4c>)
200000ae:	681b      	ldr	r3, [r3, #0]
200000b0:	222a      	movs	r2, #42	@ 0x2a
200000b2:	605a      	str	r2, [r3, #4]
	sysTick->CLKSOURCE = 1;
200000b4:	4b0d      	ldr	r3, [pc, #52]	@ (200000ec <delay_250ns+0x4c>)
200000b6:	681b      	ldr	r3, [r3, #0]
200000b8:	781a      	ldrb	r2, [r3, #0]
200000ba:	2104      	movs	r1, #4
200000bc:	430a      	orrs	r2, r1
200000be:	701a      	strb	r2, [r3, #0]
	sysTick->ENABLE = 1;
200000c0:	4b0a      	ldr	r3, [pc, #40]	@ (200000ec <delay_250ns+0x4c>)
200000c2:	681b      	ldr	r3, [r3, #0]
200000c4:	781a      	ldrb	r2, [r3, #0]
200000c6:	2101      	movs	r1, #1
200000c8:	430a      	orrs	r2, r1
200000ca:	701a      	strb	r2, [r3, #0]
	while (sysTick->COUNTFLAG == 0) {}
200000cc:	46c0      	nop			@ (mov r8, r8)
200000ce:	4b07      	ldr	r3, [pc, #28]	@ (200000ec <delay_250ns+0x4c>)
200000d0:	681b      	ldr	r3, [r3, #0]
200000d2:	681b      	ldr	r3, [r3, #0]
200000d4:	03db      	lsls	r3, r3, #15
200000d6:	0fdb      	lsrs	r3, r3, #31
200000d8:	b2db      	uxtb	r3, r3
200000da:	2b00      	cmp	r3, #0
200000dc:	d0f7      	beq.n	200000ce <delay_250ns+0x2e>
	sysTick->CTRL = 0;
200000de:	4b03      	ldr	r3, [pc, #12]	@ (200000ec <delay_250ns+0x4c>)
200000e0:	681b      	ldr	r3, [r3, #0]
200000e2:	2200      	movs	r2, #0
200000e4:	601a      	str	r2, [r3, #0]
}
200000e6:	46c0      	nop			@ (mov r8, r8)
200000e8:	46bd      	mov	sp, r7
200000ea:	bd80      	pop	{r7, pc}
200000ec:	20000760 	andcs	r0, r0, r0, ror #14

200000f0 <delay_mikro>:

void delay_mikro(unsigned int us)
{
200000f0:	b580      	push	{r7, lr}
200000f2:	b084      	sub	sp, #16
200000f4:	af00      	add	r7, sp, #0
200000f6:	6078      	str	r0, [r7, #4]
	for (int i = 0; i < 4*us; i++)
200000f8:	2300      	movs	r3, #0
200000fa:	60fb      	str	r3, [r7, #12]
200000fc:	e004      	b.n	20000108 <delay_mikro+0x18>
	{
		delay_250ns();		// 250 * 4 ns = 1000ns
200000fe:	f7ff ffcf 	bl	200000a0 <delay_250ns>
	for (int i = 0; i < 4*us; i++)
20000102:	68fb      	ldr	r3, [r7, #12]
20000104:	3301      	adds	r3, #1
20000106:	60fb      	str	r3, [r7, #12]
20000108:	687b      	ldr	r3, [r7, #4]
2000010a:	009a      	lsls	r2, r3, #2
2000010c:	68fb      	ldr	r3, [r7, #12]
2000010e:	429a      	cmp	r2, r3
20000110:	d8f5      	bhi.n	200000fe <delay_mikro+0xe>
	}
}
20000112:	46c0      	nop			@ (mov r8, r8)
20000114:	46c0      	nop			@ (mov r8, r8)
20000116:	46bd      	mov	sp, r7
20000118:	b004      	add	sp, #16
2000011a:	bd80      	pop	{r7, pc}

2000011c <delay_milli>:

void delay_milli(unsigned int ms)
{
2000011c:	b580      	push	{r7, lr}
2000011e:	b084      	sub	sp, #16
20000120:	af00      	add	r7, sp, #0
20000122:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
	ms /= 1000;
20000124:	687b      	ldr	r3, [r7, #4]
20000126:	22fa      	movs	r2, #250	@ 0xfa
20000128:	0091      	lsls	r1, r2, #2
2000012a:	0018      	movs	r0, r3
2000012c:	f000 fa8a 	bl	20000644 <__udivsi3>
20000130:	0003      	movs	r3, r0
20000132:	607b      	str	r3, [r7, #4]
	ms++;
20000134:	687b      	ldr	r3, [r7, #4]
20000136:	3301      	adds	r3, #1
20000138:	607b      	str	r3, [r7, #4]
	#endif
	
	for (int i = 0; i < ms; i++)
2000013a:	2300      	movs	r3, #0
2000013c:	60fb      	str	r3, [r7, #12]
2000013e:	e007      	b.n	20000150 <delay_milli+0x34>
	{
		delay_mikro(1000);		// 1000 microseconds = 1 millisecond
20000140:	23fa      	movs	r3, #250	@ 0xfa
20000142:	009b      	lsls	r3, r3, #2
20000144:	0018      	movs	r0, r3
20000146:	f7ff ffd3 	bl	200000f0 <delay_mikro>
	for (int i = 0; i < ms; i++)
2000014a:	68fb      	ldr	r3, [r7, #12]
2000014c:	3301      	adds	r3, #1
2000014e:	60fb      	str	r3, [r7, #12]
20000150:	68fb      	ldr	r3, [r7, #12]
20000152:	687a      	ldr	r2, [r7, #4]
20000154:	429a      	cmp	r2, r3
20000156:	d8f3      	bhi.n	20000140 <delay_milli+0x24>
	}
}
20000158:	46c0      	nop			@ (mov r8, r8)
2000015a:	46c0      	nop			@ (mov r8, r8)
2000015c:	46bd      	mov	sp, r7
2000015e:	b004      	add	sp, #16
20000160:	bd80      	pop	{r7, pc}

20000162 <ascii_ctrl_bit_set>:
//-------------------

//---Dumb---
// This is actually so dumb.
void ascii_ctrl_bit_set(unsigned char rs_data, unsigned char read_write, unsigned char enable)
{
20000162:	b590      	push	{r4, r7, lr}
20000164:	b083      	sub	sp, #12
20000166:	af00      	add	r7, sp, #0
20000168:	0004      	movs	r4, r0
2000016a:	0008      	movs	r0, r1
2000016c:	0011      	movs	r1, r2
2000016e:	1dfb      	adds	r3, r7, #7
20000170:	1c22      	adds	r2, r4, #0
20000172:	701a      	strb	r2, [r3, #0]
20000174:	1dbb      	adds	r3, r7, #6
20000176:	1c02      	adds	r2, r0, #0
20000178:	701a      	strb	r2, [r3, #0]
2000017a:	1d7b      	adds	r3, r7, #5
2000017c:	1c0a      	adds	r2, r1, #0
2000017e:	701a      	strb	r2, [r3, #0]
	if (rs_data) 		{ displayPortE->RS = 1; }
20000180:	1dfb      	adds	r3, r7, #7
20000182:	781b      	ldrb	r3, [r3, #0]
20000184:	2b00      	cmp	r3, #0
20000186:	d005      	beq.n	20000194 <ascii_ctrl_bit_set+0x32>
20000188:	4b0e      	ldr	r3, [pc, #56]	@ (200001c4 <ascii_ctrl_bit_set+0x62>)
2000018a:	681b      	ldr	r3, [r3, #0]
2000018c:	7d1a      	ldrb	r2, [r3, #20]
2000018e:	2101      	movs	r1, #1
20000190:	430a      	orrs	r2, r1
20000192:	751a      	strb	r2, [r3, #20]
	if (read_write) 	{ displayPortE->RW = 1; }
20000194:	1dbb      	adds	r3, r7, #6
20000196:	781b      	ldrb	r3, [r3, #0]
20000198:	2b00      	cmp	r3, #0
2000019a:	d005      	beq.n	200001a8 <ascii_ctrl_bit_set+0x46>
2000019c:	4b09      	ldr	r3, [pc, #36]	@ (200001c4 <ascii_ctrl_bit_set+0x62>)
2000019e:	681b      	ldr	r3, [r3, #0]
200001a0:	7d1a      	ldrb	r2, [r3, #20]
200001a2:	2102      	movs	r1, #2
200001a4:	430a      	orrs	r2, r1
200001a6:	751a      	strb	r2, [r3, #20]
	if (enable) 		{ displayPortE->E = 1; }
200001a8:	1d7b      	adds	r3, r7, #5
200001aa:	781b      	ldrb	r3, [r3, #0]
200001ac:	2b00      	cmp	r3, #0
200001ae:	d005      	beq.n	200001bc <ascii_ctrl_bit_set+0x5a>
200001b0:	4b04      	ldr	r3, [pc, #16]	@ (200001c4 <ascii_ctrl_bit_set+0x62>)
200001b2:	681b      	ldr	r3, [r3, #0]
200001b4:	7d1a      	ldrb	r2, [r3, #20]
200001b6:	2140      	movs	r1, #64	@ 0x40
200001b8:	430a      	orrs	r2, r1
200001ba:	751a      	strb	r2, [r3, #20]
}
200001bc:	46c0      	nop			@ (mov r8, r8)
200001be:	46bd      	mov	sp, r7
200001c0:	b003      	add	sp, #12
200001c2:	bd90      	pop	{r4, r7, pc}
200001c4:	2000075c 	andcs	r0, r0, ip, asr r7

200001c8 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char rs_data, unsigned char read_write, unsigned char enable)
{
200001c8:	b590      	push	{r4, r7, lr}
200001ca:	b083      	sub	sp, #12
200001cc:	af00      	add	r7, sp, #0
200001ce:	0004      	movs	r4, r0
200001d0:	0008      	movs	r0, r1
200001d2:	0011      	movs	r1, r2
200001d4:	1dfb      	adds	r3, r7, #7
200001d6:	1c22      	adds	r2, r4, #0
200001d8:	701a      	strb	r2, [r3, #0]
200001da:	1dbb      	adds	r3, r7, #6
200001dc:	1c02      	adds	r2, r0, #0
200001de:	701a      	strb	r2, [r3, #0]
200001e0:	1d7b      	adds	r3, r7, #5
200001e2:	1c0a      	adds	r2, r1, #0
200001e4:	701a      	strb	r2, [r3, #0]
	if (!rs_data) 		{ displayPortE->RS = 0; }
200001e6:	1dfb      	adds	r3, r7, #7
200001e8:	781b      	ldrb	r3, [r3, #0]
200001ea:	2b00      	cmp	r3, #0
200001ec:	d105      	bne.n	200001fa <ascii_ctrl_bit_clear+0x32>
200001ee:	4b0f      	ldr	r3, [pc, #60]	@ (2000022c <ascii_ctrl_bit_clear+0x64>)
200001f0:	681b      	ldr	r3, [r3, #0]
200001f2:	7d1a      	ldrb	r2, [r3, #20]
200001f4:	2101      	movs	r1, #1
200001f6:	438a      	bics	r2, r1
200001f8:	751a      	strb	r2, [r3, #20]
	if (!read_write) 	{ displayPortE->RW = 0; }
200001fa:	1dbb      	adds	r3, r7, #6
200001fc:	781b      	ldrb	r3, [r3, #0]
200001fe:	2b00      	cmp	r3, #0
20000200:	d105      	bne.n	2000020e <ascii_ctrl_bit_clear+0x46>
20000202:	4b0a      	ldr	r3, [pc, #40]	@ (2000022c <ascii_ctrl_bit_clear+0x64>)
20000204:	681b      	ldr	r3, [r3, #0]
20000206:	7d1a      	ldrb	r2, [r3, #20]
20000208:	2102      	movs	r1, #2
2000020a:	438a      	bics	r2, r1
2000020c:	751a      	strb	r2, [r3, #20]
	if (!enable) 		{ displayPortE->E = 0; }
2000020e:	1d7b      	adds	r3, r7, #5
20000210:	781b      	ldrb	r3, [r3, #0]
20000212:	2b00      	cmp	r3, #0
20000214:	d105      	bne.n	20000222 <ascii_ctrl_bit_clear+0x5a>
20000216:	4b05      	ldr	r3, [pc, #20]	@ (2000022c <ascii_ctrl_bit_clear+0x64>)
20000218:	681b      	ldr	r3, [r3, #0]
2000021a:	7d1a      	ldrb	r2, [r3, #20]
2000021c:	2140      	movs	r1, #64	@ 0x40
2000021e:	438a      	bics	r2, r1
20000220:	751a      	strb	r2, [r3, #20]
}
20000222:	46c0      	nop			@ (mov r8, r8)
20000224:	46bd      	mov	sp, r7
20000226:	b003      	add	sp, #12
20000228:	bd90      	pop	{r4, r7, pc}
2000022a:	46c0      	nop			@ (mov r8, r8)
2000022c:	2000075c 	andcs	r0, r0, ip, asr r7

20000230 <ascii_write_controller>:
//----------

//---ASCII display communication handlers---
void ascii_write_controller(unsigned char byte)
{
20000230:	b580      	push	{r7, lr}
20000232:	b082      	sub	sp, #8
20000234:	af00      	add	r7, sp, #0
20000236:	0002      	movs	r2, r0
20000238:	1dfb      	adds	r3, r7, #7
2000023a:	701a      	strb	r2, [r3, #0]
	delay_nano(40);
2000023c:	2028      	movs	r0, #40	@ 0x28
2000023e:	f7ff feff 	bl	20000040 <delay_nano>
	displayPortE->E = 1;
20000242:	4b0d      	ldr	r3, [pc, #52]	@ (20000278 <ascii_write_controller+0x48>)
20000244:	681b      	ldr	r3, [r3, #0]
20000246:	7d1a      	ldrb	r2, [r3, #20]
20000248:	2140      	movs	r1, #64	@ 0x40
2000024a:	430a      	orrs	r2, r1
2000024c:	751a      	strb	r2, [r3, #20]
	displayPortE->writable_data = byte;
2000024e:	4b0a      	ldr	r3, [pc, #40]	@ (20000278 <ascii_write_controller+0x48>)
20000250:	681b      	ldr	r3, [r3, #0]
20000252:	1dfa      	adds	r2, r7, #7
20000254:	7812      	ldrb	r2, [r2, #0]
20000256:	755a      	strb	r2, [r3, #21]
	delay_250ns();
20000258:	f7ff ff22 	bl	200000a0 <delay_250ns>
	displayPortE->E = 0;
2000025c:	4b06      	ldr	r3, [pc, #24]	@ (20000278 <ascii_write_controller+0x48>)
2000025e:	681b      	ldr	r3, [r3, #0]
20000260:	7d1a      	ldrb	r2, [r3, #20]
20000262:	2140      	movs	r1, #64	@ 0x40
20000264:	438a      	bics	r2, r1
20000266:	751a      	strb	r2, [r3, #20]
	delay_nano(10);
20000268:	200a      	movs	r0, #10
2000026a:	f7ff fee9 	bl	20000040 <delay_nano>
}
2000026e:	46c0      	nop			@ (mov r8, r8)
20000270:	46bd      	mov	sp, r7
20000272:	b002      	add	sp, #8
20000274:	bd80      	pop	{r7, pc}
20000276:	46c0      	nop			@ (mov r8, r8)
20000278:	2000075c 	andcs	r0, r0, ip, asr r7

2000027c <ascii_read_controller>:

unsigned char ascii_read_controller()
{
2000027c:	b580      	push	{r7, lr}
2000027e:	b082      	sub	sp, #8
20000280:	af00      	add	r7, sp, #0
	displayPortE->E = 1;
20000282:	4b0e      	ldr	r3, [pc, #56]	@ (200002bc <ascii_read_controller+0x40>)
20000284:	681b      	ldr	r3, [r3, #0]
20000286:	7d1a      	ldrb	r2, [r3, #20]
20000288:	2140      	movs	r1, #64	@ 0x40
2000028a:	430a      	orrs	r2, r1
2000028c:	751a      	strb	r2, [r3, #20]
	delay_nano(360);
2000028e:	23b4      	movs	r3, #180	@ 0xb4
20000290:	005b      	lsls	r3, r3, #1
20000292:	0018      	movs	r0, r3
20000294:	f7ff fed4 	bl	20000040 <delay_nano>
	unsigned char rv = displayPortE->readable_data;
20000298:	4b08      	ldr	r3, [pc, #32]	@ (200002bc <ascii_read_controller+0x40>)
2000029a:	681a      	ldr	r2, [r3, #0]
2000029c:	1dfb      	adds	r3, r7, #7
2000029e:	7c52      	ldrb	r2, [r2, #17]
200002a0:	701a      	strb	r2, [r3, #0]
	displayPortE->E = 0;
200002a2:	4b06      	ldr	r3, [pc, #24]	@ (200002bc <ascii_read_controller+0x40>)
200002a4:	681b      	ldr	r3, [r3, #0]
200002a6:	7d1a      	ldrb	r2, [r3, #20]
200002a8:	2140      	movs	r1, #64	@ 0x40
200002aa:	438a      	bics	r2, r1
200002ac:	751a      	strb	r2, [r3, #20]
	return rv;
200002ae:	1dfb      	adds	r3, r7, #7
200002b0:	781b      	ldrb	r3, [r3, #0]
}
200002b2:	0018      	movs	r0, r3
200002b4:	46bd      	mov	sp, r7
200002b6:	b002      	add	sp, #8
200002b8:	bd80      	pop	{r7, pc}
200002ba:	46c0      	nop			@ (mov r8, r8)
200002bc:	2000075c 	andcs	r0, r0, ip, asr r7

200002c0 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command)
{
200002c0:	b580      	push	{r7, lr}
200002c2:	b082      	sub	sp, #8
200002c4:	af00      	add	r7, sp, #0
200002c6:	0002      	movs	r2, r0
200002c8:	1dfb      	adds	r3, r7, #7
200002ca:	701a      	strb	r2, [r3, #0]
	displayPortE->RS = 0;
200002cc:	4b0a      	ldr	r3, [pc, #40]	@ (200002f8 <ascii_write_cmd+0x38>)
200002ce:	681b      	ldr	r3, [r3, #0]
200002d0:	7d1a      	ldrb	r2, [r3, #20]
200002d2:	2101      	movs	r1, #1
200002d4:	438a      	bics	r2, r1
200002d6:	751a      	strb	r2, [r3, #20]
	displayPortE->RW = 0;
200002d8:	4b07      	ldr	r3, [pc, #28]	@ (200002f8 <ascii_write_cmd+0x38>)
200002da:	681b      	ldr	r3, [r3, #0]
200002dc:	7d1a      	ldrb	r2, [r3, #20]
200002de:	2102      	movs	r1, #2
200002e0:	438a      	bics	r2, r1
200002e2:	751a      	strb	r2, [r3, #20]
	ascii_write_controller(command);
200002e4:	1dfb      	adds	r3, r7, #7
200002e6:	781b      	ldrb	r3, [r3, #0]
200002e8:	0018      	movs	r0, r3
200002ea:	f7ff ffa1 	bl	20000230 <ascii_write_controller>
}
200002ee:	46c0      	nop			@ (mov r8, r8)
200002f0:	46bd      	mov	sp, r7
200002f2:	b002      	add	sp, #8
200002f4:	bd80      	pop	{r7, pc}
200002f6:	46c0      	nop			@ (mov r8, r8)
200002f8:	2000075c 	andcs	r0, r0, ip, asr r7

200002fc <ascii_write_data>:

void ascii_write_data(unsigned char data)
{
200002fc:	b580      	push	{r7, lr}
200002fe:	b082      	sub	sp, #8
20000300:	af00      	add	r7, sp, #0
20000302:	0002      	movs	r2, r0
20000304:	1dfb      	adds	r3, r7, #7
20000306:	701a      	strb	r2, [r3, #0]
	displayPortE->RS = 1;
20000308:	4b0a      	ldr	r3, [pc, #40]	@ (20000334 <ascii_write_data+0x38>)
2000030a:	681b      	ldr	r3, [r3, #0]
2000030c:	7d1a      	ldrb	r2, [r3, #20]
2000030e:	2101      	movs	r1, #1
20000310:	430a      	orrs	r2, r1
20000312:	751a      	strb	r2, [r3, #20]
	displayPortE->RW = 0;
20000314:	4b07      	ldr	r3, [pc, #28]	@ (20000334 <ascii_write_data+0x38>)
20000316:	681b      	ldr	r3, [r3, #0]
20000318:	7d1a      	ldrb	r2, [r3, #20]
2000031a:	2102      	movs	r1, #2
2000031c:	438a      	bics	r2, r1
2000031e:	751a      	strb	r2, [r3, #20]
	ascii_write_controller(data);
20000320:	1dfb      	adds	r3, r7, #7
20000322:	781b      	ldrb	r3, [r3, #0]
20000324:	0018      	movs	r0, r3
20000326:	f7ff ff83 	bl	20000230 <ascii_write_controller>
}
2000032a:	46c0      	nop			@ (mov r8, r8)
2000032c:	46bd      	mov	sp, r7
2000032e:	b002      	add	sp, #8
20000330:	bd80      	pop	{r7, pc}
20000332:	46c0      	nop			@ (mov r8, r8)
20000334:	2000075c 	andcs	r0, r0, ip, asr r7

20000338 <ascii_read_status>:

unsigned char ascii_read_status()
{
20000338:	b590      	push	{r4, r7, lr}
2000033a:	b083      	sub	sp, #12
2000033c:	af00      	add	r7, sp, #0
	configure_dataport(PORT_INPUT_READ);
2000033e:	2000      	movs	r0, #0
20000340:	f7ff fe66 	bl	20000010 <configure_dataport>
	displayPortE->RS = 0;
20000344:	4b0c      	ldr	r3, [pc, #48]	@ (20000378 <ascii_read_status+0x40>)
20000346:	681b      	ldr	r3, [r3, #0]
20000348:	7d1a      	ldrb	r2, [r3, #20]
2000034a:	2101      	movs	r1, #1
2000034c:	438a      	bics	r2, r1
2000034e:	751a      	strb	r2, [r3, #20]
	displayPortE->RW = 1;
20000350:	4b09      	ldr	r3, [pc, #36]	@ (20000378 <ascii_read_status+0x40>)
20000352:	681b      	ldr	r3, [r3, #0]
20000354:	7d1a      	ldrb	r2, [r3, #20]
20000356:	2102      	movs	r1, #2
20000358:	430a      	orrs	r2, r1
2000035a:	751a      	strb	r2, [r3, #20]
	unsigned char rv = ascii_read_controller();
2000035c:	1dfc      	adds	r4, r7, #7
2000035e:	f7ff ff8d 	bl	2000027c <ascii_read_controller>
20000362:	0003      	movs	r3, r0
20000364:	7023      	strb	r3, [r4, #0]
	configure_dataport(PORT_OUTPUT_WRITE);
20000366:	2001      	movs	r0, #1
20000368:	f7ff fe52 	bl	20000010 <configure_dataport>
	return rv;
2000036c:	1dfb      	adds	r3, r7, #7
2000036e:	781b      	ldrb	r3, [r3, #0]
}
20000370:	0018      	movs	r0, r3
20000372:	46bd      	mov	sp, r7
20000374:	b003      	add	sp, #12
20000376:	bd90      	pop	{r4, r7, pc}
20000378:	2000075c 	andcs	r0, r0, ip, asr r7

2000037c <ascii_read_data>:

unsigned char ascii_read_data()
{
2000037c:	b590      	push	{r4, r7, lr}
2000037e:	b083      	sub	sp, #12
20000380:	af00      	add	r7, sp, #0
	configure_dataport(PORT_INPUT_READ);
20000382:	2000      	movs	r0, #0
20000384:	f7ff fe44 	bl	20000010 <configure_dataport>
	displayPortE->RS = 1;
20000388:	4b0c      	ldr	r3, [pc, #48]	@ (200003bc <ascii_read_data+0x40>)
2000038a:	681b      	ldr	r3, [r3, #0]
2000038c:	7d1a      	ldrb	r2, [r3, #20]
2000038e:	2101      	movs	r1, #1
20000390:	430a      	orrs	r2, r1
20000392:	751a      	strb	r2, [r3, #20]
	displayPortE->RW = 1;
20000394:	4b09      	ldr	r3, [pc, #36]	@ (200003bc <ascii_read_data+0x40>)
20000396:	681b      	ldr	r3, [r3, #0]
20000398:	7d1a      	ldrb	r2, [r3, #20]
2000039a:	2102      	movs	r1, #2
2000039c:	430a      	orrs	r2, r1
2000039e:	751a      	strb	r2, [r3, #20]
	unsigned char rv = ascii_read_controller();
200003a0:	1dfc      	adds	r4, r7, #7
200003a2:	f7ff ff6b 	bl	2000027c <ascii_read_controller>
200003a6:	0003      	movs	r3, r0
200003a8:	7023      	strb	r3, [r4, #0]
	configure_dataport(PORT_OUTPUT_WRITE);
200003aa:	2001      	movs	r0, #1
200003ac:	f7ff fe30 	bl	20000010 <configure_dataport>
	return rv;
200003b0:	1dfb      	adds	r3, r7, #7
200003b2:	781b      	ldrb	r3, [r3, #0]
}
200003b4:	0018      	movs	r0, r3
200003b6:	46bd      	mov	sp, r7
200003b8:	b003      	add	sp, #12
200003ba:	bd90      	pop	{r4, r7, pc}
200003bc:	2000075c 	andcs	r0, r0, ip, asr r7

200003c0 <await_display_ready>:
//------------------------------------------

//---ASCII display commands---
void await_display_ready()
{
200003c0:	b580      	push	{r7, lr}
200003c2:	af00      	add	r7, sp, #0
	while(ascii_read_status() & 0b10000000) {} // Wait for BF-bit (on E7) to go to 0, since a 1 means the display is busy.
200003c4:	46c0      	nop			@ (mov r8, r8)
200003c6:	f7ff ffb7 	bl	20000338 <ascii_read_status>
200003ca:	0003      	movs	r3, r0
200003cc:	b25b      	sxtb	r3, r3
200003ce:	2b00      	cmp	r3, #0
200003d0:	dbf9      	blt.n	200003c6 <await_display_ready+0x6>
	delay_mikro(8);			// 8 microseconds have to pass in between command done and new command.
200003d2:	2008      	movs	r0, #8
200003d4:	f7ff fe8c 	bl	200000f0 <delay_mikro>
}
200003d8:	46c0      	nop			@ (mov r8, r8)
200003da:	46bd      	mov	sp, r7
200003dc:	bd80      	pop	{r7, pc}

200003de <clear_display>:

void clear_display()
{
200003de:	b580      	push	{r7, lr}
200003e0:	af00      	add	r7, sp, #0
	await_display_ready();
200003e2:	f7ff ffed 	bl	200003c0 <await_display_ready>
	ascii_write_cmd(0b1);
200003e6:	2001      	movs	r0, #1
200003e8:	f7ff ff6a 	bl	200002c0 <ascii_write_cmd>
	delay_milli(2);			// Command specific delay for the clear command: 2ms.
200003ec:	2002      	movs	r0, #2
200003ee:	f7ff fe95 	bl	2000011c <delay_milli>
}
200003f2:	46c0      	nop			@ (mov r8, r8)
200003f4:	46bd      	mov	sp, r7
200003f6:	bd80      	pop	{r7, pc}

200003f8 <function_set_display>:

void function_set_display(int multiple_rows, int big_characters)
{
200003f8:	b580      	push	{r7, lr}
200003fa:	b084      	sub	sp, #16
200003fc:	af00      	add	r7, sp, #0
200003fe:	6078      	str	r0, [r7, #4]
20000400:	6039      	str	r1, [r7, #0]
	await_display_ready();
20000402:	f7ff ffdd 	bl	200003c0 <await_display_ready>
	unsigned char function_set_command = 		0b00110000;
20000406:	210f      	movs	r1, #15
20000408:	187b      	adds	r3, r7, r1
2000040a:	2230      	movs	r2, #48	@ 0x30
2000040c:	701a      	strb	r2, [r3, #0]
	
	if (multiple_rows) { function_set_command |= 	0b1000; }
2000040e:	687b      	ldr	r3, [r7, #4]
20000410:	2b00      	cmp	r3, #0
20000412:	d005      	beq.n	20000420 <function_set_display+0x28>
20000414:	187b      	adds	r3, r7, r1
20000416:	187a      	adds	r2, r7, r1
20000418:	7812      	ldrb	r2, [r2, #0]
2000041a:	2108      	movs	r1, #8
2000041c:	430a      	orrs	r2, r1
2000041e:	701a      	strb	r2, [r3, #0]
	if (big_characters) { function_set_command |= 	0b0100; }
20000420:	683b      	ldr	r3, [r7, #0]
20000422:	2b00      	cmp	r3, #0
20000424:	d006      	beq.n	20000434 <function_set_display+0x3c>
20000426:	220f      	movs	r2, #15
20000428:	18bb      	adds	r3, r7, r2
2000042a:	18ba      	adds	r2, r7, r2
2000042c:	7812      	ldrb	r2, [r2, #0]
2000042e:	2104      	movs	r1, #4
20000430:	430a      	orrs	r2, r1
20000432:	701a      	strb	r2, [r3, #0]
	ascii_write_cmd(function_set_command);
20000434:	230f      	movs	r3, #15
20000436:	18fb      	adds	r3, r7, r3
20000438:	781b      	ldrb	r3, [r3, #0]
2000043a:	0018      	movs	r0, r3
2000043c:	f7ff ff40 	bl	200002c0 <ascii_write_cmd>
	delay_mikro(39);		// Command specific delay for the function set command: 39us.
20000440:	2027      	movs	r0, #39	@ 0x27
20000442:	f7ff fe55 	bl	200000f0 <delay_mikro>
}
20000446:	46c0      	nop			@ (mov r8, r8)
20000448:	46bd      	mov	sp, r7
2000044a:	b004      	add	sp, #16
2000044c:	bd80      	pop	{r7, pc}

2000044e <display_control>:

void display_control(int display_on, int cursor_on, int blinking_cursor)
{
2000044e:	b580      	push	{r7, lr}
20000450:	b086      	sub	sp, #24
20000452:	af00      	add	r7, sp, #0
20000454:	60f8      	str	r0, [r7, #12]
20000456:	60b9      	str	r1, [r7, #8]
20000458:	607a      	str	r2, [r7, #4]
	await_display_ready();
2000045a:	f7ff ffb1 	bl	200003c0 <await_display_ready>
	unsigned char display_control_command = 		0b00001000;
2000045e:	2117      	movs	r1, #23
20000460:	187b      	adds	r3, r7, r1
20000462:	2208      	movs	r2, #8
20000464:	701a      	strb	r2, [r3, #0]
	
	if (display_on) { display_control_command |= 		0b0100; }
20000466:	68fb      	ldr	r3, [r7, #12]
20000468:	2b00      	cmp	r3, #0
2000046a:	d005      	beq.n	20000478 <display_control+0x2a>
2000046c:	187b      	adds	r3, r7, r1
2000046e:	187a      	adds	r2, r7, r1
20000470:	7812      	ldrb	r2, [r2, #0]
20000472:	2104      	movs	r1, #4
20000474:	430a      	orrs	r2, r1
20000476:	701a      	strb	r2, [r3, #0]
	if (cursor_on) { display_control_command |= 		0b0010; }
20000478:	68bb      	ldr	r3, [r7, #8]
2000047a:	2b00      	cmp	r3, #0
2000047c:	d006      	beq.n	2000048c <display_control+0x3e>
2000047e:	2217      	movs	r2, #23
20000480:	18bb      	adds	r3, r7, r2
20000482:	18ba      	adds	r2, r7, r2
20000484:	7812      	ldrb	r2, [r2, #0]
20000486:	2102      	movs	r1, #2
20000488:	430a      	orrs	r2, r1
2000048a:	701a      	strb	r2, [r3, #0]
	if (blinking_cursor) { display_control_command |= 	0b0001; }
2000048c:	687b      	ldr	r3, [r7, #4]
2000048e:	2b00      	cmp	r3, #0
20000490:	d006      	beq.n	200004a0 <display_control+0x52>
20000492:	2217      	movs	r2, #23
20000494:	18bb      	adds	r3, r7, r2
20000496:	18ba      	adds	r2, r7, r2
20000498:	7812      	ldrb	r2, [r2, #0]
2000049a:	2101      	movs	r1, #1
2000049c:	430a      	orrs	r2, r1
2000049e:	701a      	strb	r2, [r3, #0]
	delay_mikro(39);		// Command specific delay for the display control command: 39us.
200004a0:	2027      	movs	r0, #39	@ 0x27
200004a2:	f7ff fe25 	bl	200000f0 <delay_mikro>
}
200004a6:	46c0      	nop			@ (mov r8, r8)
200004a8:	46bd      	mov	sp, r7
200004aa:	b006      	add	sp, #24
200004ac:	bd80      	pop	{r7, pc}

200004ae <display_entry_mode_set>:

void display_entry_mode_set(int increment_decrement, int shift_address_buffer)
{
200004ae:	b580      	push	{r7, lr}
200004b0:	b084      	sub	sp, #16
200004b2:	af00      	add	r7, sp, #0
200004b4:	6078      	str	r0, [r7, #4]
200004b6:	6039      	str	r1, [r7, #0]
	await_display_ready();
200004b8:	f7ff ff82 	bl	200003c0 <await_display_ready>
	unsigned char entry_mode_set_command = 				0b00000100;
200004bc:	210f      	movs	r1, #15
200004be:	187b      	adds	r3, r7, r1
200004c0:	2204      	movs	r2, #4
200004c2:	701a      	strb	r2, [r3, #0]
	
	if (increment_decrement) { entry_mode_set_command |= 	0b0010; }
200004c4:	687b      	ldr	r3, [r7, #4]
200004c6:	2b00      	cmp	r3, #0
200004c8:	d005      	beq.n	200004d6 <display_entry_mode_set+0x28>
200004ca:	187b      	adds	r3, r7, r1
200004cc:	187a      	adds	r2, r7, r1
200004ce:	7812      	ldrb	r2, [r2, #0]
200004d0:	2102      	movs	r1, #2
200004d2:	430a      	orrs	r2, r1
200004d4:	701a      	strb	r2, [r3, #0]
	if (shift_address_buffer) { entry_mode_set_command |= 	0b0001; }
200004d6:	683b      	ldr	r3, [r7, #0]
200004d8:	2b00      	cmp	r3, #0
200004da:	d006      	beq.n	200004ea <display_entry_mode_set+0x3c>
200004dc:	220f      	movs	r2, #15
200004de:	18bb      	adds	r3, r7, r2
200004e0:	18ba      	adds	r2, r7, r2
200004e2:	7812      	ldrb	r2, [r2, #0]
200004e4:	2101      	movs	r1, #1
200004e6:	430a      	orrs	r2, r1
200004e8:	701a      	strb	r2, [r3, #0]
	ascii_write_cmd(entry_mode_set_command);
200004ea:	230f      	movs	r3, #15
200004ec:	18fb      	adds	r3, r7, r3
200004ee:	781b      	ldrb	r3, [r3, #0]
200004f0:	0018      	movs	r0, r3
200004f2:	f7ff fee5 	bl	200002c0 <ascii_write_cmd>
	delay_mikro(39);		// Command specific delay for the entry mode set command: 39us.
200004f6:	2027      	movs	r0, #39	@ 0x27
200004f8:	f7ff fdfa 	bl	200000f0 <delay_mikro>
}
200004fc:	46c0      	nop			@ (mov r8, r8)
200004fe:	46bd      	mov	sp, r7
20000500:	b004      	add	sp, #16
20000502:	bd80      	pop	{r7, pc}

20000504 <ascii_gotoxy>:

void ascii_gotoxy(int x, int y)
{
20000504:	b580      	push	{r7, lr}
20000506:	b084      	sub	sp, #16
20000508:	af00      	add	r7, sp, #0
2000050a:	6078      	str	r0, [r7, #4]
2000050c:	6039      	str	r1, [r7, #0]
	await_display_ready();
2000050e:	f7ff ff57 	bl	200003c0 <await_display_ready>
	unsigned char address_set_command = 0x80;
20000512:	210f      	movs	r1, #15
20000514:	187b      	adds	r3, r7, r1
20000516:	2280      	movs	r2, #128	@ 0x80
20000518:	701a      	strb	r2, [r3, #0]
	x--;
2000051a:	687b      	ldr	r3, [r7, #4]
2000051c:	3b01      	subs	r3, #1
2000051e:	607b      	str	r3, [r7, #4]
	y--;
20000520:	683b      	ldr	r3, [r7, #0]
20000522:	3b01      	subs	r3, #1
20000524:	603b      	str	r3, [r7, #0]
	address_set_command |= 64*y + x;
20000526:	683b      	ldr	r3, [r7, #0]
20000528:	b2db      	uxtb	r3, r3
2000052a:	019b      	lsls	r3, r3, #6
2000052c:	b2da      	uxtb	r2, r3
2000052e:	687b      	ldr	r3, [r7, #4]
20000530:	b2db      	uxtb	r3, r3
20000532:	18d3      	adds	r3, r2, r3
20000534:	b2db      	uxtb	r3, r3
20000536:	b25a      	sxtb	r2, r3
20000538:	187b      	adds	r3, r7, r1
2000053a:	781b      	ldrb	r3, [r3, #0]
2000053c:	b25b      	sxtb	r3, r3
2000053e:	4313      	orrs	r3, r2
20000540:	b25a      	sxtb	r2, r3
20000542:	187b      	adds	r3, r7, r1
20000544:	701a      	strb	r2, [r3, #0]
	ascii_write_cmd(address_set_command);
20000546:	187b      	adds	r3, r7, r1
20000548:	781b      	ldrb	r3, [r3, #0]
2000054a:	0018      	movs	r0, r3
2000054c:	f7ff feb8 	bl	200002c0 <ascii_write_cmd>
	delay_mikro(39);		// Command specific delay for the address set command: 39us.
20000550:	2027      	movs	r0, #39	@ 0x27
20000552:	f7ff fdcd 	bl	200000f0 <delay_mikro>
}
20000556:	46c0      	nop			@ (mov r8, r8)
20000558:	46bd      	mov	sp, r7
2000055a:	b004      	add	sp, #16
2000055c:	bd80      	pop	{r7, pc}

2000055e <ascii_init>:

void ascii_init()
{
2000055e:	b580      	push	{r7, lr}
20000560:	af00      	add	r7, sp, #0
	function_set_display(1, 0);
20000562:	2100      	movs	r1, #0
20000564:	2001      	movs	r0, #1
20000566:	f7ff ff47 	bl	200003f8 <function_set_display>
	display_control(1, 1, 1);
2000056a:	2201      	movs	r2, #1
2000056c:	2101      	movs	r1, #1
2000056e:	2001      	movs	r0, #1
20000570:	f7ff ff6d 	bl	2000044e <display_control>
	clear_display();
20000574:	f7ff ff33 	bl	200003de <clear_display>
	display_entry_mode_set(1, 0);
20000578:	2100      	movs	r1, #0
2000057a:	2001      	movs	r0, #1
2000057c:	f7ff ff97 	bl	200004ae <display_entry_mode_set>
}
20000580:	46c0      	nop			@ (mov r8, r8)
20000582:	46bd      	mov	sp, r7
20000584:	bd80      	pop	{r7, pc}

20000586 <ascii_write_char>:

void ascii_write_char(unsigned char c)
{
20000586:	b580      	push	{r7, lr}
20000588:	b082      	sub	sp, #8
2000058a:	af00      	add	r7, sp, #0
2000058c:	0002      	movs	r2, r0
2000058e:	1dfb      	adds	r3, r7, #7
20000590:	701a      	strb	r2, [r3, #0]
	await_display_ready();
20000592:	f7ff ff15 	bl	200003c0 <await_display_ready>
	ascii_write_data(c);
20000596:	1dfb      	adds	r3, r7, #7
20000598:	781b      	ldrb	r3, [r3, #0]
2000059a:	0018      	movs	r0, r3
2000059c:	f7ff feae 	bl	200002fc <ascii_write_data>
	delay_mikro(43);		// Command specific delay for the write operation: 43us.
200005a0:	202b      	movs	r0, #43	@ 0x2b
200005a2:	f7ff fda5 	bl	200000f0 <delay_mikro>
}
200005a6:	46c0      	nop			@ (mov r8, r8)
200005a8:	46bd      	mov	sp, r7
200005aa:	b002      	add	sp, #8
200005ac:	bd80      	pop	{r7, pc}

200005ae <init_app>:

//----------------------------

void init_app()
{
200005ae:	b580      	push	{r7, lr}
200005b0:	af00      	add	r7, sp, #0
	configure_dataport(PORT_OUTPUT_WRITE);
200005b2:	2001      	movs	r0, #1
200005b4:	f7ff fd2c 	bl	20000010 <configure_dataport>
}
200005b8:	46c0      	nop			@ (mov r8, r8)
200005ba:	46bd      	mov	sp, r7
200005bc:	bd80      	pop	{r7, pc}

200005be <main>:

int main(void)
{
200005be:	b5b0      	push	{r4, r5, r7, lr}
200005c0:	b08a      	sub	sp, #40	@ 0x28
200005c2:	af00      	add	r7, sp, #0
	char* s;
	char test1[] = "Alfanumerisk ";
200005c4:	2514      	movs	r5, #20
200005c6:	197b      	adds	r3, r7, r5
200005c8:	4a1c      	ldr	r2, [pc, #112]	@ (2000063c <main+0x7e>)
200005ca:	ca13      	ldmia	r2!, {r0, r1, r4}
200005cc:	c313      	stmia	r3!, {r0, r1, r4}
200005ce:	8812      	ldrh	r2, [r2, #0]
200005d0:	801a      	strh	r2, [r3, #0]
	char test2[] = "Display - test";
200005d2:	1d3b      	adds	r3, r7, #4
200005d4:	4a1a      	ldr	r2, [pc, #104]	@ (20000640 <main+0x82>)
200005d6:	ca13      	ldmia	r2!, {r0, r1, r4}
200005d8:	c313      	stmia	r3!, {r0, r1, r4}
200005da:	8811      	ldrh	r1, [r2, #0]
200005dc:	8019      	strh	r1, [r3, #0]
200005de:	7892      	ldrb	r2, [r2, #2]
200005e0:	709a      	strb	r2, [r3, #2]
	
	init_app();
200005e2:	f7ff ffe4 	bl	200005ae <init_app>
	ascii_init();
200005e6:	f7ff ffba 	bl	2000055e <ascii_init>
	ascii_gotoxy(1,1);
200005ea:	2101      	movs	r1, #1
200005ec:	2001      	movs	r0, #1
200005ee:	f7ff ff89 	bl	20000504 <ascii_gotoxy>
	s = test1;
200005f2:	197b      	adds	r3, r7, r5
200005f4:	627b      	str	r3, [r7, #36]	@ 0x24
	while (*s)
200005f6:	e006      	b.n	20000606 <main+0x48>
	{
		ascii_write_char(*s++);
200005f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
200005fa:	1c5a      	adds	r2, r3, #1
200005fc:	627a      	str	r2, [r7, #36]	@ 0x24
200005fe:	781b      	ldrb	r3, [r3, #0]
20000600:	0018      	movs	r0, r3
20000602:	f7ff ffc0 	bl	20000586 <ascii_write_char>
	while (*s)
20000606:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
20000608:	781b      	ldrb	r3, [r3, #0]
2000060a:	2b00      	cmp	r3, #0
2000060c:	d1f4      	bne.n	200005f8 <main+0x3a>
	}
	ascii_gotoxy(1, 2);
2000060e:	2102      	movs	r1, #2
20000610:	2001      	movs	r0, #1
20000612:	f7ff ff77 	bl	20000504 <ascii_gotoxy>
	s = test2;
20000616:	1d3b      	adds	r3, r7, #4
20000618:	627b      	str	r3, [r7, #36]	@ 0x24
	while (*s)
2000061a:	e006      	b.n	2000062a <main+0x6c>
	{
		ascii_write_char(*s++);
2000061c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
2000061e:	1c5a      	adds	r2, r3, #1
20000620:	627a      	str	r2, [r7, #36]	@ 0x24
20000622:	781b      	ldrb	r3, [r3, #0]
20000624:	0018      	movs	r0, r3
20000626:	f7ff ffae 	bl	20000586 <ascii_write_char>
	while (*s)
2000062a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
2000062c:	781b      	ldrb	r3, [r3, #0]
2000062e:	2b00      	cmp	r3, #0
20000630:	d1f4      	bne.n	2000061c <main+0x5e>
	}
	return 0;
20000632:	2300      	movs	r3, #0
}
20000634:	0018      	movs	r0, r3
20000636:	46bd      	mov	sp, r7
20000638:	b00a      	add	sp, #40	@ 0x28
2000063a:	bdb0      	pop	{r4, r5, r7, pc}
2000063c:	20000764 	andcs	r0, r0, r4, ror #14
20000640:	20000774 	andcs	r0, r0, r4, ror r7

20000644 <__udivsi3>:
20000644:	2200      	movs	r2, #0
20000646:	0843      	lsrs	r3, r0, #1
20000648:	428b      	cmp	r3, r1
2000064a:	d374      	bcc.n	20000736 <__udivsi3+0xf2>
2000064c:	0903      	lsrs	r3, r0, #4
2000064e:	428b      	cmp	r3, r1
20000650:	d35f      	bcc.n	20000712 <__udivsi3+0xce>
20000652:	0a03      	lsrs	r3, r0, #8
20000654:	428b      	cmp	r3, r1
20000656:	d344      	bcc.n	200006e2 <__udivsi3+0x9e>
20000658:	0b03      	lsrs	r3, r0, #12
2000065a:	428b      	cmp	r3, r1
2000065c:	d328      	bcc.n	200006b0 <__udivsi3+0x6c>
2000065e:	0c03      	lsrs	r3, r0, #16
20000660:	428b      	cmp	r3, r1
20000662:	d30d      	bcc.n	20000680 <__udivsi3+0x3c>
20000664:	22ff      	movs	r2, #255	@ 0xff
20000666:	0209      	lsls	r1, r1, #8
20000668:	ba12      	rev	r2, r2
2000066a:	0c03      	lsrs	r3, r0, #16
2000066c:	428b      	cmp	r3, r1
2000066e:	d302      	bcc.n	20000676 <__udivsi3+0x32>
20000670:	1212      	asrs	r2, r2, #8
20000672:	0209      	lsls	r1, r1, #8
20000674:	d065      	beq.n	20000742 <__udivsi3+0xfe>
20000676:	0b03      	lsrs	r3, r0, #12
20000678:	428b      	cmp	r3, r1
2000067a:	d319      	bcc.n	200006b0 <__udivsi3+0x6c>
2000067c:	e000      	b.n	20000680 <__udivsi3+0x3c>
2000067e:	0a09      	lsrs	r1, r1, #8
20000680:	0bc3      	lsrs	r3, r0, #15
20000682:	428b      	cmp	r3, r1
20000684:	d301      	bcc.n	2000068a <__udivsi3+0x46>
20000686:	03cb      	lsls	r3, r1, #15
20000688:	1ac0      	subs	r0, r0, r3
2000068a:	4152      	adcs	r2, r2
2000068c:	0b83      	lsrs	r3, r0, #14
2000068e:	428b      	cmp	r3, r1
20000690:	d301      	bcc.n	20000696 <__udivsi3+0x52>
20000692:	038b      	lsls	r3, r1, #14
20000694:	1ac0      	subs	r0, r0, r3
20000696:	4152      	adcs	r2, r2
20000698:	0b43      	lsrs	r3, r0, #13
2000069a:	428b      	cmp	r3, r1
2000069c:	d301      	bcc.n	200006a2 <__udivsi3+0x5e>
2000069e:	034b      	lsls	r3, r1, #13
200006a0:	1ac0      	subs	r0, r0, r3
200006a2:	4152      	adcs	r2, r2
200006a4:	0b03      	lsrs	r3, r0, #12
200006a6:	428b      	cmp	r3, r1
200006a8:	d301      	bcc.n	200006ae <__udivsi3+0x6a>
200006aa:	030b      	lsls	r3, r1, #12
200006ac:	1ac0      	subs	r0, r0, r3
200006ae:	4152      	adcs	r2, r2
200006b0:	0ac3      	lsrs	r3, r0, #11
200006b2:	428b      	cmp	r3, r1
200006b4:	d301      	bcc.n	200006ba <__udivsi3+0x76>
200006b6:	02cb      	lsls	r3, r1, #11
200006b8:	1ac0      	subs	r0, r0, r3
200006ba:	4152      	adcs	r2, r2
200006bc:	0a83      	lsrs	r3, r0, #10
200006be:	428b      	cmp	r3, r1
200006c0:	d301      	bcc.n	200006c6 <__udivsi3+0x82>
200006c2:	028b      	lsls	r3, r1, #10
200006c4:	1ac0      	subs	r0, r0, r3
200006c6:	4152      	adcs	r2, r2
200006c8:	0a43      	lsrs	r3, r0, #9
200006ca:	428b      	cmp	r3, r1
200006cc:	d301      	bcc.n	200006d2 <__udivsi3+0x8e>
200006ce:	024b      	lsls	r3, r1, #9
200006d0:	1ac0      	subs	r0, r0, r3
200006d2:	4152      	adcs	r2, r2
200006d4:	0a03      	lsrs	r3, r0, #8
200006d6:	428b      	cmp	r3, r1
200006d8:	d301      	bcc.n	200006de <__udivsi3+0x9a>
200006da:	020b      	lsls	r3, r1, #8
200006dc:	1ac0      	subs	r0, r0, r3
200006de:	4152      	adcs	r2, r2
200006e0:	d2cd      	bcs.n	2000067e <__udivsi3+0x3a>
200006e2:	09c3      	lsrs	r3, r0, #7
200006e4:	428b      	cmp	r3, r1
200006e6:	d301      	bcc.n	200006ec <__udivsi3+0xa8>
200006e8:	01cb      	lsls	r3, r1, #7
200006ea:	1ac0      	subs	r0, r0, r3
200006ec:	4152      	adcs	r2, r2
200006ee:	0983      	lsrs	r3, r0, #6
200006f0:	428b      	cmp	r3, r1
200006f2:	d301      	bcc.n	200006f8 <__udivsi3+0xb4>
200006f4:	018b      	lsls	r3, r1, #6
200006f6:	1ac0      	subs	r0, r0, r3
200006f8:	4152      	adcs	r2, r2
200006fa:	0943      	lsrs	r3, r0, #5
200006fc:	428b      	cmp	r3, r1
200006fe:	d301      	bcc.n	20000704 <__udivsi3+0xc0>
20000700:	014b      	lsls	r3, r1, #5
20000702:	1ac0      	subs	r0, r0, r3
20000704:	4152      	adcs	r2, r2
20000706:	0903      	lsrs	r3, r0, #4
20000708:	428b      	cmp	r3, r1
2000070a:	d301      	bcc.n	20000710 <__udivsi3+0xcc>
2000070c:	010b      	lsls	r3, r1, #4
2000070e:	1ac0      	subs	r0, r0, r3
20000710:	4152      	adcs	r2, r2
20000712:	08c3      	lsrs	r3, r0, #3
20000714:	428b      	cmp	r3, r1
20000716:	d301      	bcc.n	2000071c <__udivsi3+0xd8>
20000718:	00cb      	lsls	r3, r1, #3
2000071a:	1ac0      	subs	r0, r0, r3
2000071c:	4152      	adcs	r2, r2
2000071e:	0883      	lsrs	r3, r0, #2
20000720:	428b      	cmp	r3, r1
20000722:	d301      	bcc.n	20000728 <__udivsi3+0xe4>
20000724:	008b      	lsls	r3, r1, #2
20000726:	1ac0      	subs	r0, r0, r3
20000728:	4152      	adcs	r2, r2
2000072a:	0843      	lsrs	r3, r0, #1
2000072c:	428b      	cmp	r3, r1
2000072e:	d301      	bcc.n	20000734 <__udivsi3+0xf0>
20000730:	004b      	lsls	r3, r1, #1
20000732:	1ac0      	subs	r0, r0, r3
20000734:	4152      	adcs	r2, r2
20000736:	1a41      	subs	r1, r0, r1
20000738:	d200      	bcs.n	2000073c <__udivsi3+0xf8>
2000073a:	4601      	mov	r1, r0
2000073c:	4152      	adcs	r2, r2
2000073e:	4610      	mov	r0, r2
20000740:	4770      	bx	lr
20000742:	e7ff      	b.n	20000744 <__udivsi3+0x100>
20000744:	b501      	push	{r0, lr}
20000746:	2000      	movs	r0, #0
20000748:	f000 f806 	bl	20000758 <__aeabi_idiv0>
2000074c:	bd02      	pop	{r1, pc}
2000074e:	46c0      	nop			@ (mov r8, r8)

20000750 <__aeabi_uidivmod>:
20000750:	2900      	cmp	r1, #0
20000752:	d0f7      	beq.n	20000744 <__udivsi3+0x100>
20000754:	e776      	b.n	20000644 <__udivsi3>
20000756:	4770      	bx	lr

20000758 <__aeabi_idiv0>:
20000758:	4770      	bx	lr
2000075a:	46c0      	nop			@ (mov r8, r8)

2000075c <displayPortE>:
2000075c:	40021000 	andmi	r1, r2, r0

20000760 <sysTick>:
20000760:	e000e010 	and	lr, r0, r0, lsl r0
20000764:	61666c41 	cmnvs	r6, r1, asr #24
20000768:	656d756e 	strbvs	r7, [sp, #-1390]!	@ 0xfffffa92
2000076c:	6b736972 	blvs	21cdad3c <sysTick+0x1cda5dc>
20000770:	00000020 	andeq	r0, r0, r0, lsr #32
20000774:	70736944 	rsbsvc	r6, r3, r4, asr #18
20000778:	2079616c 	rsbscs	r6, r9, ip, ror #2
2000077c:	6574202d 	ldrbvs	r2, [r4, #-45]!	@ 0xffffffd3
20000780:	00007473 	andeq	r7, r0, r3, ror r4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000005fc 	strdeq	r0, [r0], -ip
   4:	04010005 	streq	r0, [r1], #-5
   8:	00000000 	andeq	r0, r0, r0
   c:	00036919 	andeq	r6, r3, r9, lsl r9
  10:	03f80c00 	mvnseq	r0, #0, 24
  14:	01ef0000 	mvneq	r0, r0
  18:	000c0000 	andeq	r0, ip, r0
	...
  24:	01080000 	mrseq	r0, (UNDEF: 8)
  28:	69031801 	stmdbvs	r3, {r0, fp, ip}
  2c:	0b000000 	bleq	34 <startup-0x1fffffcc>
  30:	1a005352 	bne	14d80 <startup-0x1ffeb280>
  34:	00000069 	andeq	r0, r0, r9, rrx
  38:	57520b00 	ldrbpl	r0, [r2, -r0, lsl #22]
  3c:	00691b00 	rsbeq	r1, r9, r0, lsl #22
  40:	04010000 	streq	r0, [r1], #-0
  44:	000000f1 	strdeq	r0, [r0], -r1
  48:	69121c01 	ldmdbvs	r2, {r0, sl, fp, ip}
  4c:	01000000 	mrseq	r0, (UNDEF: 0)
  50:	01510402 	cmpeq	r1, r2, lsl #8
  54:	1d010000 	stcne	0, cr0, [r1, #-0]
  58:	00006912 	andeq	r6, r0, r2, lsl r9
  5c:	0b030300 	bleq	c0c64 <startup-0x1ff3f39c>
  60:	691e0045 	ldmdbvs	lr, {r0, r2, r6}
  64:	06000000 	streq	r0, [r0], -r0
  68:	08010900 	stmdaeq	r1, {r8, fp}
  6c:	0000011b 	andeq	r0, r0, fp, lsl r1
  70:	0000690f 	andeq	r6, r0, pc, lsl #18
  74:	01011000 	mrseq	r1, (UNDEF: 1)
  78:	00008f15 	andeq	r8, r0, r5, lsl pc
  7c:	02b71100 	adcseq	r1, r7, #0, 2
  80:	17010000 	strne	r0, [r1, -r0]
  84:	00006911 	andeq	r6, r0, r1, lsl r9
  88:	00261200 	eoreq	r1, r6, r0, lsl #4
  8c:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
  90:	090c0118 	stmdbeq	ip, {r3, r4, r8}
  94:	00000107 	andeq	r0, r0, r7, lsl #2
  98:	00004603 	andeq	r4, r0, r3, lsl #12
  9c:	0f0e0100 	svceq	0x000e0100
  a0:	00000107 	andeq	r0, r0, r7, lsl #2
  a4:	01290300 			@ <UNDEFINED> instruction: 0x01290300
  a8:	0f010000 	svceq	0x00010000
  ac:	0001070f 	andeq	r0, r1, pc, lsl #14
  b0:	31030400 	tstcc	r3, r0, lsl #8
  b4:	01000001 	tsteq	r0, r1
  b8:	01070f10 	tsteq	r7, r0, lsl pc
  bc:	03080000 	movweq	r0, #32768	@ 0x8000
  c0:	00000139 	andeq	r0, r0, r9, lsr r1
  c4:	070f1101 	streq	r1, [pc, -r1, lsl #2]
  c8:	0c000001 	stceq	0, cr0, [r0], {1}
  cc:	00014103 	andeq	r4, r1, r3, lsl #2
  d0:	10120100 	andsne	r0, r2, r0, lsl #2
  d4:	00000069 	andeq	r0, r0, r9, rrx
  d8:	004c0310 	subeq	r0, ip, r0, lsl r3
  dc:	13010000 	movwne	r0, #4096	@ 0x1000
  e0:	00007019 	andeq	r7, r0, r9, lsl r0
  e4:	49031100 	stmdbmi	r3, {r8, ip}
  e8:	01000001 	tsteq	r0, r1
  ec:	01131114 	tsteq	r3, r4, lsl r1
  f0:	13120000 	tstne	r2, #0
  f4:	00000075 	andeq	r0, r0, r5, ror r0
  f8:	02ed0314 	rsceq	r0, sp, #20, 6	@ 0x50000000
  fc:	22010000 	andcs	r0, r1, #0
 100:	00006910 	andeq	r6, r0, r0, lsl r9
 104:	09001500 	stmdbeq	r0, {r8, sl, ip}
 108:	015f0704 	cmpeq	pc, r4, lsl #14
 10c:	070f0000 	streq	r0, [pc, -r0]
 110:	09000001 	stmdbeq	r0, {r0}
 114:	01590702 	cmpeq	r9, r2, lsl #14
 118:	ab140000 	blge	500120 <startup-0x1faffee0>
 11c:	01000002 	tsteq	r0, r2
 120:	00008f24 	andeq	r8, r0, r4, lsr #30
 124:	02bc1500 	adcseq	r1, ip, #0, 10
 128:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
 12c:	00000136 	andeq	r0, r0, r6, lsr r1
 130:	075c0305 	ldrbeq	r0, [ip, -r5, lsl #6]
 134:	1a0c2000 	bne	30813c <startup-0x1fcf7ec4>
 138:	08000001 	stmdaeq	r0, {r0}
 13c:	03050204 	movweq	r0, #20996	@ 0x5204
 140:	0000018b 	andeq	r0, r0, fp, lsl #3
 144:	0000ea04 	andeq	lr, r0, r4, lsl #20
 148:	11060200 	mrsne	r0, LR_usr
 14c:	00000107 	andeq	r0, r0, r7, lsl #2
 150:	7c040001 	stcvc	0, cr0, [r4], {1}
 154:	02000000 	andeq	r0, r0, #0
 158:	01071107 	tsteq	r7, r7, lsl #2
 15c:	01010000 	mrseq	r0, (UNDEF: 1)
 160:	00009404 	andeq	r9, r0, r4, lsl #8
 164:	11080200 	mrsne	r0, R8_fiq
 168:	00000107 	andeq	r0, r0, r7, lsl #2
 16c:	29040201 	stmdbcs	r4, {r0, r9}
 170:	02000001 	andeq	r0, r0, #1
 174:	01071109 	tsteq	r7, r9, lsl #2
 178:	030d0000 	movweq	r0, #53248	@ 0xd000
 17c:	00025904 	andeq	r5, r2, r4, lsl #18
 180:	1a0a0200 	bne	280988 <startup-0x1fd7f678>
 184:	0000010e 	andeq	r0, r0, lr, lsl #2
 188:	10001001 	andne	r1, r0, r1
 18c:	a5030204 	strge	r0, [r3, #-516]	@ 0xfffffdfc
 190:	11000001 	tstne	r0, r1
 194:	000002a6 	andeq	r0, r0, r6, lsr #5
 198:	07100402 	ldreq	r0, [r0, -r2, lsl #8]
 19c:	12000001 	andne	r0, r0, #1
 1a0:	0000013b 	andeq	r0, r0, fp, lsr r1
 1a4:	020c0800 	andeq	r0, ip, #0, 16
 1a8:	01cf0901 	biceq	r0, pc, r1, lsl #18
 1ac:	8b130000 	blhi	4c01b4 <startup-0x1fb3fe4c>
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	0002fb03 	andeq	pc, r2, r3, lsl #22
 1b8:	0f0e0200 	svceq	0x000e0200
 1bc:	00000107 	andeq	r0, r0, r7, lsl #2
 1c0:	41561a04 	cmpmi	r6, r4, lsl #20
 1c4:	1002004c 	andne	r0, r2, ip, asr #32
 1c8:	00010e18 	andeq	r0, r1, r8, lsl lr
 1cc:	14000800 	strne	r0, [r0], #-2048	@ 0xfffff800
 1d0:	000002d1 	ldrdeq	r0, [r0], -r1
 1d4:	01a51202 			@ <UNDEFINED> instruction: 0x01a51202
 1d8:	61150000 	tstvs	r5, r0
 1dc:	2a000003 	bcs	1f0 <startup-0x1ffffe10>
 1e0:	0001eb0a 	andeq	lr, r1, sl, lsl #22
 1e4:	60030500 	andvs	r0, r3, r0, lsl #10
 1e8:	0c200007 	stceq	0, cr0, [r0], #-28	@ 0xffffffe4
 1ec:	000001cf 	andeq	r0, r0, pc, asr #3
 1f0:	0001cc1b 	andeq	ip, r1, fp, lsl ip
 1f4:	05f80100 	ldrbeq	r0, [r8, #256]!	@ 0x100
 1f8:	00000233 	andeq	r0, r0, r3, lsr r2
 1fc:	200005be 			@ <UNDEFINED> instruction: 0x200005be
 200:	00000086 	andeq	r0, r0, r6, lsl #1
 204:	02339c01 	eorseq	r9, r3, #256	@ 0x100
 208:	73050000 	movwvc	r0, #20480	@ 0x5000
 20c:	3a08fa00 	bcc	23ea14 <startup-0x1fdc15ec>
 210:	02000002 	andeq	r0, r0, #2
 214:	db066c91 	blle	19b460 <startup-0x1fe64ba0>
 218:	fb000003 	blx	22e <startup-0x1ffffdd2>
 21c:	00024607 	andeq	r4, r2, r7, lsl #12
 220:	5c910200 	lfmpl	f0, 4, [r1], {0}
 224:	0003e106 	andeq	lr, r3, r6, lsl #2
 228:	5607fc00 	strpl	pc, [r7], -r0, lsl #24
 22c:	02000002 	andeq	r0, r0, #2
 230:	1c004c91 	stcne	12, cr4, [r0], {145}	@ 0x91
 234:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
 238:	3f0c0074 	svccc	0x000c0074
 23c:	09000002 	stmdbeq	r0, {r1}
 240:	01240801 			@ <UNDEFINED> instruction: 0x01240801
 244:	3f160000 	svccc	0x00160000
 248:	56000002 	strpl	r0, [r0], -r2
 24c:	17000002 	strne	r0, [r0, -r2]
 250:	00000107 	andeq	r0, r0, r7, lsl #2
 254:	3f16000d 	svccc	0x0016000d
 258:	66000002 	strvs	r0, [r0], -r2
 25c:	17000002 	strne	r0, [r0, -r2]
 260:	00000107 	andeq	r0, r0, r7, lsl #2
 264:	630a000e 	movwvs	r0, #40974	@ 0xa00e
 268:	f3000002 	vhadd.u8	d0, d0, d2
 26c:	200005ae 	andcs	r0, r0, lr, lsr #11
 270:	00000010 	andeq	r0, r0, r0, lsl r0
 274:	e7029c01 	str	r9, [r2, -r1, lsl #24]
 278:	ea000003 	b	28c <startup-0x1ffffd74>
 27c:	20000586 	andcs	r0, r0, r6, lsl #11
 280:	00000028 	andeq	r0, r0, r8, lsr #32
 284:	02979c01 	addseq	r9, r7, #256	@ 0x100
 288:	63070000 	movwvs	r0, #28672	@ 0x7000
 28c:	6925ea00 	stmdbvs	r5!, {r9, fp, sp, lr, pc}
 290:	02000000 	andeq	r0, r0, #0
 294:	0a007791 	beq	1e0e0 <startup-0x1ffe1f20>
 298:	0000005a 	andeq	r0, r0, sl, asr r0
 29c:	00055ee2 	andeq	r5, r5, r2, ror #29
 2a0:	00002820 	andeq	r2, r0, r0, lsr #16
 2a4:	029c0100 	addseq	r0, ip, #0, 2
 2a8:	00000027 	andeq	r0, r0, r7, lsr #32
 2ac:	000504d7 	ldrdeq	r0, [r5], -r7
 2b0:	00005a20 	andeq	r5, r0, r0, lsr #20
 2b4:	e29c0100 	adds	r0, ip, #0, 2
 2b8:	07000002 	streq	r0, [r0, -r2]
 2bc:	17d70078 			@ <UNDEFINED> instruction: 0x17d70078
 2c0:	00000233 	andeq	r0, r0, r3, lsr r2
 2c4:	076c9102 	strbeq	r9, [ip, -r2, lsl #2]!
 2c8:	1ed70079 	mrcne	0, 6, r0, cr7, cr9, {3}
 2cc:	00000233 	andeq	r0, r0, r3, lsr r2
 2d0:	06689102 	strbteq	r9, [r8], -r2, lsl #2
 2d4:	000002d9 	ldrdeq	r0, [r0], -r9
 2d8:	006910da 	ldrdeq	r1, [r9], #-10	@ <UNPREDICTABLE>
 2dc:	91020000 	mrsls	r0, (UNDEF: 2)
 2e0:	65020077 	strvs	r0, [r2, #-119]	@ 0xffffff89
 2e4:	cc000000 	stcgt	0, cr0, [r0], {-0}
 2e8:	200004ae 	andcs	r0, r0, lr, lsr #9
 2ec:	00000056 	andeq	r0, r0, r6, asr r0
 2f0:	03219c01 			@ <UNDEFINED> instruction: 0x03219c01
 2f4:	00010000 	andeq	r0, r1, r0
 2f8:	cc000000 	stcgt	0, cr0, [r0], {-0}
 2fc:	00023321 	andeq	r3, r2, r1, lsr #6
 300:	6c910200 	lfmvs	f0, 4, [r1], {0}
 304:	00027401 	andeq	r7, r2, r1, lsl #8
 308:	333acc00 	teqcc	sl, #0, 24
 30c:	02000002 	andeq	r0, r0, #2
 310:	b5066891 	strlt	r6, [r6, #-2193]	@ 0xfffff76f
 314:	cf000001 	svcgt	0x00000001
 318:	00006910 	andeq	r6, r0, r0, lsl r9
 31c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 320:	00840200 	addeq	r0, r4, r0, lsl #4
 324:	4ec10000 	cdpmi	0, 12, cr0, cr1, cr0, {0}
 328:	60200004 	eorvs	r0, r0, r4
 32c:	01000000 	mrseq	r0, (UNDEF: 0)
 330:	00036e9c 	muleq	r3, ip, lr
 334:	00b50100 	adcseq	r0, r5, r0, lsl #2
 338:	1ac10000 	bne	ff040340 <sysTick+0xdf03fbe0>
 33c:	00000233 	andeq	r0, r0, r3, lsr r2
 340:	016c9102 	cmneq	ip, r2, lsl #2
 344:	0000046c 	andeq	r0, r0, ip, ror #8
 348:	02332ac1 	eorseq	r2, r3, #790528	@ 0xc1000
 34c:	91020000 	mrsls	r0, (UNDEF: 2)
 350:	00f80168 	rscseq	r0, r8, r8, ror #2
 354:	39c10000 	stmibcc	r1, {}^	@ <UNPREDICTABLE>
 358:	00000233 	andeq	r0, r0, r3, lsr r2
 35c:	06649102 	strbteq	r9, [r4], -r2, lsl #2
 360:	0000016c 	andeq	r0, r0, ip, ror #2
 364:	006910c4 	rsbeq	r1, r9, r4, asr #1
 368:	91020000 	mrsls	r0, (UNDEF: 2)
 36c:	2d020077 	stccs	0, cr0, [r2, #-476]	@ 0xfffffe24
 370:	b6000003 	strlt	r0, [r0], -r3
 374:	200003f8 	strdcs	r0, [r0], -r8
 378:	00000056 	andeq	r0, r0, r6, asr r0
 37c:	03ad9c01 			@ <UNDEFINED> instruction: 0x03ad9c01
 380:	a7010000 	strge	r0, [r1, -r0]
 384:	b6000001 	strlt	r0, [r0], -r1
 388:	0002331f 	andeq	r3, r2, pc, lsl r3
 38c:	6c910200 	lfmvs	f0, 4, [r1], {0}
 390:	00034201 	andeq	r4, r3, r1, lsl #4
 394:	3332b600 	teqcc	r2, #0, 12
 398:	02000002 	andeq	r0, r0, #2
 39c:	84066891 	strhi	r6, [r6], #-2193	@ 0xfffff76f
 3a0:	b9000001 	stmdblt	r0, {r0}
 3a4:	00006910 	andeq	r6, r0, r0, lsl r9
 3a8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 3ac:	01d10a00 	bicseq	r0, r1, r0, lsl #20
 3b0:	deaf0000 	cdple	0, 10, cr0, cr15, cr0, {0}
 3b4:	1a200003 	bne	8003c8 <startup-0x1f7ffc38>
 3b8:	01000000 	mrseq	r0, (UNDEF: 0)
 3bc:	00d60a9c 	smullseq	r0, r6, ip, sl
 3c0:	c0a90000 	adcgt	r0, r9, r0
 3c4:	1e200003 	cdpne	0, 2, cr0, cr0, cr3, {0}
 3c8:	01000000 	mrseq	r0, (UNDEF: 0)
 3cc:	03510d9c 	cmpeq	r1, #156, 26	@ 0x2700
 3d0:	699d0000 	ldmibvs	sp, {}	@ <UNPREDICTABLE>
 3d4:	7c000000 	stcvc	0, cr0, [r0], {-0}
 3d8:	44200003 	strtmi	r0, [r0], #-3
 3dc:	01000000 	mrseq	r0, (UNDEF: 0)
 3e0:	0003f39c 	muleq	r3, ip, r3
 3e4:	76720500 	ldrbtvc	r0, [r2], -r0, lsl #10
 3e8:	6910a200 	ldmdbvs	r0, {r9, sp, pc}
 3ec:	02000000 	andeq	r0, r0, #0
 3f0:	0d006f91 	stceq	15, cr6, [r0, #-580]	@ 0xfffffdbc
 3f4:	00000034 	andeq	r0, r0, r4, lsr r0
 3f8:	00006993 	muleq	r0, r3, r9
 3fc:	00033800 	andeq	r3, r3, r0, lsl #16
 400:	00004420 	andeq	r4, r0, r0, lsr #8
 404:	199c0100 	ldmibne	ip, {r8}
 408:	05000004 	streq	r0, [r0, #-4]
 40c:	98007672 	stmdals	r0, {r1, r4, r5, r6, r9, sl, ip, sp, lr}
 410:	00006910 	andeq	r6, r0, r0, lsl r9
 414:	6f910200 	svcvs	0x00910200
 418:	02950200 	addseq	r0, r5, #0, 4
 41c:	fc8c0000 	stc2	0, cr0, [ip], {0}
 420:	3c200002 	stccc	0, cr0, [r0], #-8
 424:	01000000 	mrseq	r0, (UNDEF: 0)
 428:	00043c9c 	muleq	r4, ip, ip
 42c:	035c0100 	cmpeq	ip, #0, 2
 430:	258c0000 	strcs	r0, [ip]
 434:	00000069 	andeq	r0, r0, r9, rrx
 438:	00779102 	rsbseq	r9, r7, r2, lsl #2
 43c:	0001df02 	andeq	sp, r1, r2, lsl #30
 440:	02c08500 	sbceq	r8, r0, #0, 10
 444:	003c2000 	eorseq	r2, ip, r0
 448:	9c010000 	stcls	0, cr0, [r1], {-0}
 44c:	0000045f 	andeq	r0, r0, pc, asr r4
 450:	00017c01 	andeq	r7, r1, r1, lsl #24
 454:	69248500 	stmdbvs	r4!, {r8, sl, pc}
 458:	02000000 	andeq	r0, r0, #0
 45c:	0d007791 	stceq	7, cr7, [r0, #-580]	@ 0xfffffdbc
 460:	000000c0 	andeq	r0, r0, r0, asr #1
 464:	0000697c 	andeq	r6, r0, ip, ror r9
 468:	00027c00 	andeq	r7, r2, r0, lsl #24
 46c:	00004420 	andeq	r4, r0, r0, lsr #8
 470:	859c0100 	ldrhi	r0, [ip, #256]	@ 0x100
 474:	05000004 	streq	r0, [r0, #-4]
 478:	80007672 	andhi	r7, r0, r2, ror r6
 47c:	00006910 	andeq	r6, r0, r0, lsl r9
 480:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 484:	03c40200 	biceq	r0, r4, #0, 4
 488:	30720000 	rsbscc	r0, r2, r0
 48c:	4c200002 	stcmi	0, cr0, [r0], #-8
 490:	01000000 	mrseq	r0, (UNDEF: 0)
 494:	0004a89c 	muleq	r4, ip, r8
 498:	00a50100 	adceq	r0, r5, r0, lsl #2
 49c:	2b720000 	blcs	1c804a4 <startup-0x1e37fb5c>
 4a0:	00000069 	andeq	r0, r0, r9, rrx
 4a4:	00779102 	rsbseq	r9, r7, r2, lsl #2
 4a8:	00030c0e 	andeq	r0, r3, lr, lsl #24
 4ac:	01c86900 	biceq	r6, r8, r0, lsl #18
 4b0:	00682000 	rsbeq	r2, r8, r0
 4b4:	9c010000 	stcls	0, cr0, [r1], {-0}
 4b8:	000004e7 	andeq	r0, r0, r7, ror #9
 4bc:	00026c01 	andeq	r6, r2, r1, lsl #24
 4c0:	69296900 	stmdbvs	r9!, {r8, fp, sp, lr}
 4c4:	02000000 	andeq	r0, r0, #0
 4c8:	b9016f91 	stmdblt	r1, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
 4cc:	69000003 	stmdbvs	r0, {r0, r1}
 4d0:	00006940 	andeq	r6, r0, r0, asr #18
 4d4:	6e910200 	cdpvs	2, 9, cr0, cr1, cr0, {0}
 4d8:	00009e01 	andeq	r9, r0, r1, lsl #28
 4dc:	695a6900 	ldmdbvs	sl, {r8, fp, sp, lr}^
 4e0:	02000000 	andeq	r0, r0, #0
 4e4:	0e006d91 	mcreq	13, 0, r6, cr0, cr1, {4}
 4e8:	00000014 	andeq	r0, r0, r4, lsl r0
 4ec:	00016262 	andeq	r6, r1, r2, ror #4
 4f0:	00006620 	andeq	r6, r0, r0, lsr #12
 4f4:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
 4f8:	01000005 	tsteq	r0, r5
 4fc:	0000026c 	andeq	r0, r0, ip, ror #4
 500:	00692762 	rsbeq	r2, r9, r2, ror #14
 504:	91020000 	mrsls	r0, (UNDEF: 2)
 508:	03b9016f 			@ <UNDEFINED> instruction: 0x03b9016f
 50c:	3e620000 	cdpcc	0, 6, cr0, cr2, cr0, {0}
 510:	00000069 	andeq	r0, r0, r9, rrx
 514:	016e9102 	cmneq	lr, r2, lsl #2
 518:	0000009e 	muleq	r0, lr, r0
 51c:	00695862 	rsbeq	r5, r9, r2, ror #16
 520:	91020000 	mrsls	r0, (UNDEF: 2)
 524:	0002006d 	andeq	r0, r2, sp, rrx
 528:	52000003 	andpl	r0, r0, #3
 52c:	2000011c 	andcs	r0, r0, ip, lsl r1
 530:	00000046 	andeq	r0, r0, r6, asr #32
 534:	055e9c01 	ldrbeq	r9, [lr, #-3073]	@ 0xfffff3ff
 538:	6d070000 	stcvs	0, cr0, [r7, #-0]
 53c:	1f520073 	svcne	0x00520073
 540:	00000107 	andeq	r0, r0, r7, lsl #2
 544:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
 548:	2000013a 	andcs	r0, r0, sl, lsr r1
 54c:	0000001e 	andeq	r0, r0, lr, lsl r0
 550:	59006905 	stmdbpl	r0, {r0, r2, r8, fp, sp, lr}
 554:	0002330b 	andeq	r3, r2, fp, lsl #6
 558:	74910200 	ldrvc	r0, [r1], #512	@ 0x200
 55c:	89020000 	stmdbhi	r2, {}	@ <UNPREDICTABLE>
 560:	4a000002 	bmi	570 <startup-0x1ffffa90>
 564:	200000f0 	strdcs	r0, [r0], -r0	@ <UNPREDICTABLE>
 568:	0000002c 	andeq	r0, r0, ip, lsr #32
 56c:	05969c01 	ldreq	r9, [r6, #3073]	@ 0xc01
 570:	75070000 	strvc	r0, [r7, #-0]
 574:	1f4a0073 	svcne	0x004a0073
 578:	00000107 	andeq	r0, r0, r7, lsl #2
 57c:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
 580:	200000f8 	strdcs	r0, [r0], -r8
 584:	0000001a 	andeq	r0, r0, sl, lsl r0
 588:	4c006905 			@ <UNDEFINED> instruction: 0x4c006905
 58c:	0002330b 	andeq	r3, r2, fp, lsl #6
 590:	74910200 	ldrvc	r0, [r1], #512	@ 0x200
 594:	211d0000 	tstcs	sp, r0
 598:	01000003 	tsteq	r0, r3
 59c:	00a00640 	adceq	r0, r0, r0, asr #12
 5a0:	00502000 	subseq	r2, r0, r0
 5a4:	9c010000 	stcls	0, cr0, [r1], {-0}
 5a8:	0000aa02 	andeq	sl, r0, r2, lsl #20
 5ac:	00403600 	subeq	r3, r0, r0, lsl #12
 5b0:	00602000 	rsbeq	r2, r0, r0
 5b4:	9c010000 	stcls	0, cr0, [r1], {-0}
 5b8:	000005ca 	andeq	r0, r0, sl, asr #11
 5bc:	00736e07 	rsbseq	r6, r3, r7, lsl #28
 5c0:	01071e36 	tsteq	r7, r6, lsr lr
 5c4:	91020000 	mrsls	r0, (UNDEF: 2)
 5c8:	080e006c 	stmdaeq	lr, {r2, r3, r5, r6}
 5cc:	2f000001 	svccs	0x00000001
 5d0:	20000010 	andcs	r0, r0, r0, lsl r0
 5d4:	00000030 	andeq	r0, r0, r0, lsr r0
 5d8:	05ed9c01 	strbeq	r9, [sp, #3073]!	@ 0xc01
 5dc:	99010000 	stmdbls	r1, {}	@ <UNPREDICTABLE>
 5e0:	2f000001 	svccs	0x00000001
 5e4:	00006927 	andeq	r6, r0, r7, lsr #18
 5e8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 5ec:	02c91e00 	sbceq	r1, r9, #0, 28
 5f0:	03010000 	movweq	r0, #4096	@ 0x1000
 5f4:	00000006 	andeq	r0, r0, r6
 5f8:	00000c20 	andeq	r0, r0, r0, lsr #24
 5fc:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	03000501 	movweq	r0, #1281	@ 0x501
   4:	01213a0e 			@ <UNDEFINED> instruction: 0x01213a0e
   8:	0b390b3b 	bleq	e42cfc <startup-0x1f1bd304>
   c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  10:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
  14:	03193f01 	tsteq	r9, #1, 30
  18:	01213a0e 			@ <UNDEFINED> instruction: 0x01213a0e
  1c:	21390b3b 	teqcs	r9, fp, lsr fp
  20:	11192706 	tstne	r9, r6, lsl #14
  24:	40061201 	andmi	r1, r6, r1, lsl #4
  28:	01197c18 	tsteq	r9, r8, lsl ip
  2c:	03000013 	movweq	r0, #19
  30:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	@ 0x9b39
  3c:	00000b38 	andeq	r0, r0, r8, lsr fp
  40:	03000d04 	movweq	r0, #3332	@ 0xd04
  44:	3b0b3a0e 	blcc	2ce884 <startup-0x1fd3177c>
  48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  4c:	6b0b0d13 	blvs	2c34a0 <startup-0x1fd3cb60>
  50:	0500000b 	streq	r0, [r0, #-11]
  54:	08030034 	stmdaeq	r3, {r2, r4, r5}
  58:	3b01213a 	blcc	48548 <startup-0x1ffb7ab8>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	00180213 	andseq	r0, r8, r3, lsl r2
  64:	00340600 	eorseq	r0, r4, r0, lsl #12
  68:	213a0e03 	teqcs	sl, r3, lsl #28
  6c:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
  70:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
  74:	07000018 	smladeq	r0, r8, r0, r0
  78:	08030005 	stmdaeq	r3, {r0, r2}
  7c:	3b01213a 	blcc	4856c <startup-0x1ffb7a94>
  80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  84:	00180213 	andseq	r0, r8, r3, lsl r2
  88:	01130800 	tsteq	r3, r0, lsl #16
  8c:	0b3a0b0b 	bleq	e82cc0 <startup-0x1f17d340>
  90:	0b390b3b 	bleq	e42d84 <startup-0x1f1bd27c>
  94:	00001301 	andeq	r1, r0, r1, lsl #6
  98:	0b002409 	bleq	90c4 <startup-0x1fff6f3c>
  9c:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
  a0:	0a00000e 	beq	e0 <startup-0x1fffff20>
  a4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	@ <UNPREDICTABLE>
  a8:	213a0e03 	teqcs	sl, r3, lsl #28
  ac:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
  b0:	01110621 	tsteq	r1, r1, lsr #12
  b4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  b8:	0000197c 	andeq	r1, r0, ip, ror r9
  bc:	03000d0b 	movweq	r0, #3339	@ 0xd0b
  c0:	01213a08 			@ <UNDEFINED> instruction: 0x01213a08
  c4:	21390b3b 	teqcs	r9, fp, lsr fp
  c8:	0d134912 	vldreq.16	s8, [r3, #-36]	@ 0xffffffdc	@ <UNPREDICTABLE>
  cc:	0b6b0121 	bleq	1ac0558 <startup-0x1e53faa8>
  d0:	0f0c0000 	svceq	0x000c0000
  d4:	04210b00 	strteq	r0, [r1], #-2816	@ 0xfffff500
  d8:	00001349 	andeq	r1, r0, r9, asr #6
  dc:	3f012e0d 	svccc	0x00012e0d
  e0:	3a0e0319 	bcc	380d4c <startup-0x1fc7f2b4>
  e4:	0b3b0121 	bleq	ec0570 <startup-0x1f13fa90>
  e8:	490f2139 	stmdbmi	pc, {r0, r3, r4, r5, r8, sp}	@ <UNPREDICTABLE>
  ec:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
  f0:	7c184006 	ldcvc	0, cr4, [r8], {6}
  f4:	00130119 	andseq	r0, r3, r9, lsl r1
  f8:	012e0e00 			@ <UNDEFINED> instruction: 0x012e0e00
  fc:	0e03193f 			@ <UNDEFINED> instruction: 0x0e03193f
 100:	3b01213a 	blcc	485f0 <startup-0x1ffb7a10>
 104:	0621390b 	strteq	r3, [r1], -fp, lsl #18
 108:	01111927 	tsteq	r1, r7, lsr #18
 10c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 110:	1301197a 	movwne	r1, #6522	@ 0x197a
 114:	350f0000 	strcc	r0, [pc, #-0]	@ 11c <startup-0x1ffffee4>
 118:	00134900 	andseq	r4, r3, r0, lsl #18
 11c:	01171000 	tsteq	r7, r0
 120:	0b3a0b0b 	bleq	e82d54 <startup-0x1f17d2ac>
 124:	21390b3b 	teqcs	r9, fp, lsr fp
 128:	00130102 	andseq	r0, r3, r2, lsl #2
 12c:	000d1100 	andeq	r1, sp, r0, lsl #2
 130:	0b3a0e03 	bleq	e83944 <startup-0x1f17c6bc>
 134:	0b390b3b 	bleq	e42e28 <startup-0x1f1bd1d8>
 138:	00001349 	andeq	r1, r0, r9, asr #6
 13c:	49000d12 	stmdbmi	r0, {r1, r4, r8, sl, fp}
 140:	13000013 	movwne	r0, #19
 144:	1349000d 	movtne	r0, #36877	@ 0x900d
 148:	00000b38 	andeq	r0, r0, r8, lsr fp
 14c:	03001614 	movweq	r1, #1556	@ 0x614
 150:	3b0b3a0e 	blcc	2ce990 <startup-0x1fd31670>
 154:	0121390b 			@ <UNDEFINED> instruction: 0x0121390b
 158:	00001349 	andeq	r1, r0, r9, asr #6
 15c:	03003415 	movweq	r3, #1045	@ 0x415
 160:	01213a0e 			@ <UNDEFINED> instruction: 0x01213a0e
 164:	0b390b3b 	bleq	e42e58 <startup-0x1f1bd1a8>
 168:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	@ <UNPREDICTABLE>
 16c:	00001802 	andeq	r1, r0, r2, lsl #16
 170:	49010116 	stmdbmi	r1, {r1, r2, r4, r8}
 174:	00130113 	andseq	r0, r3, r3, lsl r1
 178:	00211700 	eoreq	r1, r1, r0, lsl #14
 17c:	0b2f1349 	bleq	bc4ea8 <startup-0x1f43b158>
 180:	0b180000 	bleq	600188 <startup-0x1f9ffe78>
 184:	12011101 	andne	r1, r1, #1073741824	@ 0x40000000
 188:	19000006 	stmdbne	r0, {r1, r2}
 18c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 190:	0e030b13 	vmoveq.32	d3[0], r0
 194:	17550e1b 	smmlane	r5, fp, lr, r0
 198:	17100111 			@ <UNDEFINED> instruction: 0x17100111
 19c:	0d1a0000 	ldceq	0, cr0, [sl, #-0]
 1a0:	3a080300 	bcc	200da8 <startup-0x1fdff258>
 1a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1a8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1ac:	1b00000b 	blne	1e0 <startup-0x1ffffe20>
 1b0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	@ <UNPREDICTABLE>
 1b4:	0b3a0e03 	bleq	e839c8 <startup-0x1f17c638>
 1b8:	0b390b3b 	bleq	e42eac <startup-0x1f1bd154>
 1bc:	13491927 	movtne	r1, #39207	@ 0x9927
 1c0:	06120111 			@ <UNDEFINED> instruction: 0x06120111
 1c4:	197c1840 	ldmdbne	ip!, {r6, fp, ip}^
 1c8:	00001301 	andeq	r1, r0, r1, lsl #6
 1cc:	0b00241c 	bleq	9244 <startup-0x1fff6dbc>
 1d0:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
 1d4:	1d000008 	stcne	0, cr0, [r0, #-32]	@ 0xffffffe0
 1d8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	@ <UNPREDICTABLE>
 1dc:	0b3a0e03 	bleq	e839f0 <startup-0x1f17c610>
 1e0:	0b390b3b 	bleq	e42ed4 <startup-0x1f1bd12c>
 1e4:	06120111 			@ <UNDEFINED> instruction: 0x06120111
 1e8:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 1ec:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
 1f0:	03193f00 	tsteq	r9, #0, 30
 1f4:	3b0b3a0e 	blcc	2cea34 <startup-0x1fd315cc>
 1f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 1fc:	12011119 	andne	r1, r1, #1073741830	@ 0x40000006
 200:	7a184006 	bvc	610220 <startup-0x1f9efde0>
 204:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000634 	andeq	r0, r0, r4, lsr r6
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
   0:	00000016 	andeq	r0, r0, r6, lsl r0
   4:	00040005 	andeq	r0, r4, r5
   8:	00000000 	andeq	r0, r0, r0
   c:	00001007 	andeq	r1, r0, r7
  10:	070cb420 	streq	fp, [ip, -r0, lsr #8]
  14:	20000000 	andcs	r0, r0, r0
  18:	Address 0x18 is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000038b 	andeq	r0, r0, fp, lsl #7
   4:	00970003 	addseq	r0, r7, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	74532f3a 	ldrbvc	r2, [r3], #-3898	@ 0xfffff0c6
  20:	65696475 	strbvs	r6, [r9, #-1141]!	@ 0xfffffb8b
  24:	614d2f73 	hvcvs	54003	@ 0xd2f3
  28:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
  2c:	724f2d65 	subvc	r2, pc, #6464	@ 0x1940
  30:	746e6569 	strbtvc	r6, [lr], #-1385	@ 0xfffffa97
  34:	502d6465 	eorpl	r6, sp, r5, ror #8
  38:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
  3c:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
  40:	572f676e 	strpl	r6, [pc, -lr, ror #14]!
  44:	2f6b726f 	svccs	0x006b726f
  48:	6863614d 	stmdavs	r3!, {r0, r2, r3, r6, r8, sp, lr}^
  4c:	2d656e69 	stclcs	14, cr6, [r5, #-420]!	@ 0xfffffe5c
  50:	6569724f 	strbvs	r7, [r9, #-591]!	@ 0xfffffdb1
  54:	6465746e 	strbtvs	r7, [r5], #-1134	@ 0xfffffb92
  58:	6f72502d 	svcvs	0x0072502d
  5c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
  60:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
  64:	7574532d 	ldrbvc	r5, [r4, #-813]!	@ 0xfffffcd3
  68:	73656964 	cmnvc	r5, #100, 18	@ 0x190000
  6c:	462f432f 	strtmi	r4, [pc], -pc, lsr #6
  70:	68746669 	ldmdavs	r4!, {r0, r3, r5, r6, r9, sl, sp, lr}^
  74:	2f797254 	svccs	0x00797254
  78:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  7c:	73696469 	cmnvc	r9, #1761607680	@ 0x69000000
  80:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  84:	74730000 	ldrbtvc	r0, [r3], #-0
  88:	75747261 	ldrbvc	r7, [r4, #-609]!	@ 0xfffffd9f
  8c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  90:	73000001 	movwvc	r0, #1
  94:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
  98:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  9c:	00000100 	andeq	r0, r0, r0, lsl #2
  a0:	00010500 	andeq	r0, r1, r0, lsl #10
  a4:	00000205 	andeq	r0, r0, r5, lsl #4
  a8:	13152000 	tstne	r5, #0
  ac:	212f2121 			@ <UNDEFINED> instruction: 0x212f2121
  b0:	01000302 	tsteq	r0, r2, lsl #6
  b4:	00010501 	andeq	r0, r1, r1, lsl #10
  b8:	00100205 	andseq	r0, r0, r5, lsl #4
  bc:	2f032000 	svccs	0x00032000
  c0:	672f0501 	strvs	r0, [pc, -r1, lsl #10]!
  c4:	01040200 	mrseq	r0, R12_usr
  c8:	02004a06 	andeq	r4, r0, #24576	@ 0x6000
  cc:	052e0204 	streq	r0, [lr, #-516]!	@ 0xfffffdfc
  d0:	0402000e 	streq	r0, [r2], #-14
  d4:	05200604 	streq	r0, [r0, #-1540]!	@ 0xfffff9fc
  d8:	04020016 	streq	r0, [r2], #-22	@ 0xffffffea
  dc:	01052e04 	tsteq	r5, r4, lsl #28
  e0:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
  e4:	09058721 	stmdbeq	r5, {r0, r5, r8, r9, sl, pc}
  e8:	2e10054b 	cfmac32cs	mvfx0, mvfx0, mvfx11
  ec:	052f0905 	streq	r0, [pc, #-2309]!	@ fffff7ef <sysTick+0xdffff08f>
  f0:	10052e15 	andne	r2, r5, r5, lsl lr
  f4:	21090566 	tstcs	r9, r6, ror #10
  f8:	052e1505 	streq	r1, [lr, #-1285]!	@ 0xfffffafb
  fc:	12054b09 	andne	r4, r5, #9216	@ 0x2400
 100:	4b08052e 	blmi	2015c0 <startup-0x1fdfea40>
 104:	02001005 	andeq	r1, r0, #5
 108:	05200104 	streq	r0, [r0, #-260]!	@ 0xfffffefc
 10c:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
 110:	09056601 	stmdbeq	r5, {r0, r9, sl, sp, lr}
 114:	2e10052f 	cfmul64cs	mvdx0, mvdx0, mvdx15
 118:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	@ <UNPREDICTABLE>
 11c:	052f0905 	streq	r0, [pc, #-2309]!	@ fffff81f <sysTick+0xdffff0bf>
 120:	09052e10 	stmdbeq	r5, {r4, r9, sl, fp, sp}
 124:	2e10052f 	cfmul64cs	mvdx0, mvdx0, mvdx15
 128:	052f0905 	streq	r0, [pc, #-2309]!	@ fffff82b <sysTick+0xdffff0cb>
 12c:	09052e15 	stmdbeq	r5, {r0, r2, r4, r9, sl, fp, sp}
 130:	2e12054b 	cfmac32cs	mvfx0, mvfx2, mvfx11
 134:	054b0805 	strbeq	r0, [fp, #-2053]	@ 0xfffff7fb
 138:	04020010 	streq	r0, [r2], #-16
 13c:	1c052001 	stcne	0, cr2, [r5], {1}
 140:	01040200 	mrseq	r0, R12_usr
 144:	2f090566 	svccs	0x00090566
 148:	052e1005 	streq	r1, [lr, #-5]!
 14c:	055b2f01 	ldrbeq	r2, [fp, #-3841]	@ 0xfffff0ff
 150:	02054b0b 	andeq	r4, r5, #11264	@ 0x2c00
 154:	0003052e 	andeq	r0, r3, lr, lsr #10
 158:	22030402 	andcs	r0, r3, #33554432	@ 0x2000000
 15c:	02001d05 	andeq	r1, r0, #320	@ 0x140
 160:	052c0304 	streq	r0, [ip, #-772]!	@ 0xfffffcfc
 164:	04020017 	streq	r0, [r2], #-23	@ 0xffffffe9
 168:	14053c01 	strne	r3, [r5], #-3073	@ 0xfffff3ff
 16c:	01040200 	mrseq	r0, R12_usr
 170:	4001052e 	andmi	r0, r1, lr, lsr #10
 174:	4c05055b 	cfstr32mi	mvfx0, [r5], {91}	@ 0x5b
 178:	05830405 	streq	r0, [r3, #1029]	@ 0x405
 17c:	02053f0b 	andeq	r3, r5, #11, 30	@ 0x2c
 180:	0003052e 	andeq	r0, r3, lr, lsr #10
 184:	22030402 	andcs	r0, r3, #33554432	@ 0x2000000
 188:	02001b05 	andeq	r1, r0, #5120	@ 0x1400
 18c:	05560304 	ldrbeq	r0, [r6, #-772]	@ 0xfffffcfc
 190:	04020014 	streq	r0, [r2], #-20	@ 0xffffffec
 194:	01053c01 	tsteq	r5, r1, lsl #24
 198:	05055e4e 	streq	r5, [r5, #-3662]	@ 0xfffff1b2
 19c:	001f05e5 	andseq	r0, pc, r5, ror #11
 1a0:	4a010402 	bmi	411b0 <startup-0x1ffbee50>
 1a4:	02002405 	andeq	r2, r0, #83886080	@ 0x5000000
 1a8:	052e0104 	streq	r0, [lr, #-260]!	@ 0xfffffefc
 1ac:	21054b05 	tstcs	r5, r5, lsl #22
 1b0:	01040200 	mrseq	r0, R12_usr
 1b4:	0026054a 	eoreq	r0, r6, sl, asr #10
 1b8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 1bc:	054b0505 	strbeq	r0, [fp, #-1285]	@ 0xfffffafb
 1c0:	0402001e 	streq	r0, [r2], #-30	@ 0xffffffe2
 1c4:	22054a01 	andcs	r4, r5, #4096	@ 0x1000
 1c8:	01040200 	mrseq	r0, R12_usr
 1cc:	4b01052e 	blmi	4168c <startup-0x1ffbe974>
 1d0:	e5050569 	str	r0, [r5, #-1385]	@ 0xfffffa97
 1d4:	02002005 	andeq	r2, r0, #5
 1d8:	054a0104 	strbeq	r0, [sl, #-260]	@ 0xfffffefc
 1dc:	04020025 	streq	r0, [r2], #-37	@ 0xffffffdb
 1e0:	05052e01 	streq	r2, [r5, #-3585]	@ 0xfffff1ff
 1e4:	0022054b 	eoreq	r0, r2, fp, asr #10
 1e8:	4a010402 	bmi	411f8 <startup-0x1ffbee08>
 1ec:	02002705 	andeq	r2, r0, #1310720	@ 0x140000
 1f0:	052e0104 	streq	r0, [lr, #-260]!	@ 0xfffffefc
 1f4:	1f054b05 	svcne	0x00054b05
 1f8:	01040200 	mrseq	r0, R12_usr
 1fc:	0023054a 	eoreq	r0, r3, sl, asr #10
 200:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 204:	794b0105 	stmdbvc	fp, {r0, r2, r8}^
 208:	05670205 	strbeq	r0, [r7, #-517]!	@ 0xfffffdfb
 20c:	12053d0e 	andne	r3, r5, #896	@ 0x380
 210:	4b0e052e 	blmi	3816d0 <startup-0x1fc7e930>
 214:	052e1e05 	streq	r1, [lr, #-3589]!	@ 0xfffff1fb
 218:	0e053d02 	cdpeq	13, 0, cr3, cr5, cr2, {0}
 21c:	2e12052f 	cfmul64cs	mvdx0, mvdx2, mvdx15
 220:	054b0205 	strbeq	r0, [fp, #-517]	@ 0xfffffdfb
 224:	05773d01 	ldrbeq	r3, [r7, #-3329]!	@ 0xfffff2ff
 228:	12053d0e 	andne	r3, r5, #896	@ 0x380
 22c:	4b02052e 	blmi	816ec <startup-0x1ff7e914>
 230:	05592105 	ldrbeq	r2, [r9, #-261]	@ 0xfffffefb
 234:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
 238:	2e12053d 	mrccs	5, 0, r0, cr2, cr13, {1}
 23c:	054b0905 	strbeq	r0, [fp, #-2309]	@ 0xfffff6fb
 240:	05772f01 	ldrbeq	r2, [r7, #-3841]!	@ 0xfffff0ff
 244:	1305670e 	movwne	r6, #22286	@ 0x570e
 248:	4b0e052e 	blmi	381708 <startup-0x1fc7e8f8>
 24c:	052e1305 	streq	r1, [lr, #-773]!	@ 0xfffffcfb
 250:	01054b02 	tsteq	r5, r2, lsl #22
 254:	0e057759 	mcreq	7, 0, r7, cr5, cr9, {2}
 258:	2e130567 	cfmsc32cs	mvfx0, mvfx3, mvfx7
 25c:	054b0e05 	strbeq	r0, [fp, #-3589]	@ 0xfffff1fb
 260:	02052e13 	andeq	r2, r5, #304	@ 0x130
 264:	5901054b 	stmdbpl	r1, {r0, r1, r3, r6, r8, sl}
 268:	3d020577 	cfstr32cc	mvfx0, [r2, #-476]	@ 0xfffffe24
 26c:	053d0e05 	ldreq	r0, [sp, #-3589]!	@ 0xfffff1fb
 270:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
 274:	2e13054b 	cfmac32cs	mvfx0, mvfx3, mvfx11
 278:	054b1505 	strbeq	r1, [fp, #-1285]	@ 0xfffffafb
 27c:	09055902 	stmdbeq	r5, {r1, r8, fp, ip, lr}
 280:	2f01053d 	svccs	0x0001053d
 284:	3d020569 	cfstr32cc	mvfx0, [r2, #-420]	@ 0xfffffe5c
 288:	053d0e05 	ldreq	r0, [sp, #-3589]!	@ 0xfffff1fb
 28c:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
 290:	2e13054b 	cfmac32cs	mvfx0, mvfx3, mvfx11
 294:	054b1505 	strbeq	r1, [fp, #-1285]	@ 0xfffffafb
 298:	09055902 	stmdbeq	r5, {r1, r8, fp, ip, lr}
 29c:	2f01053d 	svccs	0x0001053d
 2a0:	2f07056b 	svccs	0x0007056b
 2a4:	02000805 	andeq	r0, r0, #327680	@ 0x50000
 2a8:	05200104 	streq	r0, [r0, #-260]!	@ 0xfffffefc
 2ac:	01056702 	tsteq	r5, r2, lsl #14
 2b0:	02053f3d 	andeq	r3, r5, #61, 30	@ 0xf4
 2b4:	053d2f2f 	ldreq	r2, [sp, #-3887]!	@ 0xfffff0d1
 2b8:	053f3d01 	ldreq	r3, [pc, #-3329]!	@ fffff5bf <sysTick+0xdfffee5f>
 2bc:	10055902 	andne	r5, r5, r2, lsl #18
 2c0:	4c05052f 	cfstr32mi	mvfx0, [r5], {47}	@ 0x2f
 2c4:	02002c05 	andeq	r2, r0, #1280	@ 0x500
 2c8:	053c0104 	ldreq	r0, [ip, #-260]!	@ 0xfffffefc
 2cc:	2d056705 	stccs	7, cr6, [r5, #-20]	@ 0xffffffec
 2d0:	01040200 	mrseq	r0, R12_usr
 2d4:	7502053c 	strvc	r0, [r2, #-1340]	@ 0xfffffac4
 2d8:	3d010567 	cfstr32cc	mvfx0, [r1, #-412]	@ 0xfffffe64
 2dc:	6702054d 	strvs	r0, [r2, -sp, asr #10]
 2e0:	052f1005 	streq	r1, [pc, #-5]!	@ 2e3 <startup-0x1ffffd1d>
 2e4:	2c054c05 	stccs	12, cr4, [r5], {5}
 2e8:	01040200 	mrseq	r0, R12_usr
 2ec:	6705053c 	smladxvs	r5, ip, r5, r0
 2f0:	02002b05 	andeq	r2, r0, #5120	@ 0x1400
 2f4:	053c0104 	ldreq	r0, [ip, #-260]!	@ 0xfffffefc
 2f8:	31057505 	tstcc	r5, r5, lsl #10
 2fc:	01040200 	mrseq	r0, R12_usr
 300:	7502053c 	strvc	r0, [r2, #-1340]	@ 0xfffffac4
 304:	4d3d0105 	ldfmis	f0, [sp, #-20]!	@ 0xffffffec
 308:	05590205 	ldrbeq	r0, [r9, #-517]	@ 0xfffffdfb
 30c:	05052f10 	streq	r2, [r5, #-3856]	@ 0xfffff0f0
 310:	0034054c 	eorseq	r0, r4, ip, asr #10
 314:	3c010402 	cfstrscc	mvf0, [r1], {2}
 318:	05670505 	strbeq	r0, [r7, #-1285]!	@ 0xfffffafb
 31c:	04020035 	streq	r0, [r2], #-53	@ 0xffffffcb
 320:	02053c01 	andeq	r3, r5, #256	@ 0x100
 324:	01056775 	tsteq	r5, r5, ror r7
 328:	02054d3d 	andeq	r4, r5, #3904	@ 0xf40
 32c:	2f100559 	svccs	0x00100559
 330:	3d4b0305 	stclcc	3, cr0, [fp, #-20]	@ 0xffffffec
 334:	053d1e05 	ldreq	r1, [sp, #-3589]!	@ 0xfffff1fb
 338:	02059016 	andeq	r9, r5, #22
 33c:	01055975 	tsteq	r5, r5, ror r9
 340:	02054d3d 	andeq	r4, r5, #3904	@ 0xf40
 344:	2f594b2f 	svccs	0x00594b2f
 348:	3f4b0105 	svccc	0x004b0105
 34c:	2f670205 	svccs	0x00670205
 350:	3d010559 	cfstr32cc	mvfx0, [r1, #-356]	@ 0xfffffe9c
 354:	2f02054f 	svccs	0x0002054f
 358:	3f3d0105 	svccc	0x003d0105
 35c:	753e0705 	ldrvc	r0, [lr, #-1797]!	@ 0xfffff8fb
 360:	2f840205 	svccs	0x00840205
 364:	4b04052f 	blmi	101828 <startup-0x1fefe7d8>
 368:	052f0805 	streq	r0, [pc, #-2053]!	@ fffffb6b <sysTick+0xdffff40b>
 36c:	03052216 	movweq	r2, #21014	@ 0x5216
 370:	4809053c 	stmdami	r9, {r2, r3, r4, r5, r8, sl}
 374:	054e0205 	strbeq	r0, [lr, #-517]	@ 0xfffffdfb
 378:	08054b04 	stmdaeq	r5, {r2, r8, r9, fp, lr}
 37c:	2216052f 	andscs	r0, r6, #197132288	@ 0xbc00000
 380:	053c0305 	ldreq	r0, [ip, #-773]!	@ 0xfffffcfb
 384:	054e4809 	strbeq	r4, [lr, #-2057]	@ 0xfffff7f7
 388:	08022101 	stmdaeq	r2, {r0, r8, sp}
 38c:	Address 0x38c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72636e69 	rsbvc	r6, r3, #1680	@ 0x690
   4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   8:	65645f74 	strbvs	r5, [r4, #-3956]!	@ 0xfffff08c
   c:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	@ 0xfffffe74
  10:	00746e65 	rsbseq	r6, r4, r5, ror #28
  14:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  18:	74635f69 	strbtvc	r5, [r3], #-3945	@ 0xfffff097
  1c:	625f6c72 	subsvs	r6, pc, #29184	@ 0x7200
  20:	735f7469 	cmpvc	pc, #1761607680	@ 0x69000000
  24:	61007465 	tstvs	r0, r5, ror #8
  28:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  2c:	746f675f 	strbtvc	r6, [pc], #-1887	@ 34 <startup-0x1fffffcc>
  30:	0079786f 	rsbseq	r7, r9, pc, ror #16
  34:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  38:	65725f69 	ldrbvs	r5, [r2, #-3945]!	@ 0xfffff097
  3c:	735f6461 	cmpvc	pc, #1627389952	@ 0x61000000
  40:	75746174 	ldrbvc	r6, [r4, #-372]!	@ 0xfffffe8c
  44:	4f4d0073 	svcmi	0x004d0073
  48:	00524544 	subseq	r4, r2, r4, asr #10
  4c:	64616572 	strbtvs	r6, [r1], #-1394	@ 0xfffffa8e
  50:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
  54:	7461645f 	strbtvc	r6, [r1], #-1119	@ 0xfffffba1
  58:	73610061 	cmnvc	r1, #97	@ 0x61
  5c:	5f696963 	svcpl	0x00696963
  60:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
  64:	73696400 	cmnvc	r9, #0, 8
  68:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  6c:	746e655f 	strbtvc	r6, [lr], #-1375	@ 0xfffffaa1
  70:	6d5f7972 	vldrvs.16	s15, [pc, #-228]	@ ffffff94 <sysTick+0xdffff834>	@ <UNPREDICTABLE>
  74:	5f65646f 	svcpl	0x0065646f
  78:	00746573 	rsbseq	r6, r4, r3, ror r5
  7c:	4b434954 	blmi	10d25d4 <startup-0x1ef2da2c>
  80:	00544e49 	subseq	r4, r4, r9, asr #28
  84:	70736964 	rsbsvc	r6, r3, r4, ror #18
  88:	5f79616c 	svcpl	0x0079616c
  8c:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
  90:	006c6f72 	rsbeq	r6, ip, r2, ror pc
  94:	534b4c43 	movtpl	r4, #48195	@ 0xbc43
  98:	4352554f 	cmpmi	r2, #331350016	@ 0x13c00000
  9c:	6e650045 	cdpvs	0, 6, cr0, cr5, cr5, {2}
  a0:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
  a4:	74796200 	ldrbtvc	r6, [r9], #-512	@ 0xfffffe00
  a8:	65640065 	strbvs	r0, [r4, #-101]!	@ 0xffffff9b
  ac:	5f79616c 	svcpl	0x0079616c
  b0:	6f6e616e 	svcvs	0x006e616e
  b4:	73696400 	cmnvc	r9, #0, 8
  b8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  bc:	006e6f5f 	rsbeq	r6, lr, pc, asr pc
  c0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  c4:	65725f69 	ldrbvs	r5, [r2, #-3945]!	@ 0xfffff097
  c8:	635f6461 	cmpvs	pc, #1627389952	@ 0x61000000
  cc:	72746e6f 	rsbsvc	r6, r4, #1776	@ 0x6f0
  d0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	@ 0xfffff391
  d4:	77610072 			@ <UNDEFINED> instruction: 0x77610072
  d8:	5f746961 	svcpl	0x00746961
  dc:	70736964 	rsbsvc	r6, r3, r4, ror #18
  e0:	5f79616c 	svcpl	0x0079616c
  e4:	64616572 	strbtvs	r6, [r1], #-1394	@ 0xfffffa8e
  e8:	4e450079 	mcrmi	0, 2, r0, cr5, cr9, {3}
  ec:	454c4241 	strbmi	r4, [ip, #-577]	@ 0xfffffdbf
  f0:	4c455300 	mcrrmi	3, 0, r5, r5, cr0
  f4:	00544345 	subseq	r4, r4, r5, asr #6
  f8:	6e696c62 	cdpvs	12, 6, cr6, cr9, cr2, {3}
  fc:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
 100:	7275635f 	rsbsvc	r6, r5, #2080374785	@ 0x7c000001
 104:	00726f73 	rsbseq	r6, r2, r3, ror pc
 108:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 10c:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
 110:	61645f65 	cmnvs	r4, r5, ror #30
 114:	6f706174 	svcvs	0x00706174
 118:	75007472 	strvc	r7, [r0, #-1138]	@ 0xfffffb8e
 11c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 120:	2064656e 	rsbcs	r6, r4, lr, ror #10
 124:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
 128:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 12c:	30646573 	rsbcc	r6, r4, r3, ror r5
 130:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 134:	31646573 	smccc	18003	@ 0x4653
 138:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 13c:	33646573 	cmncc	r4, #482344960	@ 0x1cc00000
 140:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 144:	34646573 	strbtcc	r6, [r4], #-1395	@ 0xfffffa8d
 148:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 14c:	35646573 	strbcc	r6, [r4, #-1395]!	@ 0xfffffa8d
 150:	756e7500 	strbvc	r7, [lr, #-1280]!	@ 0xfffffb00
 154:	36646573 			@ <UNDEFINED> instruction: 0x36646573
 158:	6f687300 	svcvs	0x00687300
 15c:	75207472 	strvc	r7, [r0, #-1138]!	@ 0xfffffb8e
 160:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 164:	2064656e 	rsbcs	r6, r4, lr, ror #10
 168:	00746e69 	rsbseq	r6, r4, r9, ror #28
 16c:	70736964 	rsbsvc	r6, r3, r4, ror #18
 170:	5f79616c 	svcpl	0x0079616c
 174:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 178:	5f6c6f72 	svcpl	0x006c6f72
 17c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	@ 0xfffffe74
 180:	00646e61 	rsbeq	r6, r4, r1, ror #28
 184:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 188:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 18c:	7465735f 	strbtvc	r7, [r5], #-863	@ 0xfffffca1
 190:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	@ 1c <startup-0x1fffffe4>
 194:	646e616d 	strbtvs	r6, [lr], #-365	@ 0xfffffe93
 198:	5f6e6900 	svcpl	0x006e6900
 19c:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 1a0:	6f6d5f65 	svcvs	0x006d5f65
 1a4:	6d006564 	cfstr32vs	mvfx6, [r0, #-400]	@ 0xfffffe70
 1a8:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 1ac:	5f656c70 	svcpl	0x00656c70
 1b0:	73776f72 	cmnvc	r7, #456	@ 0x1c8
 1b4:	746e6500 	strbtvc	r6, [lr], #-1280	@ 0xfffffb00
 1b8:	6d5f7972 	vldrvs.16	s15, [pc, #-228]	@ dc <startup-0x1fffff24>	@ <UNPREDICTABLE>
 1bc:	5f65646f 	svcpl	0x0065646f
 1c0:	5f746573 	svcpl	0x00746573
 1c4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	@ 0xfffffe74
 1c8:	00646e61 	rsbeq	r6, r4, r1, ror #28
 1cc:	6e69616d 	powvsez	f6, f1, #5.0
 1d0:	656c6300 	strbvs	r6, [ip, #-768]!	@ 0xfffffd00
 1d4:	645f7261 	ldrbvs	r7, [pc], #-609	@ 1dc <startup-0x1ffffe24>
 1d8:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 1dc:	61007961 	tstvs	r0, r1, ror #18
 1e0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1e4:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 1e8:	635f6574 	cmpvs	pc, #116, 10	@ 0x1d000000
 1ec:	4400646d 	strmi	r6, [r0], #-1133	@ 0xfffffb93
 1f0:	74535c3a 	ldrbvc	r5, [r3], #-3130	@ 0xfffff3c6
 1f4:	65696475 	strbvs	r6, [r9, #-1141]!	@ 0xfffffb8b
 1f8:	614d5c73 	hvcvs	54723	@ 0xd5c3
 1fc:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
 200:	724f2d65 	subvc	r2, pc, #6464	@ 0x1940
 204:	746e6569 	strbtvc	r6, [lr], #-1385	@ 0xfffffa97
 208:	502d6465 	eorpl	r6, sp, r5, ror #8
 20c:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
 210:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
 214:	575c676e 	ldrbpl	r6, [ip, -lr, ror #14]
 218:	5c6b726f 	sfmpl	f7, 2, [fp], #-444	@ 0xfffffe44
 21c:	6863614d 	stmdavs	r3!, {r0, r2, r3, r6, r8, sp, lr}^
 220:	2d656e69 	stclcs	14, cr6, [r5, #-420]!	@ 0xfffffe5c
 224:	6569724f 	strbvs	r7, [r9, #-591]!	@ 0xfffffdb1
 228:	6465746e 	strbtvs	r7, [r5], #-1134	@ 0xfffffb92
 22c:	6f72502d 	svcvs	0x0072502d
 230:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
 234:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 238:	7574532d 	ldrbvc	r5, [r4, #-813]!	@ 0xfffffcd3
 23c:	73656964 	cmnvc	r5, #100, 18	@ 0x190000
 240:	465c435c 			@ <UNDEFINED> instruction: 0x465c435c
 244:	68746669 	ldmdavs	r4!, {r0, r3, r5, r6, r9, sl, sp, lr}^
 248:	5c797254 	lfmpl	f7, 2, [r9], #-336	@ 0xfffffeb0
 24c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 250:	73696469 	cmnvc	r9, #1761607680	@ 0x69000000
 254:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 258:	554f4300 	strbpl	r4, [pc, #-768]	@ ffffff60 <sysTick+0xdffff800>
 25c:	4c46544e 	cfstrdmi	mvd5, [r6], {78}	@ 0x4e
 260:	69004741 	stmdbvs	r0, {r0, r6, r8, r9, sl, lr}
 264:	5f74696e 	svcpl	0x0074696e
 268:	00707061 	rsbseq	r7, r0, r1, rrx
 26c:	645f7372 	ldrbvs	r7, [pc], #-882	@ 274 <startup-0x1ffffd8c>
 270:	00617461 	rsbeq	r7, r1, r1, ror #8
 274:	66696873 			@ <UNDEFINED> instruction: 0x66696873
 278:	64615f74 	strbtvs	r5, [r1], #-3956	@ 0xfffff08c
 27c:	73657264 	cmnvc	r5, #100, 4	@ 0x40000006
 280:	75625f73 	strbvc	r5, [r2, #-3955]!	@ 0xfffff08d
 284:	72656666 	rsbvc	r6, r5, #106954752	@ 0x6600000
 288:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 28c:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	@ 1d2 <startup-0x1ffffe2e>	@ <UNPREDICTABLE>
 290:	6f726b69 	svcvs	0x00726b69
 294:	63736100 	cmnvs	r3, #0, 2
 298:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 29c:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
 2a0:	7461645f 	strbtvc	r6, [r1], #-1119	@ 0xfffffba1
 2a4:	54430061 	strbpl	r0, [r3], #-97	@ 0xffffff9f
 2a8:	44004c52 	strmi	r4, [r0], #-3154	@ 0xfffff3ae
 2ac:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
 2b0:	50477961 	subpl	r7, r7, r1, ror #18
 2b4:	63004f49 	movwvs	r4, #3913	@ 0xf49
 2b8:	006c7274 	rsbeq	r7, ip, r4, ror r2
 2bc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 2c0:	5079616c 	rsbspl	r6, r9, ip, ror #2
 2c4:	4574726f 	ldrbmi	r7, [r4, #-623]!	@ 0xfffffd91
 2c8:	61747300 	cmnvs	r4, r0, lsl #6
 2cc:	70757472 	rsbsvc	r7, r5, r2, ror r4
 2d0:	73795300 	cmnvc	r9, #0, 6
 2d4:	6b636954 	blvs	18da82c <startup-0x1e7257d4>
 2d8:	64646100 	strbtvs	r6, [r4], #-256	@ 0xffffff00
 2dc:	73736572 	cmnvc	r3, #478150656	@ 0x1c800000
 2e0:	7465735f 	strbtvc	r7, [r5], #-863	@ 0xfffffca1
 2e4:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	@ 170 <startup-0x1ffffe90>
 2e8:	646e616d 	strbtvs	r6, [lr], #-365	@ 0xfffffe93
 2ec:	69727700 	ldmdbvs	r2!, {r8, r9, sl, ip, sp, lr}^
 2f0:	6c626174 	stfvse	f6, [r2], #-464	@ 0xfffffe30
 2f4:	61645f65 	cmnvs	r4, r5, ror #30
 2f8:	4c006174 	stfmis	f6, [r0], {116}	@ 0x74
 2fc:	0044414f 	subeq	r4, r4, pc, asr #2
 300:	616c6564 	cmnvs	ip, r4, ror #10
 304:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 308:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 30c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 310:	74635f69 	strbtvc	r5, [r3], #-3945	@ 0xfffff097
 314:	625f6c72 	subsvs	r6, pc, #29184	@ 0x7200
 318:	635f7469 	cmpvs	pc, #1761607680	@ 0x69000000
 31c:	7261656c 	rsbvc	r6, r1, #108, 10	@ 0x1b000000
 320:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 324:	325f7961 	subscc	r7, pc, #1589248	@ 0x184000
 328:	736e3035 	cmnvc	lr, #53	@ 0x35
 32c:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
 330:	6f697463 	svcvs	0x00697463
 334:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	@ 0xfffff092
 338:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 33c:	616c7073 	smcvs	50947	@ 0xc703
 340:	69620079 	stmdbvs	r2!, {r0, r3, r4, r5, r6}^
 344:	68635f67 	stmdavs	r3!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 348:	63617261 	cmnvs	r1, #268435462	@ 0x10000006
 34c:	73726574 	cmnvc	r2, #116, 10	@ 0x1d000000
 350:	63736100 	cmnvs	r3, #0, 2
 354:	725f6969 	subsvc	r6, pc, #1720320	@ 0x1a4000
 358:	5f646165 	svcpl	0x00646165
 35c:	61746164 	cmnvs	r4, r4, ror #2
 360:	73797300 	cmnvc	r9, #0, 6
 364:	6b636954 	blvs	18da8bc <startup-0x1e725744>
 368:	554e4700 	strbpl	r4, [lr, #-1792]	@ 0xfffff900
 36c:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
 370:	2e323120 	rsfcssp	f3, f2, f0
 374:	20312e33 	eorscs	r2, r1, r3, lsr lr
 378:	33323032 	teqcc	r2, #50	@ 0x32
 37c:	36323630 			@ <UNDEFINED> instruction: 0x36323630
 380:	746d2d20 	strbtvc	r2, [sp], #-3360	@ 0xfffff2e0
 384:	626d7568 	rsbvs	r7, sp, #104, 10	@ 0x1a000000
 388:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
 38c:	74616f6c 	strbtvc	r6, [r1], #-3948	@ 0xfffff094
 390:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
 394:	666f733d 			@ <UNDEFINED> instruction: 0x666f733d
 398:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	@ 0xfffffe30
 39c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 3a0:	6d72613d 	ldfvse	f6, [r2, #-244]!	@ 0xffffff0c
 3a4:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	@ 0xfffffe28
 3a8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 3ac:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 3b0:	6474732d 	ldrbtvs	r7, [r4], #-813	@ 0xfffffcd3
 3b4:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 3b8:	61657200 	cmnvs	r5, r0, lsl #4
 3bc:	72775f64 	rsbsvc	r5, r7, #100, 30	@ 0x190
 3c0:	00657469 	rsbeq	r7, r5, r9, ror #8
 3c4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 3c8:	72775f69 	rsbsvc	r5, r7, #420	@ 0x1a4
 3cc:	5f657469 	svcpl	0x00657469
 3d0:	746e6f63 	strbtvc	r6, [lr], #-3939	@ 0xfffff09d
 3d4:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	@ 0xfffffe38
 3d8:	74007265 	strvc	r7, [r0], #-613	@ 0xfffffd9b
 3dc:	31747365 	cmncc	r4, r5, ror #6
 3e0:	73657400 	cmnvc	r5, #0, 8
 3e4:	61003274 	tstvs	r0, r4, ror r2
 3e8:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 3ec:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 3f0:	635f6574 	cmpvs	pc, #116, 10	@ 0x1d000000
 3f4:	00726168 	rsbseq	r6, r2, r8, ror #2
 3f8:	532f3a44 			@ <UNDEFINED> instruction: 0x532f3a44
 3fc:	69647574 	stmdbvs	r4!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 400:	4d2f7365 	stcmi	3, cr7, [pc, #-404]!	@ 274 <startup-0x1ffffd8c>
 404:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 408:	4f2d656e 	svcmi	0x002d656e
 40c:	6e656972 			@ <UNDEFINED> instruction: 0x6e656972
 410:	2d646574 	cfstr64cs	mvdx6, [r4, #-464]!	@ 0xfffffe30
 414:	676f7250 			@ <UNDEFINED> instruction: 0x676f7250
 418:	6d6d6172 	stfvse	f6, [sp, #-456]!	@ 0xfffffe38
 41c:	2f676e69 	svccs	0x00676e69
 420:	6b726f57 	blvs	1c9c184 <startup-0x1e363e7c>
 424:	63614d2f 	cmnvs	r1, #3008	@ 0xbc0
 428:	656e6968 	strbvs	r6, [lr, #-2408]!	@ 0xfffff698
 42c:	69724f2d 	ldmdbvs	r2!, {r0, r2, r3, r5, r8, r9, sl, fp, lr}^
 430:	65746e65 	ldrbvs	r6, [r4, #-3685]!	@ 0xfffff19b
 434:	72502d64 	subsvc	r2, r0, #100, 26	@ 0x1900
 438:	6172676f 	cmnvs	r2, pc, ror #14
 43c:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
 440:	74532d67 	ldrbvc	r2, [r3], #-3431	@ 0xfffff299
 444:	65696475 	strbvs	r6, [r9, #-1141]!	@ 0xfffffb8b
 448:	2f432f73 	svccs	0x00432f73
 44c:	74666946 	strbtvc	r6, [r6], #-2374	@ 0xfffff6ba
 450:	79725468 	ldmdbvc	r2!, {r3, r5, r6, sl, ip, lr}^
 454:	6373612f 	cmnvs	r3, #-1073741813	@ 0xc000000b
 458:	69646969 	stmdbvs	r4!, {r0, r3, r5, r6, r8, fp, sp, lr}^
 45c:	616c7073 	smcvs	50947	@ 0xc703
 460:	74732f79 	ldrbtvc	r2, [r3], #-3961	@ 0xfffff087
 464:	75747261 	ldrbvc	r7, [r4, #-609]!	@ 0xfffffd9f
 468:	00632e70 	rsbeq	r2, r3, r0, ror lr
 46c:	73727563 	cmnvc	r2, #415236096	@ 0x18c00000
 470:	6f5f726f 	svcvs	0x005f726f
 474:	Address 0x474 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	72412820 	subvc	r2, r1, #32, 16	@ 0x200000
   8:	4e47206d 	cdpmi	0, 4, cr2, cr7, cr13, {3}
   c:	6f542055 	svcvs	0x00542055
  10:	68636c6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^
  14:	206e6961 	rsbcs	r6, lr, r1, ror #18
  18:	332e3231 			@ <UNDEFINED> instruction: 0x332e3231
  1c:	6c65522e 	sfmvs	f5, 2, [r5], #-184	@ 0xffffff48
  20:	42282031 	eormi	r2, r8, #49	@ 0x31
  24:	646c6975 	strbtvs	r6, [ip], #-2421	@ 0xfffff68b
  28:	6d726120 	ldfvse	f6, [r2, #-128]!	@ 0xffffff80
  2c:	2e32312d 	rsfcssp	f3, f2, #5.0
  30:	29293533 	stmdbcs	r9!, {r0, r1, r4, r5, r8, sl, ip, sp}
  34:	2e323120 	rsfcssp	f3, f2, f0
  38:	20312e33 	eorscs	r2, r1, r3, lsr lr
  3c:	33323032 	teqcc	r2, #50	@ 0x32
  40:	36323630 			@ <UNDEFINED> instruction: 0x36323630
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	@ 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	@ 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	@ 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			@ <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000040 	andcs	r0, r0, r0, asr #32
  4c:	00000060 	andeq	r0, r0, r0, rrx
  50:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
  54:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  58:	180e4101 	stmdane	lr, {r0, r8, lr}
  5c:	00070d41 	andeq	r0, r7, r1, asr #26
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	200000a0 	andcs	r0, r0, r0, lsr #1
  6c:	00000050 	andeq	r0, r0, r0, asr r0
  70:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  74:	41018e02 	tstmi	r1, r2, lsl #28
  78:	0000070d 	andeq	r0, r0, sp, lsl #14
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000f0 	strdcs	r0, [r0], -r0	@ <UNPREDICTABLE>
  88:	0000002c 	andeq	r0, r0, ip, lsr #32
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41180e 	stcleq	8, cr1, [r1, #-56]	@ 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	2000011c 	andcs	r0, r0, ip, lsl r1
  a8:	00000046 	andeq	r0, r0, r6, asr #32
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	@ 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000162 	andcs	r0, r0, r2, ror #2
  c8:	00000066 	andeq	r0, r0, r6, rrx
  cc:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
  d0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  d4:	180e4101 	stmdane	lr, {r0, r8, lr}
  d8:	00070d41 	andeq	r0, r7, r1, asr #26
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	200001c8 	andcs	r0, r0, r8, asr #3
  e8:	00000068 	andeq	r0, r0, r8, rrx
  ec:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
  f0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  f4:	180e4101 	stmdane	lr, {r0, r8, lr}
  f8:	00070d41 	andeq	r0, r7, r1, asr #26
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	00000000 	andeq	r0, r0, r0
 104:	20000230 	andcs	r0, r0, r0, lsr r2
 108:	0000004c 	andeq	r0, r0, ip, asr #32
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
 118:	00000007 	andeq	r0, r0, r7
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	2000027c 	andcs	r0, r0, ip, ror r2
 128:	00000044 	andeq	r0, r0, r4, asr #32
 12c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 130:	41018e02 	tstmi	r1, r2, lsl #28
 134:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
 138:	00000007 	andeq	r0, r0, r7
 13c:	0000001c 	andeq	r0, r0, ip, lsl r0
 140:	00000000 	andeq	r0, r0, r0
 144:	200002c0 	andcs	r0, r0, r0, asr #5
 148:	0000003c 	andeq	r0, r0, ip, lsr r0
 14c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 150:	41018e02 	tstmi	r1, r2, lsl #28
 154:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
 158:	00000007 	andeq	r0, r0, r7
 15c:	0000001c 	andeq	r0, r0, ip, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	200002fc 	strdcs	r0, [r0], -ip
 168:	0000003c 	andeq	r0, r0, ip, lsr r0
 16c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 170:	41018e02 	tstmi	r1, r2, lsl #28
 174:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
 178:	00000007 	andeq	r0, r0, r7
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	00000000 	andeq	r0, r0, r0
 184:	20000338 	andcs	r0, r0, r8, lsr r3
 188:	00000044 	andeq	r0, r0, r4, asr #32
 18c:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 190:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 194:	180e4101 	stmdane	lr, {r0, r8, lr}
 198:	00070d41 	andeq	r0, r7, r1, asr #26
 19c:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	2000037c 	andcs	r0, r0, ip, ror r3
 1a8:	00000044 	andeq	r0, r0, r4, asr #32
 1ac:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 1b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1b4:	180e4101 	stmdane	lr, {r0, r8, lr}
 1b8:	00070d41 	andeq	r0, r7, r1, asr #26
 1bc:	00000018 	andeq	r0, r0, r8, lsl r0
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	200003c0 	andcs	r0, r0, r0, asr #7
 1c8:	0000001e 	andeq	r0, r0, lr, lsl r0
 1cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d0:	41018e02 	tstmi	r1, r2, lsl #28
 1d4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1d8:	00000018 	andeq	r0, r0, r8, lsl r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	200003de 	ldrdcs	r0, [r0], -lr
 1e4:	0000001a 	andeq	r0, r0, sl, lsl r0
 1e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ec:	41018e02 	tstmi	r1, r2, lsl #28
 1f0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	200003f8 	strdcs	r0, [r0], -r8
 200:	00000056 	andeq	r0, r0, r6, asr r0
 204:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 208:	41018e02 	tstmi	r1, r2, lsl #28
 20c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	@ 0xffffffc8
 210:	00000007 	andeq	r0, r0, r7
 214:	0000001c 	andeq	r0, r0, ip, lsl r0
 218:	00000000 	andeq	r0, r0, r0
 21c:	2000044e 	andcs	r0, r0, lr, asr #8
 220:	00000060 	andeq	r0, r0, r0, rrx
 224:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 228:	41018e02 	tstmi	r1, r2, lsl #28
 22c:	0d41200e 	stcleq	0, cr2, [r1, #-56]	@ 0xffffffc8
 230:	00000007 	andeq	r0, r0, r7
 234:	0000001c 	andeq	r0, r0, ip, lsl r0
 238:	00000000 	andeq	r0, r0, r0
 23c:	200004ae 	andcs	r0, r0, lr, lsr #9
 240:	00000056 	andeq	r0, r0, r6, asr r0
 244:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 248:	41018e02 	tstmi	r1, r2, lsl #28
 24c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	@ 0xffffffc8
 250:	00000007 	andeq	r0, r0, r7
 254:	0000001c 	andeq	r0, r0, ip, lsl r0
 258:	00000000 	andeq	r0, r0, r0
 25c:	20000504 	andcs	r0, r0, r4, lsl #10
 260:	0000005a 	andeq	r0, r0, sl, asr r0
 264:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 268:	41018e02 	tstmi	r1, r2, lsl #28
 26c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	@ 0xffffffc8
 270:	00000007 	andeq	r0, r0, r7
 274:	00000018 	andeq	r0, r0, r8, lsl r0
 278:	00000000 	andeq	r0, r0, r0
 27c:	2000055e 	andcs	r0, r0, lr, asr r5
 280:	00000028 	andeq	r0, r0, r8, lsr #32
 284:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 288:	41018e02 	tstmi	r1, r2, lsl #28
 28c:	0000070d 	andeq	r0, r0, sp, lsl #14
 290:	0000001c 	andeq	r0, r0, ip, lsl r0
 294:	00000000 	andeq	r0, r0, r0
 298:	20000586 	andcs	r0, r0, r6, lsl #11
 29c:	00000028 	andeq	r0, r0, r8, lsr #32
 2a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2a4:	41018e02 	tstmi	r1, r2, lsl #28
 2a8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	@ 0xffffffc8
 2ac:	00000007 	andeq	r0, r0, r7
 2b0:	00000018 	andeq	r0, r0, r8, lsl r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	200005ae 	andcs	r0, r0, lr, lsr #11
 2bc:	00000010 	andeq	r0, r0, r0, lsl r0
 2c0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2c4:	41018e02 	tstmi	r1, r2, lsl #28
 2c8:	0000070d 	andeq	r0, r0, sp, lsl #14
 2cc:	00000020 	andeq	r0, r0, r0, lsr #32
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	200005be 			@ <UNDEFINED> instruction: 0x200005be
 2d8:	00000086 	andeq	r0, r0, r6, lsl #1
 2dc:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 2e0:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 2e4:	41018e02 	tstmi	r1, r2, lsl #28
 2e8:	0d41380e 	stcleq	8, cr3, [r1, #-56]	@ 0xffffffc8
 2ec:	00000007 	andeq	r0, r0, r7
 2f0:	0000000c 	andeq	r0, r0, ip
 2f4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 2f8:	7c010001 	stcvc	0, cr0, [r1], {1}
 2fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 300:	0000000c 	andeq	r0, r0, ip
 304:	000002f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 308:	20000645 	andcs	r0, r0, r5, asr #12
 30c:	0000010a 	andeq	r0, r0, sl, lsl #2

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
   0:	7461642f 	strbtvc	r6, [r1], #-1071	@ 0xfffffbd1
   4:	656a2f61 	strbvs	r2, [sl, #-3937]!	@ 0xfffff09f
   8:	6e696b6e 	vnmulvs.f64	d22, d9, d30
   c:	6f772f73 	svcvs	0x00772f73
  10:	70736b72 	rsbsvc	r6, r3, r2, ror fp
  14:	2f656361 	svccs	0x00656361
  18:	2d554e47 	ldclcs	14, cr4, [r5, #-284]	@ 0xfffffee4
  1c:	6c6f6f74 	stclvs	15, cr6, [pc], #-464	@ fffffe54 <sysTick+0xdffff6f4>
  20:	69616863 	stmdbvs	r1!, {r0, r1, r5, r6, fp, sp, lr}^
  24:	72612f6e 	rsbvc	r2, r1, #440	@ 0x1b8
  28:	32312d6d 	eorscc	r2, r1, #6976	@ 0x1b40
  2c:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
  30:	6e2d646c 	cdpvs	4, 2, cr6, cr13, cr12, {3}
  34:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
  38:	72612d62 	rsbvc	r2, r1, #6272	@ 0x1880
  3c:	6f6e2d6d 	svcvs	0x006e2d6d
  40:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
  44:	2f696261 	svccs	0x00696261
  48:	2f6a626f 	svccs	0x006a626f
  4c:	32636367 	rsbcc	r6, r3, #-1677721599	@ 0x9c000001
  50:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
  54:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  58:	61652d65 	cmnvs	r5, r5, ror #26
  5c:	742f6962 	strtvc	r6, [pc], #-2402	@ 64 <startup-0x1fffff9c>
  60:	626d7568 	rsbvs	r7, sp, #104, 10	@ 0x1a000000
  64:	2d36762f 	ldccs	6, cr7, [r6, #-188]!	@ 0xffffff44
  68:	6f6e2f6d 	svcvs	0x006e2f6d
  6c:	6c2f7066 	stcvs	0, cr7, [pc], #-408	@ fffffedc <sysTick+0xdffff77c>
  70:	63676269 	cmnvs	r7, #-1879048186	@ 0x90000006
  74:	642f0063 	strtvs	r0, [pc], #-99	@ 7c <startup-0x1fffff84>
  78:	2f617461 	svccs	0x00617461
  7c:	6b6e656a 	blvs	1b9962c <startup-0x1e4669d4>
  80:	2f736e69 	svccs	0x00736e69
  84:	6b726f77 	blvs	1c9be68 <startup-0x1e364198>
  88:	63617073 	cmnvs	r1, #115	@ 0x73
  8c:	4e472f65 	cdpmi	15, 4, cr2, cr7, cr5, {3}
  90:	6f742d55 	svcvs	0x00742d55
  94:	68636c6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^
  98:	2f6e6961 	svccs	0x006e6961
  9c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	@ 0xfffffe7c
  a0:	732f3231 			@ <UNDEFINED> instruction: 0x732f3231
  a4:	672f6372 			@ <UNDEFINED> instruction: 0x672f6372
  a8:	6c2f6363 	stcvs	3, cr6, [pc], #-396	@ ffffff24 <sysTick+0xdffff7c4>
  ac:	63676269 	cmnvs	r7, #-1879048186	@ 0x90000006
  b0:	6f632f63 	svcvs	0x00632f63
  b4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
  b8:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
  bc:	62696c00 	rsbvs	r6, r9, #0, 24
  c0:	6e756631 	mrcvs	6, 3, r6, cr5, cr1, {1}
  c4:	532e7363 			@ <UNDEFINED> instruction: 0x532e7363
	...
