
..\build-Release\bin\2.2-Keyboard.exe:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

__attribute__((naked)) 
__attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	@ (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8d2 	bl	200001ac <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	c0000000 	andgt	r0, r0, r0
2000000e:	 	subscs	r2, r5, #1

20000010 <app_init>:
	// Lower nibble of higher byte, the columns, are input with pull-up.
	portD->mode.pin8 = MODE_INPUT;
	portD->mode.pin9 = MODE_INPUT;
	portD->mode.pin10 = MODE_INPUT;
	portD->mode.pin11 = MODE_INPUT;
	portD->pullUpPullDown.pin8 = PUPD_PULL_UP;
20000010:	2255      	movs	r2, #85	@ 0x55
	portD->MODER_LOW = 0x55;	// D0-D7 as output for 7-segment display.
20000012:	4b06      	ldr	r3, [pc, #24]	@ (2000002c <app_init+0x1c>)
20000014:	681b      	ldr	r3, [r3, #0]
	portD->pullUpPullDown.pin8 = PUPD_PULL_UP;
20000016:	739a      	strb	r2, [r3, #14]
	portD->MODER_LOW = 0x55;	// D0-D7 as output for 7-segment display.
20000018:	4a05      	ldr	r2, [pc, #20]	@ (20000030 <app_init+0x20>)
	portD->OTYPER_LOW = 0;		// D0-D7 as push-pull.
2000001a:	8899      	ldrh	r1, [r3, #4]
	portD->MODER_LOW = 0x55;	// D0-D7 as output for 7-segment display.
2000001c:	601a      	str	r2, [r3, #0]
	portD->OTYPER_LOW = 0;		// D0-D7 as push-pull.
2000001e:	22f0      	movs	r2, #240	@ 0xf0
20000020:	0112      	lsls	r2, r2, #4
20000022:	4011      	ands	r1, r2
20000024:	4a03      	ldr	r2, [pc, #12]	@ (20000034 <app_init+0x24>)
20000026:	430a      	orrs	r2, r1
20000028:	809a      	strh	r2, [r3, #4]
	portD->mode.pin15 = MODE_OUTPUT;
	portD->outputType.pin12 = OTYPE_OPEN_DRAIN;
	portD->outputType.pin13 = OTYPE_OPEN_DRAIN;
	portD->outputType.pin14 = OTYPE_OPEN_DRAIN;
	portD->outputType.pin15 = OTYPE_OPEN_DRAIN;
}
2000002a:	4770      	bx	lr
2000002c:	20000250 	andcs	r0, r0, r0, asr r2
20000030:	55000055 	strpl	r0, [r0, #-85]	@ 0xffffffab
20000034:	fffff000 			@ <UNDEFINED> instruction: 0xfffff000

20000038 <setRowState>:
#define OPEN 1

// Changes the state of a single row to newState.
void setRowState (int row, int newState)
{
	if (row == 0) 		{portD->outputData.pin12 = newState; }
20000038:	2800      	cmp	r0, #0
2000003a:	d10a      	bne.n	20000052 <setRowState+0x1a>
2000003c:	2201      	movs	r2, #1
2000003e:	400a      	ands	r2, r1
20000040:	2110      	movs	r1, #16
20000042:	4b16      	ldr	r3, [pc, #88]	@ (2000009c <setRowState+0x64>)
20000044:	0112      	lsls	r2, r2, #4
20000046:	6818      	ldr	r0, [r3, #0]
20000048:	7d43      	ldrb	r3, [r0, #21]
2000004a:	438b      	bics	r3, r1
2000004c:	4313      	orrs	r3, r2
2000004e:	7543      	strb	r3, [r0, #21]
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
	else if (row == 3) 	{portD->outputData.pin15 = newState; }
}
20000050:	4770      	bx	lr
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000052:	2801      	cmp	r0, #1
20000054:	d00c      	beq.n	20000070 <setRowState+0x38>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
20000056:	2802      	cmp	r0, #2
20000058:	d014      	beq.n	20000084 <setRowState+0x4c>
	else if (row == 3) 	{portD->outputData.pin15 = newState; }
2000005a:	2803      	cmp	r0, #3
2000005c:	d1f8      	bne.n	20000050 <setRowState+0x18>
2000005e:	4b0f      	ldr	r3, [pc, #60]	@ (2000009c <setRowState+0x64>)
20000060:	01c9      	lsls	r1, r1, #7
20000062:	681a      	ldr	r2, [r3, #0]
20000064:	237f      	movs	r3, #127	@ 0x7f
20000066:	7d50      	ldrb	r0, [r2, #21]
20000068:	4003      	ands	r3, r0
2000006a:	430b      	orrs	r3, r1
2000006c:	7553      	strb	r3, [r2, #21]
}
2000006e:	e7ef      	b.n	20000050 <setRowState+0x18>
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000070:	4b0a      	ldr	r3, [pc, #40]	@ (2000009c <setRowState+0x64>)
20000072:	4001      	ands	r1, r0
20000074:	681a      	ldr	r2, [r3, #0]
20000076:	301f      	adds	r0, #31
20000078:	7d53      	ldrb	r3, [r2, #21]
2000007a:	0149      	lsls	r1, r1, #5
2000007c:	4383      	bics	r3, r0
2000007e:	430b      	orrs	r3, r1
20000080:	7553      	strb	r3, [r2, #21]
20000082:	e7e5      	b.n	20000050 <setRowState+0x18>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
20000084:	2201      	movs	r2, #1
20000086:	400a      	ands	r2, r1
20000088:	2140      	movs	r1, #64	@ 0x40
2000008a:	4b04      	ldr	r3, [pc, #16]	@ (2000009c <setRowState+0x64>)
2000008c:	0192      	lsls	r2, r2, #6
2000008e:	6818      	ldr	r0, [r3, #0]
20000090:	7d43      	ldrb	r3, [r0, #21]
20000092:	438b      	bics	r3, r1
20000094:	4313      	orrs	r3, r2
20000096:	7543      	strb	r3, [r0, #21]
20000098:	e7da      	b.n	20000050 <setRowState+0x18>
2000009a:	46c0      	nop			@ (mov r8, r8)
2000009c:	20000250 	andcs	r0, r0, r0, asr r2

200000a0 <readColumns>:
// Returns a column with a pressed button. 0xFF is returned with no button pressed.
unsigned char readColumns ()
{
	// When a button is pressed it actually makes a connection to ground.
	// Meaning that a (normally pulled-up to 1) button is read as 0 when pressed.
	if (portD->inputData.pin8 == 0) { return 0; }
200000a0:	2201      	movs	r2, #1
200000a2:	0010      	movs	r0, r2
200000a4:	4b0a      	ldr	r3, [pc, #40]	@ (200000d0 <readColumns+0x30>)
200000a6:	681b      	ldr	r3, [r3, #0]
200000a8:	7c5b      	ldrb	r3, [r3, #17]
200000aa:	4018      	ands	r0, r3
200000ac:	421a      	tst	r2, r3
200000ae:	d00b      	beq.n	200000c8 <readColumns+0x28>
	if (portD->inputData.pin9 == 0) { return 1; }
200000b0:	079a      	lsls	r2, r3, #30
200000b2:	d509      	bpl.n	200000c8 <readColumns+0x28>
	if (portD->inputData.pin10 == 0) { return 2; }
200000b4:	075a      	lsls	r2, r3, #29
200000b6:	d508      	bpl.n	200000ca <readColumns+0x2a>
	if (portD->inputData.pin11 == 0) { return 3; }
200000b8:	2008      	movs	r0, #8
200000ba:	4018      	ands	r0, r3
	
	return 0xFF;
200000bc:	4243      	negs	r3, r0
200000be:	4158      	adcs	r0, r3
200000c0:	23fb      	movs	r3, #251	@ 0xfb
200000c2:	4240      	negs	r0, r0
200000c4:	4398      	bics	r0, r3
200000c6:	30ff      	adds	r0, #255	@ 0xff
}
200000c8:	4770      	bx	lr
	if (portD->inputData.pin10 == 0) { return 2; }
200000ca:	2002      	movs	r0, #2
200000cc:	e7fc      	b.n	200000c8 <readColumns+0x28>
200000ce:	46c0      	nop			@ (mov r8, r8)
200000d0:	20000250 	andcs	r0, r0, r0, asr r2

200000d4 <keyb>:

unsigned char keyb(void)
{
200000d4:	b5f0      	push	{r4, r5, r6, r7, lr}
200000d6:	464e      	mov	r6, r9
200000d8:	46de      	mov	lr, fp
200000da:	4657      	mov	r7, sl
200000dc:	4645      	mov	r5, r8
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200000de:	2010      	movs	r0, #16
{
200000e0:	b5e0      	push	{r5, r6, r7, lr}
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200000e2:	492b      	ldr	r1, [pc, #172]	@ (20000190 <keyb+0xbc>)
200000e4:	680a      	ldr	r2, [r1, #0]
200000e6:	7d53      	ldrb	r3, [r2, #21]
	if (portD->inputData.pin8 == 0) { return 0; }
200000e8:	7c56      	ldrb	r6, [r2, #17]
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200000ea:	4383      	bics	r3, r0
200000ec:	7553      	strb	r3, [r2, #21]
	if (portD->inputData.pin8 == 0) { return 0; }
200000ee:	07f3      	lsls	r3, r6, #31
200000f0:	d40b      	bmi.n	2000010a <keyb+0x36>
	for (int row = 0; row < 4; row++) {
200000f2:	2300      	movs	r3, #0
200000f4:	2200      	movs	r2, #0
		setRowState(row, DRAIN);
		
		unsigned char columnPressed = readColumns ();
		if (columnPressed != 0xFF)
		{
			return keyValue[row][columnPressed];
200000f6:	009b      	lsls	r3, r3, #2
200000f8:	18c9      	adds	r1, r1, r3
200000fa:	1889      	adds	r1, r1, r2
200000fc:	7908      	ldrb	r0, [r1, #4]

		setRowState(row, OPEN);
	}
	
	return 0xFF;
}
200000fe:	bcf0      	pop	{r4, r5, r6, r7}
20000100:	46bb      	mov	fp, r7
20000102:	46b2      	mov	sl, r6
20000104:	46a9      	mov	r9, r5
20000106:	46a0      	mov	r8, r4
20000108:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (portD->inputData.pin11 == 0) { return 3; }
2000010a:	2508      	movs	r5, #8
2000010c:	4035      	ands	r5, r6
2000010e:	46ab      	mov	fp, r5
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000110:	2560      	movs	r5, #96	@ 0x60
20000112:	46a8      	mov	r8, r5
20000114:	2520      	movs	r5, #32
20000116:	46ac      	mov	ip, r5
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
20000118:	253f      	movs	r5, #63	@ 0x3f
	if (portD->inputData.pin10 == 0) { return 2; }
2000011a:	2404      	movs	r4, #4
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
2000011c:	46aa      	mov	sl, r5
2000011e:	2540      	movs	r5, #64	@ 0x40
	if (portD->inputData.pin9 == 0) { return 1; }
20000120:	380e      	subs	r0, #14
20000122:	4030      	ands	r0, r6
	if (portD->inputData.pin10 == 0) { return 2; }
20000124:	4034      	ands	r4, r6
	for (int row = 0; row < 4; row++) {
20000126:	2300      	movs	r3, #0
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
20000128:	46a9      	mov	r9, r5
	if (row == 0) 		{portD->outputData.pin12 = newState; }
2000012a:	2730      	movs	r7, #48	@ 0x30
2000012c:	2610      	movs	r6, #16
	if (portD->inputData.pin9 == 0) { return 1; }
2000012e:	2800      	cmp	r0, #0
20000130:	d00d      	beq.n	2000014e <keyb+0x7a>
	if (portD->inputData.pin10 == 0) { return 2; }
20000132:	2c00      	cmp	r4, #0
20000134:	d02a      	beq.n	2000018c <keyb+0xb8>
	if (portD->inputData.pin11 == 0) { return 3; }
20000136:	465d      	mov	r5, fp
20000138:	2d00      	cmp	r5, #0
2000013a:	d01d      	beq.n	20000178 <keyb+0xa4>
	if (row == 0) 		{portD->outputData.pin12 = newState; }
2000013c:	2b00      	cmp	r3, #0
2000013e:	d108      	bne.n	20000152 <keyb+0x7e>
20000140:	7d53      	ldrb	r3, [r2, #21]
20000142:	43bb      	bics	r3, r7
20000144:	4333      	orrs	r3, r6
20000146:	7553      	strb	r3, [r2, #21]
20000148:	2301      	movs	r3, #1
	if (portD->inputData.pin9 == 0) { return 1; }
2000014a:	2800      	cmp	r0, #0
2000014c:	d1f1      	bne.n	20000132 <keyb+0x5e>
2000014e:	2201      	movs	r2, #1
20000150:	e7d1      	b.n	200000f6 <keyb+0x22>
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000152:	2b01      	cmp	r3, #1
20000154:	d008      	beq.n	20000168 <keyb+0x94>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
20000156:	2b02      	cmp	r3, #2
20000158:	d010      	beq.n	2000017c <keyb+0xa8>
	else if (row == 3) 	{portD->outputData.pin15 = newState; }
2000015a:	2380      	movs	r3, #128	@ 0x80
2000015c:	7d51      	ldrb	r1, [r2, #21]
2000015e:	425b      	negs	r3, r3
20000160:	430b      	orrs	r3, r1
	return 0xFF;
20000162:	20ff      	movs	r0, #255	@ 0xff
	else if (row == 3) 	{portD->outputData.pin15 = newState; }
20000164:	7553      	strb	r3, [r2, #21]
	for (int row = 0; row < 4; row++) {
20000166:	e7ca      	b.n	200000fe <keyb+0x2a>
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000168:	4645      	mov	r5, r8
2000016a:	7d53      	ldrb	r3, [r2, #21]
2000016c:	43ab      	bics	r3, r5
2000016e:	4665      	mov	r5, ip
20000170:	432b      	orrs	r3, r5
20000172:	7553      	strb	r3, [r2, #21]
20000174:	2302      	movs	r3, #2
20000176:	e7da      	b.n	2000012e <keyb+0x5a>
20000178:	2203      	movs	r2, #3
2000017a:	e7bc      	b.n	200000f6 <keyb+0x22>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
2000017c:	4655      	mov	r5, sl
2000017e:	7d53      	ldrb	r3, [r2, #21]
20000180:	402b      	ands	r3, r5
20000182:	464d      	mov	r5, r9
20000184:	432b      	orrs	r3, r5
20000186:	7553      	strb	r3, [r2, #21]
	for (int row = 0; row < 4; row++) {
20000188:	2303      	movs	r3, #3
	if (portD->inputData.pin8 == 0) { return 0; }
2000018a:	e7d0      	b.n	2000012e <keyb+0x5a>
2000018c:	2202      	movs	r2, #2
2000018e:	e7b2      	b.n	200000f6 <keyb+0x22>
20000190:	20000250 	andcs	r0, r0, r0, asr r2

20000194 <out7Seg>:

void out7Seg (unsigned char c)
{
	if (c > 15)
	{
		portD->ODR_LOW = 0;
20000194:	4b04      	ldr	r3, [pc, #16]	@ (200001a8 <out7Seg+0x14>)
20000196:	2200      	movs	r2, #0
20000198:	6819      	ldr	r1, [r3, #0]
	if (c > 15)
2000019a:	280f      	cmp	r0, #15
2000019c:	d801      	bhi.n	200001a2 <out7Seg+0xe>
	}
	else
	{
		portD->ODR_LOW = segments[c];
2000019e:	181b      	adds	r3, r3, r0
200001a0:	7d1a      	ldrb	r2, [r3, #20]
		portD->ODR_LOW = 0;
200001a2:	750a      	strb	r2, [r1, #20]
	}
}
200001a4:	4770      	bx	lr
200001a6:	46c0      	nop			@ (mov r8, r8)
200001a8:	20000250 	andcs	r0, r0, r0, asr r2

200001ac <main>:

void main(void)
{
200001ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
200001ae:	46de      	mov	lr, fp
200001b0:	4657      	mov	r7, sl
200001b2:	464e      	mov	r6, r9
200001b4:	4645      	mov	r5, r8
200001b6:	b5e0      	push	{r5, r6, r7, lr}
	app_init();
200001b8:	f7ff ff2a 	bl	20000010 <app_init>
	if (portD->inputData.pin8 == 0) { return 0; }
200001bc:	2701      	movs	r7, #1
	if (portD->inputData.pin9 == 0) { return 1; }
200001be:	2102      	movs	r1, #2
	if (portD->inputData.pin10 == 0) { return 2; }
200001c0:	2504      	movs	r5, #4
	if (portD->inputData.pin11 == 0) { return 3; }
200001c2:	2608      	movs	r6, #8
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200001c4:	4b21      	ldr	r3, [pc, #132]	@ (2000024c <main+0xa0>)
200001c6:	681a      	ldr	r2, [r3, #0]
	if (portD->inputData.pin8 == 0) { return 0; }
200001c8:	7c53      	ldrb	r3, [r2, #17]
200001ca:	401f      	ands	r7, r3
	if (portD->inputData.pin9 == 0) { return 1; }
200001cc:	4019      	ands	r1, r3
	if (portD->inputData.pin10 == 0) { return 2; }
200001ce:	401d      	ands	r5, r3
	if (portD->inputData.pin11 == 0) { return 3; }
200001d0:	401e      	ands	r6, r3
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
200001d2:	2360      	movs	r3, #96	@ 0x60
200001d4:	4699      	mov	r9, r3
200001d6:	2320      	movs	r3, #32
200001d8:	4698      	mov	r8, r3
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
200001da:	233f      	movs	r3, #63	@ 0x3f
	if (portD->inputData.pin8 == 0) { return 0; }
200001dc:	46bb      	mov	fp, r7
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
200001de:	469a      	mov	sl, r3
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200001e0:	2010      	movs	r0, #16
200001e2:	7d53      	ldrb	r3, [r2, #21]
200001e4:	4383      	bics	r3, r0
200001e6:	7553      	strb	r3, [r2, #21]
	if (portD->inputData.pin8 == 0) { return 0; }
200001e8:	465b      	mov	r3, fp
200001ea:	2b00      	cmp	r3, #0
200001ec:	d0f8      	beq.n	200001e0 <main+0x34>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
200001ee:	2040      	movs	r0, #64	@ 0x40
	for (int row = 0; row < 4; row++) {
200001f0:	2300      	movs	r3, #0
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
200001f2:	4684      	mov	ip, r0
	if (row == 0) 		{portD->outputData.pin12 = newState; }
200001f4:	2430      	movs	r4, #48	@ 0x30
200001f6:	2010      	movs	r0, #16
	if (portD->inputData.pin9 == 0) { return 1; }
200001f8:	2900      	cmp	r1, #0
200001fa:	d0f1      	beq.n	200001e0 <main+0x34>
	if (portD->inputData.pin10 == 0) { return 2; }
200001fc:	2d00      	cmp	r5, #0
200001fe:	d0ef      	beq.n	200001e0 <main+0x34>
	if (portD->inputData.pin11 == 0) { return 3; }
20000200:	2e00      	cmp	r6, #0
20000202:	d0ed      	beq.n	200001e0 <main+0x34>
	if (row == 0) 		{portD->outputData.pin12 = newState; }
20000204:	2b00      	cmp	r3, #0
20000206:	d107      	bne.n	20000218 <main+0x6c>
20000208:	7d53      	ldrb	r3, [r2, #21]
2000020a:	43a3      	bics	r3, r4
2000020c:	4303      	orrs	r3, r0
2000020e:	7553      	strb	r3, [r2, #21]
20000210:	2301      	movs	r3, #1
	if (portD->inputData.pin9 == 0) { return 1; }
20000212:	2900      	cmp	r1, #0
20000214:	d1f2      	bne.n	200001fc <main+0x50>
20000216:	e7e3      	b.n	200001e0 <main+0x34>
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
20000218:	2b01      	cmp	r3, #1
2000021a:	d007      	beq.n	2000022c <main+0x80>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
2000021c:	2b02      	cmp	r3, #2
2000021e:	d00d      	beq.n	2000023c <main+0x90>
	else if (row == 3) 	{portD->outputData.pin15 = newState; }
20000220:	2380      	movs	r3, #128	@ 0x80
20000222:	7d50      	ldrb	r0, [r2, #21]
20000224:	425b      	negs	r3, r3
20000226:	4303      	orrs	r3, r0
20000228:	7553      	strb	r3, [r2, #21]
	if (c > 15)
2000022a:	e7d9      	b.n	200001e0 <main+0x34>
	else if (row == 1) 	{portD->outputData.pin13 = newState; }
2000022c:	464f      	mov	r7, r9
2000022e:	7d53      	ldrb	r3, [r2, #21]
20000230:	43bb      	bics	r3, r7
20000232:	4647      	mov	r7, r8
20000234:	433b      	orrs	r3, r7
20000236:	7553      	strb	r3, [r2, #21]
20000238:	2302      	movs	r3, #2
2000023a:	e7dd      	b.n	200001f8 <main+0x4c>
	else if (row == 2) 	{portD->outputData.pin14 = newState; }
2000023c:	4657      	mov	r7, sl
2000023e:	7d53      	ldrb	r3, [r2, #21]
20000240:	403b      	ands	r3, r7
20000242:	4667      	mov	r7, ip
20000244:	433b      	orrs	r3, r7
20000246:	7553      	strb	r3, [r2, #21]
	for (int row = 0; row < 4; row++) {
20000248:	2303      	movs	r3, #3
	if (portD->inputData.pin8 == 0) { return 0; }
2000024a:	e7d5      	b.n	200001f8 <main+0x4c>
2000024c:	20000250 	andcs	r0, r0, r0, asr r2

20000250 <portD>:
20000250:	40020c00 	andmi	r0, r2, r0, lsl #24

20000254 <keyValue>:
20000254:	0a030201 	beq	200c0a60 <segments+0xc07fc>
20000258:	0b060504 	bleq	20181670 <segments+0x18140c>
2000025c:	0c090807 	stceq	8, cr0, [r9], {7}
20000260:	0d0f000e 	stceq	0, cr0, [pc, #-56]	@ 20000230 <main+0x84>

20000264 <segments>:
20000264:	4f5b063f 	svcmi	0x005b063f
20000268:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
2000026c:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	@ 0xfffffe04
20000270:	71795e39 	cmnvc	r9, r9, lsr lr

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000774 	andeq	r0, r0, r4, ror r7
   4:	04010005 	streq	r0, [r1], #-5
   8:	00000000 	andeq	r0, r0, r0
   c:	00027d1a 	andeq	r7, r2, sl, lsl sp
  10:	01f60c00 	mvnseq	r0, r0, lsl #24
  14:	00d30000 	sbcseq	r0, r3, r0
  18:	01670000 	cmneq	r7, r0
	...
  24:	43120000 	tstmi	r2, #0
  28:	3c000000 	stccc	0, cr0, [r0], {-0}
  2c:	0c000000 	stceq	0, cr0, [r0], {-0}
  30:	0000003c 	andeq	r0, r0, ip, lsr r0
  34:	003c0c03 	eorseq	r0, ip, r3, lsl #24
  38:	00030000 	andeq	r0, r3, r0
  3c:	4407040d 	strmi	r0, [r7], #-1037	@ 0xfffffbf3
  40:	0d000001 	stceq	0, cr0, [r0, #-4]
  44:	009e0801 	addseq	r0, lr, r1, lsl #16
  48:	0b0e0000 	bleq	380050 <startup-0x1fc7ffb0>
  4c:	06000000 	streq	r0, [r0], -r0
  50:	0000260f 	andeq	r2, r0, pc, lsl #12
  54:	54030500 	strpl	r0, [r3], #-1280	@ 0xfffffb00
  58:	12200002 	eorne	r0, r0, #2
  5c:	00000043 	andeq	r0, r0, r3, asr #32
  60:	0000006b 	andeq	r0, r0, fp, rrx
  64:	00003c0c 	andeq	r3, r0, ip, lsl #24
  68:	0e000f00 	cdpeq	15, 0, cr0, cr0, cr0, {0}
  6c:	000001a1 	andeq	r0, r0, r1, lsr #3
  70:	005b0f0e 	subseq	r0, fp, lr, lsl #30
  74:	03050000 	movweq	r0, #20480	@ 0x5000
  78:	20000264 	andcs	r0, r0, r4, ror #4
  7c:	092b0405 	stmdbeq	fp!, {r0, r2, sl}
  80:	00000145 	andeq	r0, r0, r5, asr #2
  84:	00002001 	andeq	r2, r0, r1
  88:	00432d00 	subeq	r2, r3, r0, lsl #26
  8c:	00020000 	andeq	r0, r2, r0
  90:	00002501 	andeq	r2, r0, r1, lsl #10
  94:	00432e00 	subeq	r2, r3, r0, lsl #28
  98:	02020000 	andeq	r0, r2, #0
  9c:	00002a01 	andeq	r2, r0, r1, lsl #20
  a0:	00432f00 	subeq	r2, r3, r0, lsl #30
  a4:	04020000 	streq	r0, [r2], #-0
  a8:	00002f01 	andeq	r2, r0, r1, lsl #30
  ac:	00433000 	subeq	r3, r3, r0
  b0:	06020000 	streq	r0, [r2], -r0
  b4:	00003401 	andeq	r3, r0, r1, lsl #8
  b8:	00433100 	subeq	r3, r3, r0, lsl #2
  bc:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
  c0:	00003901 	andeq	r3, r0, r1, lsl #18
  c4:	00433200 	subeq	r3, r3, r0, lsl #4
  c8:	0a020000 	beq	800d0 <startup-0x1ff7ff30>
  cc:	00003e01 	andeq	r3, r0, r1, lsl #28
  d0:	00433300 	subeq	r3, r3, r0, lsl #6
  d4:	0c020000 	stceq	0, cr0, [r2], {-0}
  d8:	00004301 	andeq	r4, r0, r1, lsl #6
  dc:	00433400 	subeq	r3, r3, r0, lsl #8
  e0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
  e4:	00004801 	andeq	r4, r0, r1, lsl #16
  e8:	00433500 	subeq	r3, r3, r0, lsl #10
  ec:	10020000 	andne	r0, r2, r0
  f0:	00004d01 	andeq	r4, r0, r1, lsl #26
  f4:	00433600 	subeq	r3, r3, r0, lsl #12
  f8:	12020000 	andne	r0, r2, #0
  fc:	0002f201 	andeq	pc, r2, r1, lsl #4
 100:	00433700 	subeq	r3, r3, r0, lsl #14
 104:	14020000 	strne	r0, [r2], #-0
 108:	0002f801 	andeq	pc, r2, r1, lsl #16
 10c:	00433800 	subeq	r3, r3, r0, lsl #16
 110:	16020000 	strne	r0, [r2], -r0
 114:	0002fe01 	andeq	pc, r2, r1, lsl #28
 118:	00433900 	subeq	r3, r3, r0, lsl #18
 11c:	18020000 	stmdane	r2, {}	@ <UNPREDICTABLE>
 120:	00030401 	andeq	r0, r3, r1, lsl #8
 124:	00433a00 	subeq	r3, r3, r0, lsl #20
 128:	1a020000 	bne	80130 <startup-0x1ff7fed0>
 12c:	00030a01 	andeq	r0, r3, r1, lsl #20
 130:	00433b00 	subeq	r3, r3, r0, lsl #22
 134:	1c020000 	stcne	0, cr0, [r2], {-0}
 138:	00031001 	andeq	r1, r3, r1
 13c:	00433c00 	subeq	r3, r3, r0, lsl #24
 140:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
 144:	03310600 	teqeq	r1, #0, 12
 148:	013e0000 	teqeq	lr, r0
 14c:	0000007c 	andeq	r0, r0, ip, ror r0
 150:	09400205 	stmdbeq	r0, {r0, r2, r9}^
 154:	00000219 	andeq	r0, r0, r9, lsl r2
 158:	00002001 	andeq	r2, r0, r1
 15c:	00434200 	subeq	r4, r3, r0, lsl #4
 160:	00010000 	andeq	r0, r1, r0
 164:	00002501 	andeq	r2, r0, r1, lsl #10
 168:	00434300 	subeq	r4, r3, r0, lsl #6
 16c:	01010000 	mrseq	r0, (UNDEF: 1)
 170:	00002a01 	andeq	r2, r0, r1, lsl #20
 174:	00434400 	subeq	r4, r3, r0, lsl #8
 178:	02010000 	andeq	r0, r1, #0
 17c:	00002f01 	andeq	r2, r0, r1, lsl #30
 180:	00434500 	subeq	r4, r3, r0, lsl #10
 184:	03010000 	movweq	r0, #4096	@ 0x1000
 188:	00003401 	andeq	r3, r0, r1, lsl #8
 18c:	00434600 	subeq	r4, r3, r0, lsl #12
 190:	04010000 	streq	r0, [r1], #-0
 194:	00003901 	andeq	r3, r0, r1, lsl #18
 198:	00434700 	subeq	r4, r3, r0, lsl #14
 19c:	05010000 	streq	r0, [r1, #-0]
 1a0:	00003e01 	andeq	r3, r0, r1, lsl #28
 1a4:	00434800 	subeq	r4, r3, r0, lsl #16
 1a8:	06010000 	streq	r0, [r1], -r0
 1ac:	00004301 	andeq	r4, r0, r1, lsl #6
 1b0:	00434900 	subeq	r4, r3, r0, lsl #18
 1b4:	07010000 	streq	r0, [r1, -r0]
 1b8:	00004801 	andeq	r4, r0, r1, lsl #16
 1bc:	00434a00 	subeq	r4, r3, r0, lsl #20
 1c0:	08010000 	stmdaeq	r1, {}	@ <UNPREDICTABLE>
 1c4:	00004d01 	andeq	r4, r0, r1, lsl #26
 1c8:	00434b00 	subeq	r4, r3, r0, lsl #22
 1cc:	09010000 	stmdbeq	r1, {}	@ <UNPREDICTABLE>
 1d0:	0002f201 	andeq	pc, r2, r1, lsl #4
 1d4:	00434c00 	subeq	r4, r3, r0, lsl #24
 1d8:	0a010000 	beq	401e0 <startup-0x1ffbfe20>
 1dc:	0002f801 	andeq	pc, r2, r1, lsl #16
 1e0:	00434d00 	subeq	r4, r3, r0, lsl #26
 1e4:	0b010000 	bleq	401ec <startup-0x1ffbfe14>
 1e8:	0002fe01 	andeq	pc, r2, r1, lsl #28
 1ec:	00434e00 	subeq	r4, r3, r0, lsl #28
 1f0:	0c010000 	stceq	0, cr0, [r1], {-0}
 1f4:	00030401 	andeq	r0, r3, r1, lsl #8
 1f8:	00434f00 	subeq	r4, r3, r0, lsl #30
 1fc:	0d010000 	stceq	0, cr0, [r1, #-0]
 200:	00030a01 	andeq	r0, r3, r1, lsl #20
 204:	00435000 	subeq	r5, r3, r0
 208:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
 20c:	00031001 	andeq	r1, r3, r1
 210:	00435100 	subeq	r5, r3, r0, lsl #2
 214:	0f010000 	svceq	0x00010000
 218:	018c0600 	orreq	r0, ip, r0, lsl #12
 21c:	01530000 	cmpeq	r3, r0
 220:	00000150 	andeq	r0, r0, r0, asr r1
 224:	00006006 	andeq	r6, r0, r6
 228:	45175500 	ldrmi	r5, [r7, #-1280]	@ 0xfffffb00
 22c:	06000001 	streq	r0, [r0], -r1
 230:	00000052 	andeq	r0, r0, r2, asr r0
 234:	02191659 	andseq	r1, r9, #93323264	@ 0x5900000
 238:	22060000 	andcs	r0, r6, #0
 23c:	5d000003 	stcpl	0, cr0, [r0, #-12]
 240:	00014517 	andeq	r4, r1, r7, lsl r5
 244:	007f0600 	rsbseq	r0, pc, r0, lsl #12
 248:	17630000 	strbne	r0, [r3, -r0]!
 24c:	00000145 	andeq	r0, r0, r5, asr #2
 250:	036e0405 	cmneq	lr, #83886080	@ 0x5000000
 254:	00000271 	andeq	r0, r0, r1, ror r2
 258:	00017603 	andeq	r7, r1, r3, lsl #12
 25c:	711b6e00 	tstvc	fp, r0, lsl #28
 260:	00000002 	andeq	r0, r0, r2
 264:	00016b03 	andeq	r6, r1, r3, lsl #22
 268:	71266e00 			@ <UNDEFINED> instruction: 0x71266e00
 26c:	02000002 	andeq	r0, r0, #2
 270:	07020d00 	streq	r0, [r2, -r0, lsl #26]
 274:	0000013e 	andeq	r0, r0, lr, lsr r1
 278:	9b6c0407 	blls	1b0129c <startup-0x1e4fed64>
 27c:	04000002 	streq	r0, [r0], #-2
 280:	00000098 	muleq	r0, r8, r0
 284:	003c106d 	eorseq	r1, ip, sp, rrx
 288:	50080000 	andpl	r0, r8, r0
 28c:	04000002 	streq	r0, [r0], #-2
 290:	000001e2 	andeq	r0, r0, r2, ror #3
 294:	02240f6f 	eoreq	r0, r4, #444	@ 0x1bc
 298:	05000000 	streq	r0, [r0, #-0]
 29c:	bc037402 	cfstrslt	mvf7, [r3], {2}
 2a0:	03000002 	movweq	r0, #2
 2a4:	00000000 	andeq	r0, r0, r0
 2a8:	00431a74 	subeq	r1, r3, r4, ror sl
 2ac:	03000000 	movweq	r0, #0
 2b0:	00000180 	andeq	r0, r0, r0, lsl #3
 2b4:	00432674 	subeq	r2, r3, r4, ror r6
 2b8:	00010000 	andeq	r0, r1, r0
 2bc:	df720207 	svcle	0x00720207
 2c0:	04000002 	streq	r0, [r0], #-2
 2c4:	00000091 	muleq	r0, r1, r0
 2c8:	02711273 	rsbseq	r1, r1, #805306375	@ 0x30000007
 2cc:	9b080000 	blls	2002d4 <startup-0x1fdffd2c>
 2d0:	04000002 	streq	r0, [r0], #-2
 2d4:	00000157 	andeq	r0, r0, r7, asr r1
 2d8:	022f1175 	eoreq	r1, pc, #1073741853	@ 0x4000001d
 2dc:	05000000 	streq	r0, [r0, #-0]
 2e0:	00037a04 	andeq	r7, r3, r4, lsl #20
 2e4:	03000003 	movweq	r0, #3
 2e8:	00000316 	andeq	r0, r0, r6, lsl r3
 2ec:	02711b7a 	rsbseq	r1, r1, #124928	@ 0x1e800
 2f0:	03000000 	movweq	r0, #0
 2f4:	000000c6 	andeq	r0, r0, r6, asr #1
 2f8:	0271287a 	rsbseq	r2, r1, #7995392	@ 0x7a0000
 2fc:	00020000 	andeq	r0, r2, r0
 300:	23780407 	cmncs	r8, #117440512	@ 0x7000000
 304:	04000003 	streq	r0, [r0], #-3
 308:	000001aa 	andeq	r0, r0, sl, lsr #3
 30c:	003c1079 	eorseq	r1, ip, r9, ror r0
 310:	df080000 	svcle	0x00080000
 314:	04000002 	streq	r0, [r0], #-2
 318:	00000271 	andeq	r0, r0, r1, ror r2
 31c:	023a127b 	eorseq	r1, sl, #-1342177273	@ 0xb0000007
 320:	05000000 	streq	r0, [r0, #-0]
 324:	44038004 	strmi	r8, [r3], #-4
 328:	03000003 	movweq	r0, #3
 32c:	00000075 	andeq	r0, r0, r5, ror r0
 330:	02711b80 	rsbseq	r1, r1, #128, 22	@ 0x20000
 334:	03000000 	movweq	r0, #0
 338:	000001cf 	andeq	r0, r0, pc, asr #3
 33c:	02712680 	rsbseq	r2, r1, #128, 12	@ 0x8000000
 340:	00020000 	andeq	r0, r2, r0
 344:	677e0407 	ldrbvs	r0, [lr, -r7, lsl #8]!
 348:	04000003 	streq	r0, [r0], #-3
 34c:	0000026b 	andeq	r0, r0, fp, ror #4
 350:	003c107f 	eorseq	r1, ip, pc, ror r0
 354:	23080000 	movwcs	r0, #32768	@ 0x8000
 358:	04000003 	streq	r0, [r0], #-3
 35c:	000001e7 	andeq	r0, r0, r7, ror #3
 360:	02451581 	subeq	r1, r5, #541065216	@ 0x20400000
 364:	05000000 	streq	r0, [r0, #-0]
 368:	88038602 	stmdahi	r3, {r1, r9, sl, pc}
 36c:	03000003 	movweq	r0, #3
 370:	000002cd 	andeq	r0, r0, sp, asr #5
 374:	00431a86 	subeq	r1, r3, r6, lsl #21
 378:	03000000 	movweq	r0, #0
 37c:	0000006c 	andeq	r0, r0, ip, rrx
 380:	00432386 	subeq	r2, r3, r6, lsl #7
 384:	00010000 	andeq	r0, r1, r0
 388:	aa840207 	bge	fe100bac <segments+0xde100948>
 38c:	13000003 	movwne	r0, #3
 390:	00524449 	subseq	r4, r2, r9, asr #8
 394:	00027185 	andeq	r7, r2, r5, lsl #3
 398:	03670800 	cmneq	r7, #0, 16
 39c:	da040000 	ble	1003a4 <startup-0x1feffc5c>
 3a0:	87000002 	strhi	r0, [r0, -r2]
 3a4:	00021910 	andeq	r1, r2, r0, lsl r9
 3a8:	02050000 	andeq	r0, r5, #0
 3ac:	03cb038e 	biceq	r0, fp, #939524098	@ 0x38000002
 3b0:	b7030000 	strlt	r0, [r3, -r0]
 3b4:	8e000001 	cdphi	0, 0, cr0, cr0, cr1, {0}
 3b8:	0000431a 	andeq	r4, r0, sl, lsl r3
 3bc:	bd030000 	stclt	0, cr0, [r3, #-0]
 3c0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
 3c4:	00004323 	andeq	r4, r0, r3, lsr #6
 3c8:	07000100 	streq	r0, [r0, -r0, lsl #2]
 3cc:	03ed8c02 	mvneq	r8, #512	@ 0x200
 3d0:	4f130000 	svcmi	0x00130000
 3d4:	8d005244 	sfmhi	f5, 4, [r0, #-272]	@ 0xfffffef0
 3d8:	00000271 	andeq	r0, r0, r1, ror r2
 3dc:	0003aa08 	andeq	sl, r3, r8, lsl #20
 3e0:	01c40400 	biceq	r0, r4, r0, lsl #8
 3e4:	108f0000 	addne	r0, pc, r0
 3e8:	00000219 	andeq	r0, r0, r9, lsl r2
 3ec:	69180500 	ldmdbvs	r8, {r8, sl}
 3f0:	00042609 	andeq	r2, r4, r9, lsl #12
 3f4:	02780900 	rsbseq	r0, r8, #0, 18
 3f8:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
 3fc:	000002bc 			@ <UNDEFINED> instruction: 0x000002bc
 400:	03000904 	movweq	r0, #2308	@ 0x904
 404:	09080000 	stmdbeq	r8, {}	@ <UNPREDICTABLE>
 408:	00000344 	andeq	r0, r0, r4, asr #6
 40c:	0388090c 	orreq	r0, r8, #12, 18	@ 0x30000
 410:	03100000 	tsteq	r0, #0
 414:	000000ac 	andeq	r0, r0, ip, lsr #1
 418:	0271118a 	rsbseq	r1, r1, #-2147483614	@ 0x80000022
 41c:	09120000 	ldmdbeq	r2, {}	@ <UNPREDICTABLE>
 420:	000003cb 	andeq	r0, r0, fp, asr #7
 424:	bf060014 	svclt	0x00060014
 428:	92000001 	andls	r0, r0, #1
 42c:	0003ed01 	andeq	lr, r3, r1, lsl #26
 430:	01510e00 	cmpeq	r1, r0, lsl #28
 434:	07950000 	ldreq	r0, [r5, r0]
 438:	00000442 	andeq	r0, r0, r2, asr #8
 43c:	02500305 	subseq	r0, r0, #335544320	@ 0x14000000
 440:	041b2000 	ldreq	r2, [fp], #-0
 444:	00000426 	andeq	r0, r0, r6, lsr #8
 448:	0001b21c 	andeq	fp, r1, ip, lsl r2
 44c:	06e70100 	strbteq	r0, [r7], r0, lsl #2
 450:	200001ac 	andcs	r0, r0, ip, lsr #3
 454:	000000a4 	andeq	r0, r0, r4, lsr #1
 458:	05679c01 	strbeq	r9, [r7, #-3073]!	@ 0xfffff3ff
 45c:	7b0f0000 	blvc	3c0464 <startup-0x1fc3fb9c>
 460:	e0000005 	and	r0, r0, r5
 464:	02200001 	eoreq	r0, r0, #1
 468:	000000d5 	ldrdeq	r0, [r0], -r5
 46c:	000536ec 	andeq	r3, r5, ip, ror #13
 470:	058c0a00 	streq	r0, [ip, #2560]	@ 0xa00
 474:	00d50000 	sbcseq	r0, r5, r0
 478:	8d0b0000 	stchi	0, cr0, [fp, #-0]
 47c:	16000005 	strne	r0, [r0], -r5
 480:	0c000000 	stceq	0, cr0, [r0], {-0}
 484:	0a000000 	beq	48c <startup-0x1ffffb74>
 488:	00000599 	muleq	r0, r9, r5
 48c:	000000e5 	andeq	r0, r0, r5, ror #1
 490:	00059a0b 	andeq	r9, r5, fp, lsl #20
 494:	00003e00 	andeq	r3, r0, r0, lsl #28
 498:	00003a00 	andeq	r3, r0, r0, lsl #20
 49c:	05b01400 	ldreq	r1, [r0, #1024]!	@ 0x400
 4a0:	01e80000 	mvneq	r0, r0
 4a4:	08022000 	stmdaeq	r2, {sp}
 4a8:	cf000001 	svcgt	0x00000001
 4ac:	0005bd0f 	andeq	fp, r5, pc, lsl #26
 4b0:	0001e000 	andeq	lr, r1, r0
 4b4:	01250520 			@ <UNDEFINED> instruction: 0x01250520
 4b8:	dacd0000 	ble	ff3404c0 <segments+0xdf34025c>
 4bc:	02000004 	andeq	r0, r0, #4
 4c0:	000005d2 	ldrdeq	r0, [r0], -r2
 4c4:	0000005a 	andeq	r0, r0, sl, asr r0
 4c8:	00000052 	andeq	r0, r0, r2, asr r0
 4cc:	0005c702 	andeq	ip, r5, r2, lsl #14
 4d0:	00008000 	andeq	r8, r0, r0
 4d4:	00007800 	andeq	r7, r0, r0, lsl #16
 4d8:	bd100000 	ldclt	0, cr0, [r0, #-0]
 4dc:	04000005 	streq	r0, [r0], #-5
 4e0:	03200002 			@ <UNDEFINED> instruction: 0x03200002
 4e4:	00000140 	andeq	r0, r0, r0, asr #2
 4e8:	d20203d5 	andle	r0, r2, #1409286147	@ 0x54000003
 4ec:	a6000005 	strge	r0, [r0], -r5
 4f0:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
 4f4:	02000000 	andeq	r0, r0, #0
 4f8:	000005c7 	andeq	r0, r0, r7, asr #11
 4fc:	000000cc 	andeq	r0, r0, ip, asr #1
 500:	000000c4 	andeq	r0, r0, r4, asr #1
 504:	0005bd11 	andeq	fp, r5, r1, lsl sp
 508:	00022000 	andeq	r2, r2, r0
 50c:	02200020 	eoreq	r0, r0, #32
 510:	000a2000 	andeq	r2, sl, r0
 514:	02b50000 	adcseq	r0, r5, #0
 518:	000005d2 	ldrdeq	r0, [r0], -r2
 51c:	000000e8 	andeq	r0, r0, r8, ror #1
 520:	000000e6 	andeq	r0, r0, r6, ror #1
 524:	0005c702 	andeq	ip, r5, r2, lsl #14
 528:	0000f400 	andeq	pc, r0, r0, lsl #8
 52c:	0000f200 	andeq	pc, r0, r0, lsl #4
 530:	00000000 	andeq	r0, r0, r0
 534:	671d0000 	ldrvs	r0, [sp, -r0]
 538:	2a000005 	bcs	554 <startup-0x1ffffaac>
 53c:	04200002 	strteq	r0, [r0], #-2
 540:	2000022a 	andcs	r0, r0, sl, lsr #4
 544:	00000002 	andeq	r0, r0, r2
 548:	5d03ec01 	stcpl	12, cr14, [r3, #-4]
 54c:	02000005 	andeq	r0, r0, #5
 550:	00000571 	andeq	r0, r0, r1, ror r5
 554:	00000100 	andeq	r0, r0, r0, lsl #2
 558:	000000fe 	strdeq	r0, [r0], -lr
 55c:	01bc1e00 			@ <UNDEFINED> instruction: 0x01bc1e00
 560:	05df2000 	ldrbeq	r2, [pc]	@ 568 <startup-0x1ffffa98>
 564:	15000000 	strne	r0, [r0, #-0]
 568:	00000199 	muleq	r0, r9, r1
 56c:	00057bdb 	ldrdeq	r7, [r5], -fp
 570:	00631600 	rsbeq	r1, r3, r0, lsl #12
 574:	00431ddb 	ldrdeq	r1, [r3], #-219	@ 0xffffff25
 578:	1f000000 	svcne	0x00000000
 57c:	000002d5 	ldrdeq	r0, [r0], -r5
 580:	430fca01 	movwmi	ip, #64001	@ 0xfa01
 584:	01000000 	mrseq	r0, (UNDEF: 0)
 588:	000005a9 	andeq	r0, r0, r9, lsr #11
 58c:	6f722017 	svcvs	0x00722017
 590:	cc010077 	stcgt	0, cr0, [r1], {119}	@ 0x77
 594:	0005a90b 	andeq	sl, r5, fp, lsl #18
 598:	e4211700 	strt	r1, [r1], #-1792	@ 0xfffff900
 59c:	01000002 	tsteq	r0, r2
 5a0:	004311cf 	subeq	r1, r3, pc, asr #3
 5a4:	00000000 	andeq	r0, r0, r0
 5a8:	05042200 	streq	r2, [r4, #-512]	@ 0xfffffe00
 5ac:	00746e69 	rsbseq	r6, r4, r9, ror #28
 5b0:	00033f23 	andeq	r3, r3, r3, lsr #30
 5b4:	0fbe0100 	svceq	0x00be0100
 5b8:	00000043 	andeq	r0, r0, r3, asr #32
 5bc:	00141501 	andseq	r1, r4, r1, lsl #10
 5c0:	dfb50000 	svcle	0x00b50000
 5c4:	16000005 	strne	r0, [r0], -r5
 5c8:	00776f72 	rsbseq	r6, r7, r2, ror pc
 5cc:	05a917b5 	streq	r1, [r9, #1973]!	@ 0x7b5
 5d0:	62240000 	eorvs	r0, r4, #0
 5d4:	01000001 	tsteq	r0, r1
 5d8:	05a920b5 	streq	r2, [r9, #181]!	@ 0xb5
 5dc:	18000000 	stmdane	r0, {}	@ <UNPREDICTABLE>
 5e0:	000000b4 	strheq	r0, [r0], -r4
 5e4:	00001097 	muleq	r0, r7, r0
 5e8:	00002820 	andeq	r2, r0, r0, lsr #16
 5ec:	189c0100 	ldmne	ip, {r8}
 5f0:	000001da 	ldrdeq	r0, [r0], -sl
 5f4:	00000023 	andeq	r0, r0, r3, lsr #32
 5f8:	00000a20 	andeq	r0, r0, r0, lsr #20
 5fc:	199c0100 	ldmibne	ip, {r8}
 600:	000005bd 			@ <UNDEFINED> instruction: 0x000005bd
 604:	20000038 	andcs	r0, r0, r8, lsr r0
 608:	00000068 	andeq	r0, r0, r8, rrx
 60c:	065b9c01 	ldrbeq	r9, [fp], -r1, lsl #24
 610:	c7020000 	strgt	r0, [r2, -r0]
 614:	1b000005 	blne	630 <startup-0x1ffff9d0>
 618:	0b000001 	bleq	624 <startup-0x1ffff9dc>
 61c:	02000001 	andeq	r0, r0, #1
 620:	000005d2 	ldrdeq	r0, [r0], -r2
 624:	00000164 	andeq	r0, r0, r4, ror #2
 628:	00000154 	andeq	r0, r0, r4, asr r1
 62c:	0005bd11 	andeq	fp, r5, r1, lsl sp
 630:	00005a00 	andeq	r5, r0, r0, lsl #20
 634:	005a0020 	subseq	r0, sl, r0, lsr #32
 638:	00142000 	andseq	r2, r4, r0
 63c:	02b50000 	adcseq	r0, r5, #0
 640:	000005d2 	ldrdeq	r0, [r0], -r2
 644:	000001a2 	andeq	r0, r0, r2, lsr #3
 648:	0000019e 	muleq	r0, lr, r1
 64c:	0005c702 	andeq	ip, r5, r2, lsl #14
 650:	0001b900 	andeq	fp, r1, r0, lsl #18
 654:	0001b500 	andeq	fp, r1, r0, lsl #10
 658:	25000000 	strcs	r0, [r0, #-0]
 65c:	000005b0 			@ <UNDEFINED> instruction: 0x000005b0
 660:	200000a0 	andcs	r0, r0, r0, lsr #1
 664:	00000034 	andeq	r0, r0, r4, lsr r0
 668:	7b199c01 	blvc	667674 <startup-0x1f99898c>
 66c:	d4000005 	strle	r0, [r0], #-5
 670:	c0200000 	eorgt	r0, r0, r0
 674:	01000000 	mrseq	r0, (UNDEF: 0)
 678:	00073f9c 	muleq	r7, ip, pc	@ <UNPREDICTABLE>
 67c:	058c0a00 	streq	r0, [ip, #2560]	@ 0xa00
 680:	000c0000 	andeq	r0, ip, r0
 684:	8d0b0000 	stchi	0, cr0, [fp, #-0]
 688:	d8000005 	stmdale	r0, {r0, r2}
 68c:	cc000001 	stcgt	0, cr0, [r0], {1}
 690:	0a000001 	beq	69c <startup-0x1ffff964>
 694:	00000599 	muleq	r0, r9, r5
 698:	00000024 	andeq	r0, r0, r4, lsr #32
 69c:	00059a0b 	andeq	r9, r5, fp, lsl #20
 6a0:	00020e00 	andeq	r0, r2, r0, lsl #28
 6a4:	00020800 	andeq	r0, r2, r0, lsl #16
 6a8:	05bd0f00 	ldreq	r0, [sp, #3840]!	@ 0xf00
 6ac:	00ea0000 	rsceq	r0, sl, r0
 6b0:	56022000 	strpl	r2, [r2], -r0
 6b4:	cd000000 	stcgt	0, cr0, [r0, #-0]
 6b8:	000006d7 	ldrdeq	r0, [r0], -r7
 6bc:	0005d202 	andeq	sp, r5, r2, lsl #4
 6c0:	00023100 	andeq	r3, r2, r0, lsl #2
 6c4:	00022900 	andeq	r2, r2, r0, lsl #18
 6c8:	05c70200 	strbeq	r0, [r7, #512]	@ 0x200
 6cc:	025a0000 	subseq	r0, sl, #0
 6d0:	02520000 	subseq	r0, r2, #0
 6d4:	14000000 	strne	r0, [r0], #-0
 6d8:	000005b0 			@ <UNDEFINED> instruction: 0x000005b0
 6dc:	200000ee 	andcs	r0, r0, lr, ror #1
 6e0:	00007a02 	andeq	r7, r0, r2, lsl #20
 6e4:	bd10cf00 	ldclt	15, cr12, [r0, #-0]
 6e8:	3c000005 	stccc	0, cr0, [r0], {5}
 6ec:	03200001 			@ <UNDEFINED> instruction: 0x03200001
 6f0:	000000a2 	andeq	r0, r0, r2, lsr #1
 6f4:	d20203d5 	andle	r0, r2, #1409286147	@ 0x54000003
 6f8:	83000005 	movwhi	r0, #5
 6fc:	7b000002 	blvc	70c <startup-0x1ffff8f4>
 700:	02000002 	andeq	r0, r0, #2
 704:	000005c7 	andeq	r0, r0, r7, asr #11
 708:	000002a9 	andeq	r0, r0, r9, lsr #5
 70c:	000002a1 	andeq	r0, r0, r1, lsr #5
 710:	0005bd10 	andeq	fp, r5, r0, lsl sp
 714:	00015a00 	andeq	r5, r1, r0, lsl #20
 718:	00c90020 	sbceq	r0, r9, r0, lsr #32
 71c:	06b50000 	ldrteq	r0, [r5], r0
 720:	0005d202 	andeq	sp, r5, r2, lsl #4
 724:	0002c500 	andeq	ip, r2, r0, lsl #10
 728:	0002c300 	andeq	ip, r2, r0, lsl #6
 72c:	05c70200 	strbeq	r0, [r7, #512]	@ 0x200
 730:	02d10000 	sbcseq	r0, r1, #0
 734:	02cf0000 	sbceq	r0, pc, #0
 738:	00000000 	andeq	r0, r0, r0
 73c:	26000000 	strcs	r0, [r0], -r0
 740:	00000567 	andeq	r0, r0, r7, ror #10
 744:	20000194 	mulcs	r0, r4, r1
 748:	00000018 	andeq	r0, r0, r8, lsl r0
 74c:	71279c01 			@ <UNDEFINED> instruction: 0x71279c01
 750:	01000005 	tsteq	r0, r5
 754:	05671150 	strbeq	r1, [r7, #-336]!	@ 0xfffffeb0
 758:	019e0000 	orrseq	r0, lr, r0
 75c:	9e002000 	cdpls	0, 0, cr2, cr0, cr0, {0}
 760:	04200001 	strteq	r0, [r0], #-1
 764:	db000000 	blle	76c <startup-0x1ffff894>
 768:	00057102 	andeq	r7, r5, r2, lsl #2
 76c:	0002dd00 	andeq	sp, r2, r0, lsl #26
 770:	0002db00 	andeq	sp, r2, r0, lsl #22
 774:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	03000d01 	movweq	r0, #3329	@ 0xd01
   4:	01213a0e 			@ <UNDEFINED> instruction: 0x01213a0e
   8:	21390b3b 	teqcs	r9, fp, lsr fp
   c:	0d134910 	vldreq.16	s8, [r3, #-32]	@ 0xffffffe0	@ <UNPREDICTABLE>
  10:	000b6b0b 	andeq	r6, fp, fp, lsl #22
  14:	00050200 	andeq	r0, r5, r0, lsl #4
  18:	17021331 	smladxne	r2, r1, r3, r1
  1c:	001742b7 			@ <UNDEFINED> instruction: 0x001742b7
  20:	000d0300 	andeq	r0, sp, r0, lsl #6
  24:	213a0e03 	teqcs	sl, r3, lsl #28
  28:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  38:	3b01213a 	blcc	48528 <startup-0x1ffb7ad8>
  3c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  40:	05000013 	streq	r0, [r0, #-19]	@ 0xffffffed
  44:	0b0b0113 	bleq	2c0498 <startup-0x1fd3fb68>
  48:	3b01213a 	blcc	48538 <startup-0x1ffb7ac8>
  4c:	010b390b 	tsteq	fp, fp, lsl #18
  50:	06000013 			@ <UNDEFINED> instruction: 0x06000013
  54:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  58:	3b01213a 	blcc	48548 <startup-0x1ffb7ab8>
  5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  60:	07000013 	smladeq	r0, r3, r0, r0
  64:	0b0b0117 	bleq	2c04c8 <startup-0x1fd3fb38>
  68:	3b01213a 	blcc	48558 <startup-0x1ffb7aa8>
  6c:	0221390b 	eoreq	r3, r1, #180224	@ 0x2c000
  70:	00001301 	andeq	r1, r0, r1, lsl #6
  74:	49000d08 	stmdbmi	r0, {r3, r8, sl, fp}
  78:	09000013 	stmdbeq	r0, {r0, r1, r4}
  7c:	1349000d 	movtne	r0, #36877	@ 0x900d
  80:	00000b38 	andeq	r0, r0, r8, lsr fp
  84:	31010b0a 	tstcc	r1, sl, lsl #22
  88:	00175513 	andseq	r5, r7, r3, lsl r5
  8c:	00340b00 	eorseq	r0, r4, r0, lsl #22
  90:	17021331 	smladxne	r2, r1, r3, r1
  94:	001742b7 			@ <UNDEFINED> instruction: 0x001742b7
  98:	00210c00 	eoreq	r0, r1, r0, lsl #24
  9c:	0b2f1349 	bleq	bc4dc8 <startup-0x1f43b238>
  a0:	240d0000 	strcs	r0, [sp], #-0
  a4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  a8:	000e030b 	andeq	r0, lr, fp, lsl #6
  ac:	00340e00 	eorseq	r0, r4, r0, lsl #28
  b0:	213a0e03 	teqcs	sl, r3, lsl #28
  b4:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
  b8:	3f13490b 	svccc	0x0013490b
  bc:	00180219 	andseq	r0, r8, r9, lsl r2
  c0:	011d0f00 	tsteq	sp, r0, lsl #30
  c4:	01521331 	cmpeq	r2, r1, lsr r3
  c8:	550b42b8 	strpl	r4, [fp, #-696]	@ 0xfffffd48
  cc:	01215817 			@ <UNDEFINED> instruction: 0x01215817
  d0:	21570b59 	cmpcs	r7, r9, asr fp
  d4:	00130103 	andseq	r0, r3, r3, lsl #2
  d8:	011d1000 	tsteq	sp, r0
  dc:	01521331 	cmpeq	r2, r1, lsr r3
  e0:	550b42b8 	strpl	r4, [fp, #-696]	@ 0xfffffd48
  e4:	01215817 			@ <UNDEFINED> instruction: 0x01215817
  e8:	0b570b59 	bleq	15c2e54 <startup-0x1ea3d1ac>
  ec:	1d110000 	ldcne	0, cr0, [r1, #-0]
  f0:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
  f4:	0b42b801 	bleq	10ae100 <startup-0x1ef51f00>
  f8:	06120111 			@ <UNDEFINED> instruction: 0x06120111
  fc:	59012158 	stmdbpl	r1, {r3, r4, r6, r8, sp}
 100:	0621570b 	strteq	r5, [r1], -fp, lsl #14
 104:	01120000 	tsteq	r2, r0
 108:	01134901 	tsteq	r3, r1, lsl #18
 10c:	13000013 	movwne	r0, #19
 110:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 114:	3b01213a 	blcc	48604 <startup-0x1ffb79fc>
 118:	1221390b 	eorne	r3, r1, #180224	@ 0x2c000
 11c:	00001349 	andeq	r1, r0, r9, asr #6
 120:	31001d14 	tstcc	r0, r4, lsl sp
 124:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 128:	17550b42 	ldrbne	r0, [r5, -r2, asr #22]
 12c:	59012158 	stmdbpl	r1, {r3, r4, r6, r8, sp}
 130:	2121570b 			@ <UNDEFINED> instruction: 0x2121570b
 134:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
 138:	03193f01 	tsteq	r9, #1, 30
 13c:	01213a0e 			@ <UNDEFINED> instruction: 0x01213a0e
 140:	21390b3b 	teqcs	r9, fp, lsr fp
 144:	20192706 	andscs	r2, r9, r6, lsl #14
 148:	13010121 	movwne	r0, #4385	@ 0x1121
 14c:	05160000 	ldreq	r0, [r6, #-0]
 150:	3a080300 	bcc	200d58 <startup-0x1fdff2a8>
 154:	0b3b0121 	bleq	ec05e0 <startup-0x1f13fa20>
 158:	13490b39 	movtne	r0, #39737	@ 0x9b39
 15c:	0b170000 	bleq	5c0164 <startup-0x1fa3fe9c>
 160:	18000001 	stmdane	r0, {r0}
 164:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	@ <UNPREDICTABLE>
 168:	213a0e03 	teqcs	sl, r3, lsl #28
 16c:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
 170:	19270621 	stmdbne	r7!, {r0, r5, r9, sl}
 174:	06120111 			@ <UNDEFINED> instruction: 0x06120111
 178:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 17c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
 180:	11133101 	tstne	r3, r1, lsl #2
 184:	40061201 	andmi	r1, r6, r1, lsl #4
 188:	01197a18 	tsteq	r9, r8, lsl sl
 18c:	1a000013 	bne	1e0 <startup-0x1ffffe20>
 190:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 194:	0e030b13 	vmoveq.32	d3[0], r0
 198:	17550e1b 	smmlane	r5, fp, lr, r0
 19c:	17100111 			@ <UNDEFINED> instruction: 0x17100111
 1a0:	0f1b0000 	svceq	0x001b0000
 1a4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 1a8:	1c000013 	stcne	0, cr0, [r0], {19}
 1ac:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	@ <UNPREDICTABLE>
 1b0:	0b3a0e03 	bleq	e839c4 <startup-0x1f17c63c>
 1b4:	0b390b3b 	bleq	e42ea8 <startup-0x1f1bd158>
 1b8:	01111927 	tsteq	r1, r7, lsr #18
 1bc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1c0:	1301197a 	movwne	r1, #6522	@ 0x197a
 1c4:	1d1d0000 	ldcne	0, cr0, [sp, #-0]
 1c8:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
 1cc:	0b42b801 	bleq	10ae1d8 <startup-0x1ef51e28>
 1d0:	06120111 			@ <UNDEFINED> instruction: 0x06120111
 1d4:	0b590b58 	bleq	1642f3c <startup-0x1e9bd0c4>
 1d8:	13010b57 	movwne	r0, #6999	@ 0x1b57
 1dc:	481e0000 	ldmdami	lr, {}	@ <UNPREDICTABLE>
 1e0:	7f017d00 	svcvc	0x00017d00
 1e4:	1f000013 	svcne	0x00000013
 1e8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	@ <UNPREDICTABLE>
 1ec:	0b3a0e03 	bleq	e83a00 <startup-0x1f17c600>
 1f0:	0b390b3b 	bleq	e42ee4 <startup-0x1f1bd11c>
 1f4:	13491927 	movtne	r1, #39207	@ 0x9927
 1f8:	13010b20 	movwne	r0, #6944	@ 0x1b20
 1fc:	34200000 	strtcc	r0, [r0], #-0
 200:	3a080300 	bcc	200e08 <startup-0x1fdff1f8>
 204:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 208:	0013490b 	andseq	r4, r3, fp, lsl #18
 20c:	00342100 	eorseq	r2, r4, r0, lsl #2
 210:	0b3a0e03 	bleq	e83a24 <startup-0x1f17c5dc>
 214:	0b390b3b 	bleq	e42f08 <startup-0x1f1bd0f8>
 218:	00001349 	andeq	r1, r0, r9, asr #6
 21c:	0b002422 	bleq	92ac <startup-0x1fff6d54>
 220:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
 224:	23000008 	movwcs	r0, #8
 228:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	@ <UNPREDICTABLE>
 22c:	0b3a0e03 	bleq	e83a40 <startup-0x1f17c5c0>
 230:	0b390b3b 	bleq	e42f24 <startup-0x1f1bd0dc>
 234:	0b201349 	bleq	804f60 <startup-0x1f7fb0a0>
 238:	05240000 	streq	r0, [r4, #-0]!
 23c:	3a0e0300 	bcc	380e44 <startup-0x1fc7f1bc>
 240:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 244:	0013490b 	andseq	r4, r3, fp, lsl #18
 248:	002e2500 	eoreq	r2, lr, r0, lsl #10
 24c:	01111331 	tsteq	r1, r1, lsr r3
 250:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 254:	0000197a 	andeq	r1, r0, sl, ror r9
 258:	31012e26 	tstcc	r1, r6, lsr #28
 25c:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
 260:	7a184006 	bvc	610280 <startup-0x1f9efd80>
 264:	27000019 	smladcs	r0, r9, r0, r0
 268:	13310005 	teqne	r1, #5
 26c:	00001802 	andeq	r1, r0, r2, lsl #16
	...

Disassembly of section .debug_loclists:

00000000 <.debug_loclists>:
   0:	000002e2 	andeq	r0, r0, r2, ror #5
   4:	00040005 	andeq	r0, r4, r5
   8:	00000000 	andeq	r0, r0, r0
   c:	00030003 	andeq	r0, r3, r3
  10:	00040302 	andeq	r0, r4, r2, lsl #6
  14:	e0060004 	and	r0, r6, r4
  18:	04200001 	strteq	r0, [r0], #-1
  1c:	30021800 	andcc	r1, r2, r0, lsl #16
  20:	3828049f 	stmdacc	r8!, {r0, r1, r2, r3, r4, r7, sl}
  24:	049f3102 	ldreq	r3, [pc], #258	@ 2c <startup-0x1fffffd4>
  28:	34024a4a 	strcc	r4, [r2], #-2634	@ 0xfffff5b6
  2c:	5c4c049f 	cfstrdpl	mvd0, [ip], {159}	@ 0x9f
  30:	049f3202 	ldreq	r3, [pc], #514	@ 38 <startup-0x1fffffc8>
  34:	3302705c 	movwcc	r7, #8284	@ 0x205c
  38:	0300009f 	movweq	r0, #159	@ 0x9f
  3c:	04060000 	streq	r0, [r6], #-0
  40:	04200002 	strteq	r0, [r0], #-2
  44:	09032600 	stmdbeq	r3, {r9, sl, sp}
  48:	28049fff 	stmdacs	r4, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
  4c:	ff09034c 			@ <UNDEFINED> instruction: 0xff09034c
  50:	0005009f 	muleq	r5, pc, r0	@ <UNPREDICTABLE>
  54:	00060005 	andeq	r0, r6, r5
  58:	e0060006 	and	r0, r6, r6
  5c:	04200001 	strteq	r0, [r0], #-1
  60:	30020800 	andcc	r0, r2, r0, lsl #16
  64:	3828049f 	stmdacc	r8!, {r0, r1, r2, r3, r4, r7, sl}
  68:	049f3002 	ldreq	r3, [pc], #2	@ 70 <startup-0x1fffff90>
  6c:	30025c4c 	andcc	r5, r2, ip, asr #24
  70:	6a5c049f 	bvs	17012f4 <startup-0x1e8fed0c>
  74:	009f3002 	addseq	r3, pc, r2
  78:	00050005 	andeq	r0, r5, r5
  7c:	00060006 	andeq	r0, r6, r6
  80:	0001e006 	andeq	lr, r1, r6
  84:	08000420 	stmdaeq	r0, {r5, sl}
  88:	049f3002 	ldreq	r3, [pc], #2	@ 90 <startup-0x1fffff70>
  8c:	31023828 	tstcc	r2, r8, lsr #16
  90:	5c4c049f 	cfstrdpl	mvd0, [ip], {159}	@ 0x9f
  94:	049f3202 	ldreq	r3, [pc], #514	@ 9c <startup-0x1fffff64>
  98:	33026a5c 	movwcc	r6, #10844	@ 0x2a5c
  9c:	0103009f 	swpeq	r0, pc, [r3]	@ <UNPREDICTABLE>
  a0:	02000000 	andeq	r0, r0, #0
  a4:	04060200 	streq	r0, [r6], #-512	@ 0xfffffe00
  a8:	04200002 	strteq	r0, [r0], #-2
  ac:	31020400 	tstcc	r2, r0, lsl #8
  b0:	2614049f 			@ <UNDEFINED> instruction: 0x2614049f
  b4:	049f3102 	ldreq	r3, [pc], #258	@ bc <startup-0x1fffff44>
  b8:	31022828 	tstcc	r2, r8, lsr #16
  bc:	3838049f 	ldmdacc	r8!, {r0, r1, r2, r3, r4, r7, sl}
  c0:	009f3102 	addseq	r3, pc, r2, lsl #2
  c4:	00000103 	andeq	r0, r0, r3, lsl #2
  c8:	02000200 	andeq	r0, r0, #0, 4
  cc:	00020406 	andeq	r0, r2, r6, lsl #8
  d0:	04000420 	streq	r0, [r0], #-1056	@ 0xfffffbe0
  d4:	14045301 	strne	r5, [r4], #-769	@ 0xfffffcff
  d8:	0453011e 	ldrbeq	r0, [r3], #-286	@ 0xfffffee2
  dc:	53012828 	movwpl	r2, #6184	@ 0x1828
  e0:	01383804 	teqeq	r8, r4, lsl #16
  e4:	00000053 	andeq	r0, r0, r3, asr r0
  e8:	00022008 	andeq	r2, r2, r8
  ec:	31020a20 	tstcc	r2, r0, lsr #20
  f0:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
  f4:	00022008 	andeq	r2, r2, r8
  f8:	33020a20 	movwcc	r0, #10784	@ 0x2a20
  fc:	0003009f 	muleq	r3, pc, r0	@ <UNPREDICTABLE>
 100:	00022a08 	andeq	r2, r2, r8, lsl #20
 104:	09030220 	stmdbeq	r3, {r5, r9}
 108:	00009fff 	strdeq	r9, [r0], -pc	@ <UNPREDICTABLE>
	...
 118:	06000000 	streq	r0, [r0], -r0
 11c:	20000038 	andcs	r0, r0, r8, lsr r0
 120:	01100004 	tsteq	r0, r4
 124:	1a100450 	bne	40126c <startup-0x1fbfed94>
 128:	5001a304 	andpl	sl, r1, r4, lsl #6
 12c:	301a049f 	mulscc	sl, pc, r4	@ <UNPREDICTABLE>
 130:	30045001 	andcc	r5, r4, r1
 134:	01a30438 			@ <UNDEFINED> instruction: 0x01a30438
 138:	38049f50 	stmdacc	r4, {r4, r6, r8, r9, sl, fp, ip, pc}
 13c:	04500140 	ldrbeq	r0, [r0], #-320	@ 0xfffffec0
 140:	70034c40 	andvc	r4, r3, r0, asr #24
 144:	4c049f61 	stcmi	15, cr9, [r4], {97}	@ 0x61
 148:	04500158 	ldrbeq	r0, [r0], #-344	@ 0xfffffea8
 14c:	a3046858 	movwge	r6, #18520	@ 0x4858
 150:	009f5001 	addseq	r5, pc, r1
	...
 164:	00003806 	andeq	r3, r0, r6, lsl #16
 168:	0a000420 	beq	11f0 <startup-0x1fffee10>
 16c:	0a045101 	beq	114578 <startup-0x1feeba88>
 170:	01a3041a 			@ <UNDEFINED> instruction: 0x01a3041a
 174:	1a049f51 	bne	127ec0 <startup-0x1fed8140>
 178:	0451012a 	ldrbeq	r0, [r1], #-298	@ 0xfffffed6
 17c:	a304382a 	movwge	r3, #18474	@ 0x482a
 180:	049f5101 	ldreq	r5, [pc], #257	@ 188 <startup-0x1ffffe78>
 184:	51013c38 	tstpl	r1, r8, lsr ip
 188:	044c3c04 	strbeq	r3, [ip], #-3076	@ 0xfffff3fc
 18c:	9f5101a3 	svcls	0x005101a3
 190:	01524c04 	cmpeq	r2, r4, lsl #24
 194:	68520451 	ldmdavs	r2, {r0, r4, r6, sl}^
 198:	5101a304 	tstpl	r1, r4, lsl #6
 19c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 1a0:	5a060000 	bpl	1801a8 <startup-0x1fe7fe58>
 1a4:	04200000 	strteq	r0, [r0], #-0
 1a8:	51010800 	tstpl	r1, r0, lsl #16
 1ac:	04140804 	ldreq	r0, [r4], #-2052	@ 0xfffff7fc
 1b0:	9f5101a3 	svcls	0x005101a3
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	005a0600 	subseq	r0, sl, r0, lsl #12
 1bc:	00042000 	andeq	r2, r4, r0
 1c0:	0450010e 	ldrbeq	r0, [r0], #-270	@ 0xfffffef2
 1c4:	a304140e 	movwge	r1, #17422	@ 0x440e
 1c8:	009f5001 	addseq	r5, pc, r1
 1cc:	00000003 	andeq	r0, r0, r3
 1d0:	00020003 	andeq	r0, r2, r3
 1d4:	00040003 	andeq	r0, r4, r3
 1d8:	0000d406 	andeq	sp, r0, r6, lsl #8
 1dc:	22000420 	andcs	r0, r0, #32, 8	@ 0x20000000
 1e0:	049f3002 	ldreq	r3, [pc], #2	@ 1e8 <startup-0x1ffffe18>
 1e4:	30025a36 	andcc	r5, r2, r6, lsr sl
 1e8:	7a6c049f 	bvc	1b0146c <startup-0x1e4feb94>
 1ec:	049f3102 	ldreq	r3, [pc], #258	@ 1f4 <startup-0x1ffffe0c>
 1f0:	01940192 			@ <UNDEFINED> instruction: 0x01940192
 1f4:	049f3402 	ldreq	r3, [pc], #1026	@ 1fc <startup-0x1ffffe04>
 1f8:	01a40194 			@ <UNDEFINED> instruction: 0x01a40194
 1fc:	049f3202 	ldreq	r3, [pc], #514	@ 204 <startup-0x1ffffdfc>
 200:	01b801a8 			@ <UNDEFINED> instruction: 0x01b801a8
 204:	009f3302 	addseq	r3, pc, r2, lsl #6
 208:	00000000 	andeq	r0, r0, r0
 20c:	3c060000 	stccc	0, cr0, [r6], {-0}
 210:	04200001 	strteq	r0, [r0], #-1
 214:	09031200 	stmdbeq	r3, {r9, ip}
 218:	16049fff 			@ <UNDEFINED> instruction: 0x16049fff
 21c:	ff09033c 			@ <UNDEFINED> instruction: 0xff09033c
 220:	5040049f 	umaalpl	r0, r0, pc, r4	@ <UNPREDICTABLE>
 224:	9fff0903 	svcls	0x00ff0903
 228:	05000200 	streq	r0, [r0, #-512]	@ 0xfffffe00
 22c:	06000500 	streq	r0, [r0], -r0, lsl #10
 230:	00ea0600 	rsceq	r0, sl, r0, lsl #12
 234:	00042000 	andeq	r2, r4, r0
 238:	9f300204 	svcls	0x00300204
 23c:	02645604 	rsbeq	r5, r4, #4, 12	@ 0x400000
 240:	7e049f30 	mcrvc	15, 0, r9, cr4, cr0, {1}
 244:	3002018e 	andcc	r0, r2, lr, lsl #3
 248:	0192049f 			@ <UNDEFINED> instruction: 0x0192049f
 24c:	300201a0 	andcc	r0, r2, r0, lsr #3
 250:	0002009f 	muleq	r2, pc, r0	@ <UNPREDICTABLE>
 254:	00050005 	andeq	r0, r5, r5
 258:	ea060006 	b	180278 <startup-0x1fe7fd88>
 25c:	04200000 	strteq	r0, [r0], #-0
 260:	30020400 	andcc	r0, r2, r0, lsl #8
 264:	6456049f 	ldrbvs	r0, [r6], #-1183	@ 0xfffffb61
 268:	049f3102 	ldreq	r3, [pc], #258	@ 270 <startup-0x1ffffd90>
 26c:	02018e7e 	andeq	r8, r1, #2016	@ 0x7e0
 270:	92049f32 	andls	r9, r4, #50, 30	@ 0xc8
 274:	0201a001 	andeq	sl, r1, #1
 278:	03009f33 	movweq	r9, #3891	@ 0xf33
 27c:	00000001 	andeq	r0, r0, r1
 280:	06020001 	streq	r0, [r2], -r1
 284:	2000013c 	andcs	r0, r0, ip, lsr r1
 288:	02040004 	andeq	r0, r4, #4
 28c:	16049f31 			@ <UNDEFINED> instruction: 0x16049f31
 290:	9f31022a 	svcls	0x0031022a
 294:	022c2c04 	eoreq	r2, ip, #4, 24	@ 0x400
 298:	40049f31 	andmi	r9, r4, r1, lsr pc
 29c:	9f310240 	svcls	0x00310240
 2a0:	00010300 	andeq	r0, r1, r0, lsl #6
 2a4:	00010000 	andeq	r0, r1, r0
 2a8:	013c0602 	teqeq	ip, r2, lsl #12
 2ac:	00042000 	andeq	r2, r4, r0
 2b0:	04530104 	ldrbeq	r0, [r3], #-260	@ 0xfffffefc
 2b4:	53012016 	movwpl	r2, #4118	@ 0x1016
 2b8:	012c2c04 			@ <UNDEFINED> instruction: 0x012c2c04
 2bc:	40400453 	submi	r0, r0, r3, asr r4
 2c0:	00005301 	andeq	r5, r0, r1, lsl #6
 2c4:	015a0800 	cmpeq	sl, r0, lsl #16
 2c8:	020c2000 	andeq	r2, ip, #0
 2cc:	00009f31 	andeq	r9, r0, r1, lsr pc
 2d0:	015a0800 	cmpeq	sl, r0, lsl #16
 2d4:	020c2000 	andeq	r2, ip, #0
 2d8:	00009f33 	andeq	r9, r0, r3, lsr pc
 2dc:	019e0800 	orrseq	r0, lr, r0, lsl #16
 2e0:	01042000 	mrseq	r2, (UNDEF: 4)
 2e4:	Address 0x2e4 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000002c 	andeq	r0, r0, ip, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000019c 	muleq	r0, ip, r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000a 	andeq	r0, r0, sl
  20:	200001ac 	andcs	r0, r0, ip, lsr #3
  24:	000000a4 	andeq	r0, r0, r4, lsr #1
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
   0:	00000178 	andeq	r0, r0, r8, ror r1
   4:	00040005 	andeq	r0, r4, r5
   8:	00000000 	andeq	r0, r0, r0
   c:	0000d405 	andeq	sp, r0, r5, lsl #8
  10:	00000420 	andeq	r0, r0, r0, lsr #8
  14:	040c0a04 	streq	r0, [ip], #-2564	@ 0xfffff5fc
  18:	36042a0e 	strcc	r2, [r4], -lr, lsl #20
  1c:	9004018e 	andls	r0, r4, lr, lsl #3
  20:	0001c001 	andeq	ip, r1, r1
  24:	0000de05 	andeq	sp, r0, r5, lsl #28
  28:	02000420 	andeq	r0, r0, #32, 8	@ 0x20000000
  2c:	04140404 	ldreq	r0, [r4], #-1028	@ 0xfffffbfc
  30:	2c042016 	stccs	0, cr2, [r4], {22}
  34:	624a0448 	subvs	r0, sl, #72, 8	@ 0x48000000
  38:	01846204 	orreq	r6, r4, r4, lsl #4
  3c:	88018604 	stmdahi	r1, {r2, r9, sl, pc}
  40:	018a0401 	orreq	r0, sl, r1, lsl #8
  44:	8a04018a 	bhi	100674 <startup-0x1feff98c>
  48:	04019e01 	streq	r9, [r1], #-3585	@ 0xfffff1ff
  4c:	01aa019e 			@ <UNDEFINED> instruction: 0x01aa019e
  50:	b601ac04 	strlt	sl, [r1], -r4, lsl #24
  54:	de050001 	cdple	0, 0, cr0, cr5, cr1, {0}
  58:	04200000 	strteq	r0, [r0], #-0
  5c:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
  60:	100c040a 	andne	r0, ip, sl, lsl #8
  64:	04626204 	strbteq	r6, [r2], #-516	@ 0xfffffdfc
  68:	8a046c6a 	bhi	11b218 <startup-0x1fee4de8>
  6c:	04018a01 	streq	r8, [r1], #-2561	@ 0xfffff5ff
  70:	019a0196 			@ <UNDEFINED> instruction: 0x019a0196
  74:	9e019e04 	cdpls	14, 0, cr9, cr1, cr4, {0}
  78:	e8050001 	stmda	r5, {r0}
  7c:	04200000 	strteq	r0, [r0], #-0
  80:	06040200 	streq	r0, [r4], -r0, lsl #4
  84:	0e0c040a 	cdpeq	4, 0, cr0, cr12, cr10, {0}
  88:	04282204 	strteq	r2, [r8], #-516	@ 0xfffffdfc
  8c:	38043432 	stmdacc	r4, {r1, r4, r5, sl, ip, sp}
  90:	5446043e 	strbpl	r0, [r6], #-1086	@ 0xfffffbc2
  94:	046a6204 	strbteq	r6, [sl], #-516	@ 0xfffffdfc
  98:	01940190 			@ <UNDEFINED> instruction: 0x01940190
  9c:	ac01a204 	sfmge	f2, 1, [r1], {4}
  a0:	10050001 	andne	r0, r5, r1
  a4:	04200001 	strteq	r0, [r0], #-1
  a8:	0c040a00 			@ <UNDEFINED> instruction: 0x0c040a00
  ac:	1e180410 	cfmvrdlne	r0, mvd8
  b0:	04302c04 	ldrteq	r2, [r0], #-3076	@ 0xfffff3fc
  b4:	42043830 	andmi	r3, r4, #48, 16	@ 0x300000
  b8:	56540452 			@ <UNDEFINED> instruction: 0x56540452
  bc:	04585804 	ldrbeq	r5, [r8], #-2052	@ 0xfffff7fc
  c0:	6c046458 	cfstrsvs	mvf6, [r4], {88}	@ 0x58
  c4:	786c046c 	stmdavc	ip!, {r2, r3, r5, r6, sl}^
  c8:	015a0500 	cmpeq	sl, r0, lsl #10
  cc:	00042000 	andeq	r2, r4, r0
  d0:	0c0a0408 	cfstrseq	mvf0, [sl], {8}
  d4:	01bc0500 			@ <UNDEFINED> instruction: 0x01bc0500
  d8:	00042000 	andeq	r2, r4, r0
  dc:	6e240424 	cdpvs	4, 2, cr0, cr4, cr4, {1}
  e0:	01947004 	orrseq	r7, r4, r4
  e4:	01bc0500 			@ <UNDEFINED> instruction: 0x01bc0500
  e8:	00042000 	andeq	r2, r4, r0
  ec:	34240424 	strtcc	r0, [r4], #-1060	@ 0xfffffbdc
  f0:	044c3604 	strbeq	r3, [ip], #-1540	@ 0xfffff9fc
  f4:	70046e4c 	andvc	r6, r4, ip, asr #28
  f8:	80700470 	rsbshi	r0, r0, r0, ror r4
  fc:	01800401 	orreq	r0, r0, r1, lsl #8
 100:	8e04018c 	adfhid	f0, f4, #4.0
 104:	00019401 	andeq	r9, r1, r1, lsl #8
 108:	0001bc05 	andeq	fp, r1, r5, lsl #24
 10c:	08000420 	stmdaeq	r0, {r5, sl}
 110:	04160c04 	ldreq	r0, [r6], #-3076	@ 0xfffff3fc
 114:	2c042220 	sfmcs	f2, 4, [r4], {32}
 118:	483c0432 	ldmdami	ip!, {r1, r4, r5, sl}
 11c:	045c5604 	ldrbeq	r5, [ip], #-1540	@ 0xfffff9fc
 120:	0194018e 	orrseq	r0, r4, lr, lsl #3
 124:	01c40500 	biceq	r0, r4, r0, lsl #10
 128:	00042000 	andeq	r2, r4, r0
 12c:	241c0404 	ldrcs	r0, [ip], #-1028	@ 0xfffffbfc
 130:	04444404 	strbeq	r4, [r4], #-1028	@ 0xfffffbfc
 134:	68044e4c 	stmdavs	r4, {r2, r3, r6, r9, sl, fp, lr}
 138:	78740468 	ldmdavc	r4!, {r3, r5, r6, sl}^
 13c:	00787804 	rsbseq	r7, r8, r4, lsl #16
 140:	0001d205 	andeq	sp, r1, r5, lsl #4
 144:	0a000420 	beq	11cc <startup-0x1fffee34>
 148:	040e0c04 	streq	r0, [lr], #-3076	@ 0xfffff3fc
 14c:	20041e1c 	andcs	r1, r4, ip, lsl lr
 150:	36320426 	ldrtcc	r0, [r2], -r6, lsr #8
 154:	043e3604 	ldrteq	r3, [lr], #-1540	@ 0xfffff9fc
 158:	5a045846 	bpl	116278 <startup-0x1fee9d88>
 15c:	665a045a 			@ <UNDEFINED> instruction: 0x665a045a
 160:	046a6a04 	strbteq	r6, [sl], #-2564	@ 0xfffff5fc
 164:	0700766a 	streq	r7, [r0, -sl, ror #12]
 168:	20000010 	andcs	r0, r0, r0, lsl r0
 16c:	0007039c 	muleq	r7, ip, r3
 170:	0a200000 	beq	800178 <startup-0x1f7ffe88>
 174:	0001ac07 	andeq	sl, r1, r7, lsl #24
 178:	0001a420 	andeq	sl, r1, r0, lsr #8

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000522 	andeq	r0, r0, r2, lsr #10
   4:	008b0003 	addeq	r0, fp, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	74532f3a 	ldrbvc	r2, [r3], #-3898	@ 0xfffff0c6
  20:	65696475 	strbvs	r6, [r9, #-1141]!	@ 0xfffffb8b
  24:	614d2f73 	hvcvs	54003	@ 0xd2f3
  28:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
  2c:	724f2d65 	subvc	r2, pc, #6464	@ 0x1940
  30:	746e6569 	strbtvc	r6, [lr], #-1385	@ 0xfffffa97
  34:	502d6465 	eorpl	r6, sp, r5, ror #8
  38:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
  3c:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
  40:	572f676e 	strpl	r6, [pc, -lr, ror #14]!
  44:	2f6b726f 	svccs	0x006b726f
  48:	6863614d 	stmdavs	r3!, {r0, r2, r3, r6, r8, sp, lr}^
  4c:	2d656e69 	stclcs	14, cr6, [r5, #-420]!	@ 0xfffffe5c
  50:	6569724f 	strbvs	r7, [r9, #-591]!	@ 0xfffffdb1
  54:	6465746e 	strbtvs	r7, [r5], #-1134	@ 0xfffffb92
  58:	6f72502d 	svcvs	0x0072502d
  5c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
  60:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
  64:	7574532d 	ldrbvc	r5, [r4, #-813]!	@ 0xfffffcd3
  68:	73656964 	cmnvc	r5, #100, 18	@ 0x190000
  6c:	462f432f 	strtmi	r4, [pc], -pc, lsr #6
  70:	7472756f 	ldrbtvc	r7, [r2], #-1391	@ 0xfffffa91
  74:	79725468 	ldmdbvc	r2!, {r3, r5, r6, sl, ip, lr}^
  78:	322e322f 	eorcc	r3, lr, #-268435454	@ 0xf0000002
  7c:	79654b2d 	stmdbvc	r5!, {r0, r2, r3, r5, r8, r9, fp, lr}^
  80:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
  84:	73000064 	movwvc	r0, #100	@ 0x64
  88:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
  8c:	632e7075 			@ <UNDEFINED> instruction: 0x632e7075
  90:	00000100 	andeq	r0, r0, r0, lsl #2
  94:	00010500 	andeq	r0, r1, r0, lsl #10
  98:	00000205 	andeq	r0, r0, r5, lsl #4
  9c:	23032000 	movwcs	r2, #12288	@ 0x3000
  a0:	21211301 			@ <UNDEFINED> instruction: 0x21211301
  a4:	0221062f 	eoreq	r0, r1, #49283072	@ 0x2f00000
  a8:	01010003 	tsteq	r1, r3
  ac:	05000105 	streq	r0, [r0, #-261]	@ 0xfffffefb
  b0:	00001002 	andeq	r1, r0, r2
  b4:	01970320 	orrseq	r0, r7, r0, lsr #6
  b8:	13020501 	movwne	r0, #9473	@ 0x2501
  bc:	1a061d05 	bne	1874d8 <startup-0x1fe78b28>
  c0:	0e030105 	adfeqs	f0, f3, f5
  c4:	03070520 	movweq	r0, #29984	@ 0x7520
  c8:	0205016a 	andeq	r0, r5, #-2147483622	@ 0x8000001a
  cc:	13152f06 	tstne	r5, #6, 30
  d0:	13131313 	tstne	r3, #1275068416	@ 0x4c000000
  d4:	1d051313 	stcne	3, cr1, [r5, #-76]	@ 0xffffffb4
  d8:	02050f06 	andeq	r0, r5, #6, 30
  dc:	13132606 	tstne	r3, #6291456	@ 0x600000
  e0:	13131313 	tstne	r3, #1275068416	@ 0x4c000000
  e4:	06130513 			@ <UNDEFINED> instruction: 0x06130513
  e8:	05016b03 	streq	r6, [r1, #-2819]	@ 0xfffff4fd
  ec:	13052114 	movwne	r2, #20756	@ 0x5114
  f0:	2114051f 	tstcs	r4, pc, lsl r5
  f4:	15030105 	strne	r0, [r3, #-261]	@ 0xfffffefb
  f8:	057b0666 	ldrbeq	r0, [fp, #-1638]!	@ 0xfffff99a
  fc:	05051302 	streq	r1, [r5, #-770]	@ 0xfffffcfe
 100:	13050106 	movwne	r0, #20742	@ 0x5106
 104:	01040200 	mrseq	r0, R12_usr
 108:	2b052e06 	blcs	14b928 <startup-0x1feb46d8>
 10c:	01040200 	mrseq	r0, R12_usr
 110:	18050106 	stmdane	r5, {r1, r2, r8}
 114:	01040200 	mrseq	r0, R12_usr
 118:	002b053c 	eoreq	r0, fp, ip, lsr r5
 11c:	20010402 	andcs	r0, r1, r2, lsl #8
 120:	01040200 	mrseq	r0, R12_usr
 124:	4e01052e 	cfsh32mi	mvfx0, mvfx1, #30
 128:	1d060705 	stcne	7, cr0, [r6, #-20]	@ 0xffffffec
 12c:	01060a05 	tsteq	r6, r5, lsl #20
 130:	2f060705 	svccs	0x00060705
 134:	01060a05 	tsteq	r6, r5, lsl #20
 138:	2a060605 	bcs	181954 <startup-0x1fe7e6ac>
 13c:	05170705 	ldreq	r0, [r7, #-1797]	@ 0xfffff8fb
 140:	0501060a 	streq	r0, [r1, #-1546]	@ 0xfffff9f6
 144:	052e0617 	streq	r0, [lr, #-1559]!	@ 0xfffff9e9
 148:	0501061c 	streq	r0, [r1, #-1564]	@ 0xfffff9e4
 14c:	3c20202f 	stccc	0, cr2, [r0], #-188	@ 0xffffff44
 150:	1301053c 	movwne	r0, #5436	@ 0x153c
 154:	02001705 	andeq	r1, r0, #1310720	@ 0x140000
 158:	1d060104 	stfnes	f0, [r6, #-16]
 15c:	02001c05 	andeq	r1, r0, #1280	@ 0x500
 160:	01060104 	tsteq	r6, r4, lsl #2
 164:	02002f05 	andeq	r2, r0, #5, 30
 168:	00200104 	eoreq	r0, r0, r4, lsl #2
 16c:	20010402 	andcs	r0, r1, r2, lsl #8
 170:	01040200 	mrseq	r0, R12_usr
 174:	0017052e 	andseq	r0, r7, lr, lsr #10
 178:	06010402 	streq	r0, [r1], -r2, lsl #8
 17c:	002f0567 	eoreq	r0, pc, r7, ror #10
 180:	06010402 	streq	r0, [r1], -r2, lsl #8
 184:	001c0501 	andseq	r0, ip, r1, lsl #10
 188:	3c010402 	cfstrscc	mvf0, [r1], {2}
 18c:	02002f05 	andeq	r2, r0, #5, 30
 190:	00200104 	eoreq	r0, r0, r4, lsl #2
 194:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 198:	88060105 	stmdahi	r6, {r0, r2, r8}
 19c:	05150205 	ldreq	r0, [r5, #-517]	@ 0xfffffdfb
 1a0:	0501061c 	streq	r0, [r1, #-1564]	@ 0xfffff9e4
 1a4:	1c052e0b 	stcne	14, cr2, [r5], {11}
 1a8:	3c050520 	cfstr32cc	mvfx0, [r5], {32}
 1ac:	2f060205 	svccs	0x00060205
 1b0:	01060505 	tsteq	r6, r5, lsl #10
 1b4:	2f060205 	svccs	0x00060205
 1b8:	01060505 	tsteq	r6, r5, lsl #10
 1bc:	2f060205 	svccs	0x00060205
 1c0:	01060505 	tsteq	r6, r5, lsl #10
 1c4:	05300905 	ldreq	r0, [r0, #-2309]!	@ 0xfffff6fb
 1c8:	2c056701 	stccs	7, cr6, [r5], {1}
 1cc:	0601051c 			@ <UNDEFINED> instruction: 0x0601051c
 1d0:	1302055f 	movwne	r0, #9567	@ 0x255f
 1d4:	05010705 	streq	r0, [r1, #-1797]	@ 0xfffff8fb
 1d8:	01050118 	tsteq	r5, r8, lsl r1
 1dc:	2b051106 	blcs	1445fc <startup-0x1febba04>
 1e0:	05586c03 	ldrbeq	r6, [r8, #-3075]	@ 0xfffff3fd
 1e4:	20140301 	andscs	r0, r4, r1, lsl #6
 1e8:	6c031805 	stcvs	8, cr1, [r3], {5}
 1ec:	2e2b0520 	cfsh64cs	mvdx0, mvdx11, #16
 1f0:	0b031c05 	bleq	c720c <startup-0x1ff38df4>
 1f4:	03052020 	movweq	r2, #20512	@ 0x5020
 1f8:	010b0306 	tsteq	fp, r6, lsl #6
 1fc:	68030605 	stmdavs	r3, {r0, r2, r9, sl}
 200:	14020501 	strne	r0, [r2], #-1281	@ 0xfffffaff
 204:	05011305 	streq	r1, [r1, #-773]	@ 0xfffffcfb
 208:	2e01062b 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx11
 20c:	03060305 	movweq	r0, #25349	@ 0x6305
 210:	0f050118 	svceq	0x00050118
 214:	05016f03 	streq	r6, [r1, #-3843]	@ 0xfffff0fd
 218:	05051602 	streq	r1, [r5, #-1538]	@ 0xfffff9fe
 21c:	0b050106 	bleq	14063c <startup-0x1febf9c4>
 220:	2e2e0a03 	vmulcs.f32	s0, s28, s6
 224:	18060405 	stmdane	r6, {r0, r2, sl}
 228:	01061805 	tsteq	r6, r5, lsl #16
 22c:	05510105 	ldrbeq	r0, [r1, #-261]	@ 0xfffffefb
 230:	666c031d 			@ <UNDEFINED> instruction: 0x666c031d
 234:	73032f05 	movwvc	r2, #16133	@ 0x3f05
 238:	1d054b3c 	vstrne	d4, [r5, #-240]	@ 0xffffff10
 23c:	05200b03 	streq	r0, [r0, #-2819]!	@ 0xfffff4fd
 240:	2075032f 	rsbscs	r0, r5, pc, lsr #6
 244:	0a031c05 	beq	c7260 <startup-0x1ff38da0>
 248:	2f1d052e 	svccs	0x001d052e
 24c:	05280b05 	streq	r0, [r8, #-2821]!	@ 0xfffff4fb
 250:	206d032f 	rsbcs	r0, sp, pc, lsr #6
 254:	2e1e2b05 	vnmlscs.f64	d2, d14, d5
 258:	03060205 	movweq	r0, #25093	@ 0x6205
 25c:	0505010c 	streq	r0, [r5, #-268]	@ 0xfffffef4
 260:	02050106 	andeq	r0, r5, #-2147483647	@ 0x80000001
 264:	05052f06 	streq	r2, [r5, #-3846]	@ 0xfffff0fa
 268:	02050106 	andeq	r0, r5, #-2147483647	@ 0x80000001
 26c:	05052f06 	streq	r2, [r5, #-3846]	@ 0xfffff0fa
 270:	053c0106 	ldreq	r0, [ip, #-262]!	@ 0xfffffefa
 274:	0b030603 	bleq	c1a88 <startup-0x1ff3e578>
 278:	06051701 	streq	r1, [r5], -r1, lsl #14
 27c:	05016003 	streq	r6, [r1, #-3]
 280:	05051402 	streq	r1, [r5, #-1026]	@ 0xfffffbfe
 284:	13050106 	movwne	r0, #20742	@ 0x5106
 288:	01062e06 	tsteq	r6, r6, lsl #28
 28c:	03062005 	movweq	r2, #24581	@ 0x6005
 290:	18050115 	stmdane	r5, {r0, r2, r4, r8}
 294:	13030501 	movwne	r0, #13569	@ 0x3501
 298:	68030605 	stmdavs	r3, {r0, r2, r9, sl}
 29c:	14020501 	strne	r0, [r2], #-1281	@ 0xfffffaff
 2a0:	05130705 	ldreq	r0, [r3, #-1797]	@ 0xfffff8fb
 2a4:	2b050117 	blcs	140708 <startup-0x1febf8f8>
 2a8:	02051106 	andeq	r1, r5, #-2147483647	@ 0x80000001
 2ac:	580c0306 	stmdapl	ip, {r1, r2, r8, r9}
 2b0:	01060505 	tsteq	r6, r5, lsl #10
 2b4:	07052e2e 	streq	r2, [r5, -lr, lsr #28]
 2b8:	01750306 	cmneq	r5, r6, lsl #6
 2bc:	01060a05 	tsteq	r6, r5, lsl #20
 2c0:	2f060705 	svccs	0x00060705
 2c4:	01060a05 	tsteq	r6, r5, lsl #20
 2c8:	2a060605 	bcs	181ae4 <startup-0x1fe7e51c>
 2cc:	05170705 	ldreq	r0, [r7, #-1797]	@ 0xfffff8fb
 2d0:	2f050117 	svccs	0x00050117
 2d4:	05200106 	streq	r0, [r0, #-262]!	@ 0xfffffefa
 2d8:	3c1e0309 	ldccc	3, cr0, [lr], {9}
 2dc:	62032f05 	andvs	r2, r3, #5, 30
 2e0:	20052020 	andcs	r2, r5, r0, lsr #32
 2e4:	01120306 	tsteq	r2, r6, lsl #6
 2e8:	05011805 	streq	r1, [r1, #-2053]	@ 0xfffff7fb
 2ec:	206c0317 	rsbcs	r0, ip, r7, lsl r3
 2f0:	20050106 	andcs	r0, r5, r6, lsl #2
 2f4:	01140306 	tsteq	r4, r6, lsl #6
 2f8:	05011805 	streq	r1, [r1, #-2053]	@ 0xfffff7fb
 2fc:	06051303 	streq	r1, [r5], -r3, lsl #6
 300:	05016803 	streq	r6, [r1, #-2051]	@ 0xfffff7fd
 304:	07051402 	streq	r1, [r5, -r2, lsl #8]
 308:	17051313 	smladne	r5, r3, r3, r1
 30c:	062f0501 	strteq	r0, [pc], -r1, lsl #10
 310:	052e8211 	streq	r8, [lr, #-529]!	@ 0xfffffdef
 314:	06130617 			@ <UNDEFINED> instruction: 0x06130617
 318:	06200501 	strteq	r0, [r0], -r1, lsl #10
 31c:	05011303 	streq	r1, [r1, #-771]	@ 0xfffffcfd
 320:	03050118 	movweq	r0, #20760	@ 0x5118
 324:	03060513 	movweq	r0, #25875	@ 0x6513
 328:	02050168 	andeq	r0, r5, #104, 2
 32c:	13070514 	movwne	r0, #29972	@ 0x7514
 330:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
 334:	2005012f 	andcs	r0, r5, pc, lsr #2
 338:	05661303 	strbeq	r1, [r6, #-771]!	@ 0xfffffcfd
 33c:	05230603 	streq	r0, [r3, #-1539]!	@ 0xfffff9fd
 340:	016f030f 	cmneq	pc, pc, lsl #6
 344:	06160205 	ldreq	r0, [r6], -r5, lsl #4
 348:	06010520 	streq	r0, [r1], -r0, lsr #10
 34c:	054a1a03 	strbeq	r1, [sl, #-2563]	@ 0xfffff5fd
 350:	08051302 	stmdaeq	r5, {r1, r8, r9, ip}
 354:	05051406 	streq	r1, [r5, #-1030]	@ 0xfffffbfa
 358:	0606053a 			@ <UNDEFINED> instruction: 0x0606053a
 35c:	1a03052c 	bne	c1814 <startup-0x1ff3e7ec>
 360:	01061c05 	tsteq	r6, r5, lsl #24
 364:	0e12052e 	cfmul64eq	mvdx0, mvdx2, mvdx14
 368:	02260105 	eoreq	r0, r6, #1073741825	@ 0x40000001
 36c:	01010004 	tsteq	r1, r4
 370:	05000105 	streq	r0, [r0, #-261]	@ 0xfffffefb
 374:	0001ac02 	andeq	sl, r1, r2, lsl #24
 378:	01e70320 	mvneq	r0, r0, lsr #6
 37c:	13020501 	movwne	r0, #9473	@ 0x2501
 380:	11060105 	tstne	r6, r5, lsl #2
 384:	05670205 	strbeq	r0, [r7, #-517]!	@ 0xfffffdfb
 388:	2e59031c 	mrccs	3, 2, r0, cr9, cr12, {0}
 38c:	211d0521 	tstcs	sp, r1, lsr #10
 390:	03180521 	tsteq	r8, #138412032	@ 0x8400000
 394:	1c052072 	stcne	0, cr2, [r5], {114}	@ 0x72
 398:	2f2e0b03 	svccs	0x002e0b03
 39c:	21211d05 			@ <UNDEFINED> instruction: 0x21211d05
 3a0:	73032f05 	movwvc	r2, #16133	@ 0x3f05
 3a4:	1c054b20 			@ <UNDEFINED> instruction: 0x1c054b20
 3a8:	05200903 	streq	r0, [r0, #-2307]!	@ 0xfffff6fd
 3ac:	2077032f 	rsbscs	r0, r7, pc, lsr #6
 3b0:	02000205 	andeq	r0, r0, #1342177280	@ 0x50000000
 3b4:	03060104 	movweq	r0, #24836	@ 0x6104
 3b8:	03052031 	movweq	r2, #20529	@ 0x5031
 3bc:	01040200 	mrseq	r0, R12_usr
 3c0:	000f0514 	andeq	r0, pc, r4, lsl r5	@ <UNPREDICTABLE>
 3c4:	03010402 	movweq	r0, #5122	@ 0x1402
 3c8:	1805015e 	stmdane	r5, {r1, r2, r3, r4, r6, r8}
 3cc:	01040200 	mrseq	r0, R12_usr
 3d0:	00030514 	andeq	r0, r3, r4, lsl r5
 3d4:	13010402 	movwne	r0, #5122	@ 0x1402
 3d8:	02000605 	andeq	r0, r0, #5242880	@ 0x500000
 3dc:	68030104 	stmdavs	r3, {r2, r8}
 3e0:	00020501 	andeq	r0, r2, r1, lsl #10
 3e4:	14010402 	strne	r0, [r1], #-1026	@ 0xfffffbfe
 3e8:	02001305 	andeq	r1, r0, #335544320	@ 0x14000000
 3ec:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
 3f0:	0402002b 	streq	r0, [r2], #-43	@ 0xffffffd5
 3f4:	00010601 	andeq	r0, r1, r1, lsl #12
 3f8:	4a010402 	bmi	41408 <startup-0x1ffbebf8>
 3fc:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
 400:	03060104 	movweq	r0, #24836	@ 0x6104
 404:	0f050118 	svceq	0x00050118
 408:	01040200 	mrseq	r0, R12_usr
 40c:	05016f03 	streq	r6, [r1, #-3843]	@ 0xfffff0fd
 410:	04020002 	streq	r0, [r2], #-2
 414:	05051601 	streq	r1, [r5, #-1537]	@ 0xfffff9ff
 418:	01040200 	mrseq	r0, R12_usr
 41c:	2f050106 	svccs	0x00050106
 420:	053c7703 	ldreq	r7, [ip, #-1795]!	@ 0xfffff8fd
 424:	2013030b 	andscs	r0, r3, fp, lsl #6
 428:	6d032f05 	stcvs	15, cr2, [r3, #-20]	@ 0xffffffec
 42c:	1e2b0520 	cfsh64ne	mvdx0, mvdx11, #16
 430:	0602052e 	streq	r0, [r2], -lr, lsr #10
 434:	05010c03 	streq	r0, [r1, #-3075]	@ 0xfffff3fd
 438:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
 43c:	052f0602 	streq	r0, [pc, #-1538]!	@ fffffe42 <segments+0xdffffbde>
 440:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
 444:	052f0602 	streq	r0, [pc, #-1538]!	@ fffffe4a <segments+0xdffffbe6>
 448:	2e010605 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx5
 44c:	03060305 	movweq	r0, #25349	@ 0x6305
 450:	0517010b 	ldreq	r0, [r7, #-267]	@ 0xfffffef5
 454:	01600306 	cmneq	r0, r6, lsl #6
 458:	05140205 	ldreq	r0, [r4, #-517]	@ 0xfffffdfb
 45c:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
 460:	062e0613 			@ <UNDEFINED> instruction: 0x062e0613
 464:	06200501 	strteq	r0, [r0], -r1, lsl #10
 468:	05011503 	streq	r1, [r1, #-1283]	@ 0xfffffafd
 46c:	03050118 	movweq	r0, #20760	@ 0x5118
 470:	03060513 	movweq	r0, #25875	@ 0x6513
 474:	02050168 	andeq	r0, r5, #104, 2
 478:	13070514 	movwne	r0, #29972	@ 0x7514
 47c:	05011705 	streq	r1, [r1, #-1797]	@ 0xfffff8fb
 480:	0511062b 	ldreq	r0, [r1, #-1579]	@ 0xfffff9d5
 484:	0c030602 	stceq	6, cr0, [r3], {2}
 488:	06050558 			@ <UNDEFINED> instruction: 0x06050558
 48c:	07053c01 	streq	r3, [r5, -r1, lsl #24]
 490:	01750306 	cmneq	r5, r6, lsl #6
 494:	01060a05 	tsteq	r6, r5, lsl #20
 498:	2f060705 	svccs	0x00060705
 49c:	01060a05 	tsteq	r6, r5, lsl #20
 4a0:	2a060605 	bcs	181cbc <startup-0x1fe7e344>
 4a4:	05170705 	ldreq	r0, [r7, #-1797]	@ 0xfffff8fb
 4a8:	2f050117 	svccs	0x00050117
 4ac:	4a200106 	bmi	8008cc <startup-0x1f7ff734>
 4b0:	03062005 	movweq	r2, #24581	@ 0x6005
 4b4:	18050112 	stmdane	r5, {r1, r4, r8}
 4b8:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
 4bc:	0f030606 	svceq	0x00030606
 4c0:	14020501 	strne	r0, [r2], #-1281	@ 0xfffffaff
 4c4:	17052006 	strne	r2, [r5, -r6]
 4c8:	015b0306 	cmpeq	fp, r6, lsl #6
 4cc:	20050106 	andcs	r0, r5, r6, lsl #2
 4d0:	01140306 	tsteq	r4, r6, lsl #6
 4d4:	05011805 	streq	r1, [r1, #-2053]	@ 0xfffff7fb
 4d8:	06051303 	streq	r1, [r5], -r3, lsl #6
 4dc:	05016803 	streq	r6, [r1, #-2051]	@ 0xfffff7fd
 4e0:	07051402 	streq	r1, [r5, -r2, lsl #8]
 4e4:	13170513 	tstne	r7, #79691776	@ 0x4c00000
 4e8:	11062f05 	tstne	r6, r5, lsl #30
 4ec:	06170582 	ldreq	r0, [r7], -r2, lsl #11
 4f0:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
 4f4:	13030620 	movwne	r0, #13856	@ 0x3620
 4f8:	01180501 	tsteq	r8, r1, lsl #10
 4fc:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
 500:	01680306 	cmneq	r8, r6, lsl #6
 504:	05140205 	ldreq	r0, [r4, #-517]	@ 0xfffffdfb
 508:	06131307 	ldreq	r1, [r3], -r7, lsl #6
 50c:	012f0501 			@ <UNDEFINED> instruction: 0x012f0501
 510:	13032005 	movwne	r2, #12293	@ 0x3005
 514:	06030566 	streq	r0, [r3], -r6, ror #10
 518:	030f0523 	movweq	r0, #62755	@ 0xf523
 51c:	0205016f 	andeq	r0, r5, #-1073741797	@ 0xc000001b
 520:	00030216 	andeq	r0, r3, r6, lsl r2
 524:	Address 0x524 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5059544f 	subspl	r5, r9, pc, asr #8
   4:	4c5f5245 	lfmmi	f5, 2, [pc], {69}	@ 0x45
   8:	6b00574f 	blvs	15d4c <startup-0x1ffea2b4>
   c:	61567965 	cmpvs	r6, r5, ror #18
  10:	0065756c 	rsbeq	r7, r5, ip, ror #10
  14:	52746573 	rsbspl	r6, r4, #482344960	@ 0x1cc00000
  18:	7453776f 	ldrbvc	r7, [r3], #-1903	@ 0xfffff891
  1c:	00657461 	rsbeq	r7, r5, r1, ror #8
  20:	306e6970 	rsbcc	r6, lr, r0, ror r9
  24:	6e697000 	cdpvs	0, 6, cr7, cr9, cr0, {0}
  28:	69700031 	ldmdbvs	r0!, {r0, r4, r5}^
  2c:	7000326e 	andvc	r3, r0, lr, ror #4
  30:	00336e69 	eorseq	r6, r3, r9, ror #28
  34:	346e6970 	strbtcc	r6, [lr], #-2416	@ 0xfffff690
  38:	6e697000 	cdpvs	0, 6, cr7, cr9, cr0, {0}
  3c:	69700035 	ldmdbvs	r0!, {r0, r2, r4, r5}^
  40:	7000366e 	andvc	r3, r0, lr, ror #12
  44:	00376e69 	eorseq	r6, r7, r9, ror #28
  48:	386e6970 	stmdacc	lr!, {r4, r5, r6, r8, fp, sp, lr}^
  4c:	6e697000 	cdpvs	0, 6, cr7, cr9, cr0, {0}
  50:	754f0039 	strbvc	r0, [pc, #-57]	@ 1f <startup-0x1fffffe1>
  54:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
  58:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
  5c:	0070614d 	rsbseq	r6, r0, sp, asr #2
  60:	74726f50 	ldrbtvc	r6, [r2], #-3920	@ 0xfffff0b0
  64:	65646f4d 	strbvs	r6, [r4, #-3917]!	@ 0xfffff0b3
  68:	0070614d 	rsbseq	r6, r0, sp, asr #2
  6c:	5f524449 	svcpl	0x00524449
  70:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
  74:	50555000 	subspl	r5, r5, r0
  78:	4c5f5244 	lfmmi	f5, 2, [pc], {68}	@ 0x44
  7c:	5000574f 	andpl	r5, r0, pc, asr #14
  80:	556c6c75 	strbpl	r6, [ip, #-3189]!	@ 0xfffff38b
  84:	6c755070 	ldclvs	0, cr5, [r5], #-448	@ 0xfffffe40
  88:	776f446c 	strbvc	r4, [pc, -ip, ror #8]!
  8c:	70614d6e 	rsbvc	r4, r1, lr, ror #26
  90:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
  94:	00524550 	subseq	r4, r2, r0, asr r5
  98:	45444f4d 	strbmi	r4, [r4, #-3917]	@ 0xfffff0b3
  9c:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
  a0:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
  a4:	63206465 			@ <UNDEFINED> instruction: 0x63206465
  a8:	00726168 	rsbseq	r6, r2, r8, ror #2
  ac:	73756e75 	cmnvc	r5, #1872	@ 0x750
  b0:	00306465 	eorseq	r6, r0, r5, ror #8
  b4:	5f707061 	svcpl	0x00707061
  b8:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
  bc:	52444f00 	subpl	r4, r4, #0, 30
  c0:	4749485f 	smlsldmi	r4, r9, pc, r8	@ <UNPREDICTABLE>
  c4:	534f0048 	movtpl	r0, #61512	@ 0xf048
  c8:	44454550 	strbmi	r4, [r5], #-1360	@ 0xfffffab0
  cc:	49485f52 	stmdbmi	r8, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
  d0:	44004847 	strmi	r4, [r0], #-2119	@ 0xfffff7b9
  d4:	74535c3a 	ldrbvc	r5, [r3], #-3130	@ 0xfffff3c6
  d8:	65696475 	strbvs	r6, [r9, #-1141]!	@ 0xfffffb8b
  dc:	614d5c73 	hvcvs	54723	@ 0xd5c3
  e0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
  e4:	724f2d65 	subvc	r2, pc, #6464	@ 0x1940
  e8:	746e6569 	strbtvc	r6, [lr], #-1385	@ 0xfffffa97
  ec:	502d6465 	eorpl	r6, sp, r5, ror #8
  f0:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
  f4:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
  f8:	575c676e 	ldrbpl	r6, [ip, -lr, ror #14]
  fc:	5c6b726f 	sfmpl	f7, 2, [fp], #-444	@ 0xfffffe44
 100:	6863614d 	stmdavs	r3!, {r0, r2, r3, r6, r8, sp, lr}^
 104:	2d656e69 	stclcs	14, cr6, [r5, #-420]!	@ 0xfffffe5c
 108:	6569724f 	strbvs	r7, [r9, #-591]!	@ 0xfffffdb1
 10c:	6465746e 	strbtvs	r7, [r5], #-1134	@ 0xfffffb92
 110:	6f72502d 	svcvs	0x0072502d
 114:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
 118:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 11c:	7574532d 	ldrbvc	r5, [r4, #-813]!	@ 0xfffffcd3
 120:	73656964 	cmnvc	r5, #100, 18	@ 0x190000
 124:	465c435c 			@ <UNDEFINED> instruction: 0x465c435c
 128:	7472756f 	ldrbtvc	r7, [r2], #-1391	@ 0xfffffa91
 12c:	79725468 	ldmdbvc	r2!, {r3, r5, r6, sl, ip, lr}^
 130:	322e325c 	eorcc	r3, lr, #92, 4	@ 0xc0000005
 134:	79654b2d 	stmdbvc	r5!, {r0, r2, r3, r5, r8, r9, fp, lr}^
 138:	72616f62 	rsbvc	r6, r1, #392	@ 0x188
 13c:	68730064 	ldmdavs	r3!, {r2, r5, r6}^
 140:	2074726f 	rsbscs	r7, r4, pc, ror #4
 144:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 148:	64656e67 	strbtvs	r6, [r5], #-3687	@ 0xfffff199
 14c:	746e6920 	strbtvc	r6, [lr], #-2336	@ 0xfffff6e0
 150:	726f7000 	rsbvc	r7, pc, #0
 154:	6f004474 	svcvs	0x00004474
 158:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
 15c:	70795474 	rsbsvc	r5, r9, r4, ror r4
 160:	656e0065 	strbvs	r0, [lr, #-101]!	@ 0xffffff9b
 164:	61745377 	cmnvs	r4, r7, ror r3
 168:	4d006574 	cfstr32mi	mvfx6, [r0, #-464]	@ 0xfffffe30
 16c:	5245444f 	subpl	r4, r5, #1325400064	@ 0x4f000000
 170:	4749485f 	smlsldmi	r4, r9, pc, r8	@ <UNPREDICTABLE>
 174:	4f4d0048 	svcmi	0x004d0048
 178:	5f524544 	svcpl	0x00524544
 17c:	00574f4c 	subseq	r4, r7, ip, asr #30
 180:	5059544f 	subspl	r5, r9, pc, asr #8
 184:	485f5245 	ldmdami	pc, {r0, r2, r6, r9, ip, lr}^	@ <UNPREDICTABLE>
 188:	00484749 	subeq	r4, r8, r9, asr #14
 18c:	42656e4f 	rsbmi	r6, r5, #1264	@ 0x4f0
 190:	65507469 	ldrbvs	r7, [r0, #-1129]	@ 0xfffffb97
 194:	6e695072 	mcrvs	0, 3, r5, cr9, cr2, {3}
 198:	74756f00 	ldrbtvc	r6, [r5], #-3840	@ 0xfffff100
 19c:	67655337 			@ <UNDEFINED> instruction: 0x67655337
 1a0:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
 1a4:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
 1a8:	534f0073 	movtpl	r0, #61555	@ 0xf073
 1ac:	44454550 	strbmi	r4, [r5], #-1360	@ 0xfffffab0
 1b0:	616d0052 	qdsubvs	r0, r2, sp
 1b4:	4f006e69 	svcmi	0x00006e69
 1b8:	4c5f5244 	lfmmi	f5, 2, [pc], {68}	@ 0x44
 1bc:	4700574f 	strmi	r5, [r0, -pc, asr #14]
 1c0:	004f4950 	subeq	r4, pc, r0, asr r9	@ <UNPREDICTABLE>
 1c4:	7074756f 	rsbsvc	r7, r4, pc, ror #10
 1c8:	61447475 	hvcvs	18245	@ 0x4745
 1cc:	50006174 	andpl	r6, r0, r4, ror r1
 1d0:	52445055 	subpl	r5, r4, #85	@ 0x55
 1d4:	4749485f 	smlsldmi	r4, r9, pc, r8	@ <UNPREDICTABLE>
 1d8:	74730048 	ldrbtvc	r0, [r3], #-72	@ 0xffffffb8
 1dc:	75747261 	ldrbvc	r7, [r4, #-609]!	@ 0xfffffd9f
 1e0:	6f6d0070 	svcvs	0x006d0070
 1e4:	70006564 	andvc	r6, r0, r4, ror #10
 1e8:	556c6c75 	strbpl	r6, [ip, #-3189]!	@ 0xfffff38b
 1ec:	6c755070 	ldclvs	0, cr5, [r5], #-448	@ 0xfffffe40
 1f0:	776f446c 	strbvc	r4, [pc, -ip, ror #8]!
 1f4:	3a44006e 	bcc	11003b4 <startup-0x1eeffc4c>
 1f8:	7574532f 	ldrbvc	r5, [r4, #-815]!	@ 0xfffffcd1
 1fc:	73656964 	cmnvc	r5, #100, 18	@ 0x190000
 200:	63614d2f 	cmnvs	r1, #3008	@ 0xbc0
 204:	656e6968 	strbvs	r6, [lr, #-2408]!	@ 0xfffff698
 208:	69724f2d 	ldmdbvs	r2!, {r0, r2, r3, r5, r8, r9, sl, fp, lr}^
 20c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	@ 0xfffff19b
 210:	72502d64 	subsvc	r2, r0, #100, 26	@ 0x1900
 214:	6172676f 	cmnvs	r2, pc, ror #14
 218:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
 21c:	6f572f67 	svcvs	0x00572f67
 220:	4d2f6b72 	vstmdbmi	pc!, {d6-<overflow reg d62>}
 224:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 228:	4f2d656e 	svcmi	0x002d656e
 22c:	6e656972 			@ <UNDEFINED> instruction: 0x6e656972
 230:	2d646574 	cfstr64cs	mvdx6, [r4, #-464]!	@ 0xfffffe30
 234:	676f7250 			@ <UNDEFINED> instruction: 0x676f7250
 238:	6d6d6172 	stfvse	f6, [sp, #-456]!	@ 0xfffffe38
 23c:	2d676e69 	stclcs	14, cr6, [r7, #-420]!	@ 0xfffffe5c
 240:	64757453 	ldrbtvs	r7, [r5], #-1107	@ 0xfffffbad
 244:	2f736569 	svccs	0x00736569
 248:	6f462f43 	svcvs	0x00462f43
 24c:	68747275 	ldmdavs	r4!, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^
 250:	2f797254 	svccs	0x00797254
 254:	2d322e32 	ldccs	14, cr2, [r2, #-200]!	@ 0xffffff38
 258:	6279654b 	rsbsvs	r6, r9, #314572800	@ 0x12c00000
 25c:	6472616f 	ldrbtvs	r6, [r2], #-367	@ 0xfffffe91
 260:	6174732f 	cmnvs	r4, pc, lsr #6
 264:	70757472 	rsbsvc	r7, r5, r2, ror r4
 268:	5000632e 	andpl	r6, r0, lr, lsr #6
 26c:	52445055 	subpl	r5, r4, #85	@ 0x55
 270:	74756f00 	ldrbtvc	r6, [r5], #-3840	@ 0xfffff100
 274:	53747570 	cmnpl	r4, #112, 10	@ 0x1c000000
 278:	64656570 	strbtvs	r6, [r5], #-1392	@ 0xfffffa90
 27c:	554e4700 	strbpl	r4, [lr, #-1792]	@ 0xfffff900
 280:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
 284:	2e323120 	rsfcssp	f3, f2, f0
 288:	20312e33 	eorscs	r2, r1, r3, lsr lr
 28c:	33323032 	teqcc	r2, #50	@ 0x32
 290:	36323630 			@ <UNDEFINED> instruction: 0x36323630
 294:	746d2d20 	strbtvc	r2, [sp], #-3360	@ 0xfffff2e0
 298:	626d7568 	rsbvs	r7, sp, #104, 10	@ 0x1a000000
 29c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
 2a0:	74616f6c 	strbtvc	r6, [r1], #-3948	@ 0xfffff094
 2a4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
 2a8:	666f733d 			@ <UNDEFINED> instruction: 0x666f733d
 2ac:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	@ 0xfffffe30
 2b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 2b4:	6d72613d 	ldfvse	f6, [r2, #-244]!	@ 0xffffff0c
 2b8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	@ 0xfffffe28
 2bc:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 2c0:	20324f2d 	eorscs	r4, r2, sp, lsr #30
 2c4:	6474732d 	ldrbtvs	r7, [r4], #-813	@ 0xfffffcd3
 2c8:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 2cc:	52444900 	subpl	r4, r4, #0, 18
 2d0:	574f4c5f 	smlsldpl	r4, pc, pc, ip	@ <UNPREDICTABLE>
 2d4:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 2d8:	6e690062 	cdpvs	0, 6, cr0, cr9, cr2, {3}
 2dc:	44747570 	ldrbtmi	r7, [r4], #-1392	@ 0xfffffa90
 2e0:	00617461 	rsbeq	r7, r1, r1, ror #8
 2e4:	756c6f63 	strbvc	r6, [ip, #-3939]!	@ 0xfffff09d
 2e8:	72506e6d 	subsvc	r6, r0, #1744	@ 0x6d0
 2ec:	65737365 	ldrbvs	r7, [r3, #-869]!	@ 0xfffffc9b
 2f0:	69700064 	ldmdbvs	r0!, {r2, r5, r6}^
 2f4:	0030316e 	eorseq	r3, r0, lr, ror #2
 2f8:	316e6970 	smccc	59024	@ 0xe690
 2fc:	69700031 	ldmdbvs	r0!, {r0, r4, r5}^
 300:	0032316e 	eorseq	r3, r2, lr, ror #2
 304:	316e6970 	smccc	59024	@ 0xe690
 308:	69700033 	ldmdbvs	r0!, {r0, r1, r4, r5}^
 30c:	0034316e 	eorseq	r3, r4, lr, ror #2
 310:	316e6970 	smccc	59024	@ 0xe690
 314:	534f0035 	movtpl	r0, #61493	@ 0xf035
 318:	44454550 	strbmi	r4, [r5], #-1360	@ 0xfffffab0
 31c:	4f4c5f52 	svcmi	0x004c5f52
 320:	754f0057 	strbvc	r0, [pc, #-87]	@ 2d1 <startup-0x1ffffd2f>
 324:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
 328:	65657053 	strbvs	r7, [r5, #-83]!	@ 0xffffffad
 32c:	70614d64 	rsbvc	r4, r1, r4, ror #26
 330:	6f775400 	svcvs	0x00775400
 334:	73746942 	cmnvc	r4, #1081344	@ 0x108000
 338:	50726550 	rsbspl	r6, r2, r0, asr r5
 33c:	72006e69 	andvc	r6, r0, #1680	@ 0x690
 340:	43646165 	cmnmi	r4, #1073741849	@ 0x40000019
 344:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	@ 0xfffffe44
 348:	Address 0x348 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	72412820 	subvc	r2, r1, #32, 16	@ 0x200000
   8:	4e47206d 	cdpmi	0, 4, cr2, cr7, cr13, {3}
   c:	6f542055 	svcvs	0x00542055
  10:	68636c6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^
  14:	206e6961 	rsbcs	r6, lr, r1, ror #18
  18:	332e3231 			@ <UNDEFINED> instruction: 0x332e3231
  1c:	6c65522e 	sfmvs	f5, 2, [r5], #-184	@ 0xffffff48
  20:	42282031 	eormi	r2, r8, #49	@ 0x31
  24:	646c6975 	strbtvs	r6, [ip], #-2421	@ 0xfffff68b
  28:	6d726120 	ldfvse	f6, [r2, #-128]!	@ 0xffffff80
  2c:	2e32312d 	rsfcssp	f3, f2, #5.0
  30:	29293533 	stmdbcs	r9!, {r0, r1, r4, r5, r8, sl, ip, sp}
  34:	2e323120 	rsfcssp	f3, f2, f0
  38:	20312e33 	eorscs	r2, r1, r3, lsr lr
  3c:	33323032 	teqcc	r2, #50	@ 0x32
  40:	36323630 			@ <UNDEFINED> instruction: 0x36323630
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	@ 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	@ 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	@ 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x28 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000a 	andeq	r0, r0, sl
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000028 	andeq	r0, r0, r8, lsr #32
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	20000038 	andcs	r0, r0, r8, lsr r0
  3c:	00000068 	andeq	r0, r0, r8, rrx
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	200000a0 	andcs	r0, r0, r0, lsr #1
  4c:	00000034 	andeq	r0, r0, r4, lsr r0
  50:	00000024 	andeq	r0, r0, r4, lsr #32
  54:	00000000 	andeq	r0, r0, r0
  58:	200000d4 	ldrdcs	r0, [r0], -r4
  5c:	000000c0 	andeq	r0, r0, r0, asr #1
  60:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
  64:	86048505 	strhi	r8, [r4], -r5, lsl #10
  68:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  6c:	240e4601 	strcs	r4, [lr], #-1537	@ 0xfffff9ff
  70:	08890988 	stmeq	r9, {r3, r7, r8, fp}
  74:	068b078a 	streq	r0, [fp], sl, lsl #15
  78:	0000000c 	andeq	r0, r0, ip
  7c:	00000000 	andeq	r0, r0, r0
  80:	20000194 	mulcs	r0, r4, r1
  84:	00000018 	andeq	r0, r0, r8, lsl r0
  88:	00000028 	andeq	r0, r0, r8, lsr #32
  8c:	00000000 	andeq	r0, r0, r0
  90:	200001ac 	andcs	r0, r0, ip, lsr #3
  94:	000000a4 	andeq	r0, r0, r4, lsr #1
  98:	83180e41 	tsthi	r8, #1040	@ 0x410
  9c:	85058406 	strhi	r8, [r5, #-1030]	@ 0xfffffbfa
  a0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
  a4:	45018e02 	strmi	r8, [r1, #-3586]	@ 0xfffff1fe
  a8:	0a88280e 	beq	fe20a0e8 <segments+0xde209e84>
  ac:	088a0989 	stmeq	sl, {r0, r3, r7, r8, fp}
  b0:	0000078b 	andeq	r0, r0, fp, lsl #15
